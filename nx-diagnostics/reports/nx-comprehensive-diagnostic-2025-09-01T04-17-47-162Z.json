{
  "timestamp": "2025-09-01T04-17-47-162Z",
  "summary": {
    "totalProjects": 37,
    "totalIssues": 47,
    "totalRecommendations": 7,
    "dependencyAnalysis": {
      "projects": 37,
      "circularDependencies": 0,
      "missingDependencies": 0,
      "isolatedProjects": 14
    },
    "testAnalysis": {
      "projects": 33,
      "projectsWithTests": 26,
      "projectsWithoutTests": 7,
      "coveragePercentage": "84.6"
    },
    "buildAnalysis": {
      "projects": 33,
      "issues": 40,
      "projectsWithBuild": 31,
      "projectsWithLint": 17,
      "projectsWithTest": 24
    },
    "recommendations": {
      "dependencies": [
        {
          "type": "integrate-isolated-projects",
          "priority": "low",
          "title": "Integrate Isolated Projects",
          "description": "14 projects have no dependencies. Consider integration opportunities.",
          "actions": [
            "Review if these projects should be integrated with others",
            "Consider if they represent reusable utilities that could be shared",
            "Evaluate if they should be removed if no longer needed"
          ],
          "affectedProjects": [
            "rag-document-processor",
            "pubsub-workflows",
            "reviews-api",
            "cloud-workflows",
            "social-api",
            "cms-api",
            "crm-api",
            "dbt-models",
            "utils-secrets-manager",
            "schemas",
            "common-types",
            "ui-components",
            "build-tools",
            "agents-sdk"
          ]
        }
      ],
      "tests": [
        {
          "type": "add-tests-high-priority",
          "priority": "high",
          "title": "Add Unit Tests for Applications (5 projects)",
          "description": "Critical applications are missing unit tests. Applications should have comprehensive test coverage.",
          "actions": [
            "Generate Jest/Vitest configuration for each application",
            "Create basic test files for main functionality",
            "Set up test runners in project.json targets",
            "Add test scripts to package.json"
          ],
          "affectedProjects": [
            "frontend-agents",
            "cms-api",
            "reviews-api",
            "crm-api",
            "social-api"
          ],
          "fixScript": "nx-diagnostics/scripts/fixes/add-tests-apps.sh"
        },
        {
          "type": "add-tests-medium-priority",
          "priority": "medium",
          "title": "Add Unit Tests for Libraries (2 projects)",
          "description": "Shared libraries should have unit tests to ensure reliability and prevent regressions.",
          "actions": [
            "Generate Jest/Vitest configuration for each library",
            "Create unit tests for exported functions and classes",
            "Set up test coverage reporting",
            "Add test targets to project.json"
          ],
          "affectedProjects": [
            "gcp-core",
            "gcp"
          ],
          "fixScript": "nx-diagnostics/scripts/fixes/add-tests-libs.sh"
        }
      ],
      "builds": [
        {
          "type": "add-missing-build-targets",
          "priority": "high",
          "title": "Add Missing Build Targets (2 projects)",
          "description": "Several projects are missing build targets in their project.json files.",
          "actions": [
            "Add build targets with appropriate executors",
            "Configure output directories",
            "Set up proper caching and inputs",
            "Test build process for each project"
          ],
          "affectedProjects": [
            "agents-sdk",
            "build-tools"
          ],
          "fixScript": "nx-diagnostics/scripts/fixes/add-build-targets.sh"
        },
        {
          "type": "add-missing-test-configs",
          "priority": "high",
          "title": "Add Missing Test Configurations (9 projects)",
          "description": "Several projects are missing test configurations.",
          "actions": [
            "Add test targets to project.json files",
            "Choose appropriate test executor (Jest or Vitest)",
            "Configure test file patterns",
            "Set up test environment and dependencies"
          ],
          "affectedProjects": [
            "frontend-agents",
            "agents",
            "cms-api",
            "reviews-api",
            "crm-api",
            "social-api",
            "gcp-core",
            "agents-lib",
            "gcp"
          ],
          "fixScript": "nx-diagnostics/scripts/fixes/add-test-configs.sh"
        },
        {
          "type": "add-missing-lint-configs",
          "priority": "medium",
          "title": "Add Missing Lint Configurations (15 projects)",
          "description": "Several projects are missing ESLint configurations.",
          "actions": [
            "Add lint targets to project.json files",
            "Configure ESLint with appropriate rules",
            "Set up lint caching and inputs",
            "Integrate with Nx lint command"
          ],
          "affectedProjects": [
            "cms-api",
            "reviews-api",
            "crm-api",
            "social-api",
            "bq-agent",
            "looker-agent",
            "gemini-orchestrator",
            "crm-agent",
            "reviews-agent",
            "content-agent",
            "api-clients",
            "gcp-auth",
            "dbt-models",
            "schemas",
            "env"
          ],
          "fixScript": "nx-diagnostics/scripts/fixes/add-lint-configs.sh"
        },
        {
          "type": "standardize-executors",
          "priority": "low",
          "title": "Standardize Build Executors",
          "description": "Multiple build executors are being used across projects.",
          "actions": [
            "Choose a primary build executor for each project type",
            "Migrate projects to use consistent executors",
            "Update documentation and CI/CD configurations",
            "Ensure all executors are properly configured"
          ],
          "affectedProjects": [
            "looker-dashboards",
            "agents",
            "api",
            "gcp-core",
            "ui-components",
            "adk",
            "bq-agent",
            "looker-agent",
            "agents-lib",
            "gemini-orchestrator",
            "crm-agent",
            "reviews-agent",
            "content-agent",
            "api-clients",
            "gcp-auth",
            "monitoring",
            "common-types",
            "security",
            "dbt-models",
            "schemas",
            "env",
            "mcp",
            "gcp",
            "frontend-agents",
            "event-parser",
            "cms-api",
            "reviews-api",
            "crm-api",
            "social-api",
            "signals",
            "utils-secrets-manager"
          ],
          "fixScript": "nx-diagnostics/scripts/fixes/standardize-executors.sh"
        }
      ]
    }
  },
  "implementationPlan": {
    "phases": [
      {
        "name": "Phase 1: Critical Fixes",
        "priority": "high",
        "description": "Fix critical issues that prevent the workspace from functioning properly",
        "issues": [
          "Add missing test configurations"
        ],
        "estimatedTime": "2-4 hours",
        "scripts": [
          "nx-diagnostics/scripts/implementation/phase1-critical-fixes.sh"
        ]
      },
      {
        "name": "Phase 2: Test Coverage Implementation",
        "priority": "high",
        "description": "Add comprehensive unit tests to all projects missing test coverage",
        "issues": [
          "Add tests to 7 projects without tests",
          "Configure test runners and frameworks",
          "Set up test environments and dependencies"
        ],
        "estimatedTime": "4-8 hours",
        "scripts": [
          "nx-diagnostics/scripts/implementation/phase2-test-coverage.sh"
        ]
      },
      {
        "name": "Phase 3: Build Configuration Fixes",
        "priority": "medium",
        "description": "Fix build configuration issues and standardize executors",
        "issues": [
          "Fix 40 configuration issues",
          "Standardize build, lint, and test executors",
          "Add missing targets and configurations"
        ],
        "estimatedTime": "3-6 hours",
        "scripts": [
          "nx-diagnostics/scripts/implementation/phase3-build-config.sh"
        ]
      },
      {
        "name": "Phase 4: Dependency Optimization",
        "priority": "medium",
        "description": "Optimize project dependencies and integrate isolated projects",
        "issues": [
          "Integrate 14 isolated projects",
          "Review and optimize dependency chains",
          "Ensure proper project relationships"
        ],
        "estimatedTime": "2-4 hours",
        "scripts": [
          "nx-diagnostics/scripts/implementation/phase4-dependency-optimization.sh"
        ]
      },
      {
        "name": "Phase 5: Quality Assurance",
        "priority": "medium",
        "description": "Run comprehensive tests and validate all fixes",
        "issues": [
          "Run all tests and ensure they pass",
          "Validate build configurations",
          "Test dependency resolution",
          "Run linting and formatting checks"
        ],
        "estimatedTime": "1-2 hours",
        "scripts": [
          "nx-diagnostics/scripts/implementation/phase5-qa-validation.sh"
        ]
      }
    ],
    "totalEstimatedTime": 18,
    "riskAssessment": {
      "level": "medium",
      "factors": [
        "Moderate number of issues to fix"
      ],
      "mitigationStrategies": [
        "Create backup branch before implementing changes",
        "Implement fixes incrementally, testing after each phase",
        "Run comprehensive tests after each phase",
        "Have rollback plan ready"
      ]
    }
  },
  "individualReports": {
    "dependencies": {
      "timestamp": "2025-09-01T04-17-47-181Z",
      "analysis": {
        "totalProjects": 37,
        "circularDependencies": [],
        "missingDependencies": [],
        "dependencyPatterns": {
          "mostDependedOn": [
            {
              "project": "adk",
              "count": 4
            },
            {
              "project": "monitoring",
              "count": 4
            },
            {
              "project": "gcp",
              "count": 3
            },
            {
              "project": "gemini-orchestrator",
              "count": 2
            },
            {
              "project": "security",
              "count": 2
            }
          ],
          "leastDependedOn": [
            {
              "project": "looker-dashboards",
              "count": 1
            },
            {
              "project": "gcp-auth",
              "count": 1
            },
            {
              "project": "gcp-core",
              "count": 1
            },
            {
              "project": "signals",
              "count": 1
            },
            {
              "project": "reviews-agent",
              "count": 1
            }
          ],
          "dependencyChains": [],
          "isolatedProjects": [
            "rag-document-processor",
            "pubsub-workflows",
            "reviews-api",
            "cloud-workflows",
            "social-api",
            "cms-api",
            "crm-api",
            "dbt-models",
            "utils-secrets-manager",
            "schemas",
            "common-types",
            "ui-components",
            "build-tools",
            "agents-sdk"
          ]
        },
        "graph": {
          "graph": {
            "nodes": {
              "rag-document-processor": {
                "name": "rag-document-processor",
                "type": "app",
                "data": {
                  "root": "apps/cloud-functions/rag-processor",
                  "targets": {
                    "eslint:lint": {
                      "cache": true,
                      "options": {
                        "cwd": "apps/cloud-functions/rag-processor",
                        "env": {
                          "ESLINT_USE_FLAT_CONFIG": "false"
                        },
                        "command": "eslint ."
                      },
                      "inputs": [
                        "default",
                        "^default"
                      ],
                      "outputs": [
                        "{workspaceRoot}/dist/{projectRoot}"
                      ],
                      "metadata": {
                        "technologies": [
                          "eslint"
                        ],
                        "description": "Runs ESLint on project",
                        "help": {
                          "command": "pnpm exec eslint --help",
                          "example": {
                            "options": {
                              "max-warnings": 0
                            }
                          }
                        }
                      },
                      "executor": "nx:run-commands",
                      "configurations": {},
                      "parallelism": true
                    },
                    "start": {
                      "executor": "nx:run-script",
                      "options": {
                        "script": "start"
                      },
                      "metadata": {
                        "scriptContent": "node index.js",
                        "runCommand": "pnpm run start"
                      },
                      "configurations": {},
                      "parallelism": true
                    },
                    "dev": {
                      "executor": "nx:run-script",
                      "options": {
                        "script": "dev"
                      },
                      "metadata": {
                        "scriptContent": "tsc --watch",
                        "runCommand": "pnpm run dev"
                      },
                      "configurations": {},
                      "parallelism": true,
                      "cache": false
                    },
                    "nx-release-publish": {
                      "executor": "@nx/js:release-publish",
                      "dependsOn": [
                        "^nx-release-publish"
                      ],
                      "options": {},
                      "configurations": {},
                      "parallelism": true
                    }
                  },
                  "name": "rag-document-processor",
                  "projectType": "application",
                  "tags": [
                    "npm:public"
                  ],
                  "metadata": {
                    "targetGroups": {
                      "NPM Scripts": [
                        "start",
                        "dev"
                      ]
                    },
                    "description": "Cloud Function for processing documents in the RAG pipeline",
                    "js": {
                      "packageName": "rag-document-processor",
                      "packageMain": "index.js",
                      "isInPackageManagerWorkspaces": true
                    }
                  },
                  "implicitDependencies": []
                }
              },
              "pubsub-workflows": {
                "name": "pubsub-workflows",
                "type": "lib",
                "data": {
                  "root": "infra/workflows/pubsub-workflows",
                  "targets": {
                    "eslint:lint": {
                      "cache": true,
                      "options": {
                        "cwd": "infra/workflows/pubsub-workflows",
                        "command": "eslint ."
                      },
                      "inputs": [
                        "default",
                        "^default"
                      ],
                      "outputs": [
                        "{workspaceRoot}/dist/{projectRoot}"
                      ],
                      "metadata": {
                        "technologies": [
                          "eslint"
                        ],
                        "description": "Runs ESLint on project",
                        "help": {
                          "command": "pnpm exec eslint --help",
                          "example": {
                            "options": {
                              "max-warnings": 0
                            }
                          }
                        }
                      },
                      "executor": "nx:run-commands",
                      "configurations": {},
                      "parallelism": true
                    },
                    "jest:test": {
                      "options": {
                        "cwd": "infra/workflows/pubsub-workflows",
                        "env": {
                          "TS_NODE_COMPILER_OPTIONS": "{\"moduleResolution\":\"node10\",\"module\":\"commonjs\",\"customConditions\":null}"
                        },
                        "command": "jest"
                      },
                      "metadata": {
                        "technologies": [
                          "jest"
                        ],
                        "description": "Run Jest Tests",
                        "help": {
                          "command": "pnpm exec jest --help",
                          "example": {
                            "options": {
                              "coverage": true
                            }
                          }
                        }
                      },
                      "cache": true,
                      "inputs": [
                        "default",
                        "^default"
                      ],
                      "outputs": [
                        "{workspaceRoot}/dist/{projectRoot}"
                      ],
                      "executor": "nx:run-commands",
                      "configurations": {},
                      "parallelism": true
                    },
                    "build": {
                      "executor": "@nx/js:tsc",
                      "outputs": [
                        "{options.outputPath}"
                      ],
                      "options": {
                        "outputPath": "dist/infra/workflows/pubsub-workflows",
                        "main": "infra/workflows/pubsub-workflows/src/index.ts",
                        "tsConfig": "infra/workflows/pubsub-workflows/tsconfig.lib.json",
                        "assets": [
                          "infra/workflows/pubsub-workflows/*.md"
                        ]
                      },
                      "configurations": {
                        "production": {
                          "optimization": true,
                          "extractLicenses": true,
                          "generatePackageJson": true,
                          "sourceMap": false
                        },
                        "development": {
                          "optimization": false,
                          "sourceMap": true
                        }
                      },
                      "defaultConfiguration": "production",
                      "cache": true,
                      "dependsOn": [
                        "^build"
                      ],
                      "inputs": [
                        "production",
                        "^production"
                      ],
                      "parallelism": true
                    },
                    "test": {
                      "executor": "@nx/jest:jest",
                      "outputs": [
                        "{workspaceRoot}/coverage/{projectRoot}"
                      ],
                      "options": {
                        "jestConfig": "infra/workflows/pubsub-workflows/jest.config.ts"
                      },
                      "configurations": {
                        "ci": {
                          "ci": true,
                          "codeCoverage": true
                        }
                      },
                      "inputs": [
                        "default",
                        "^default",
                        "{workspaceRoot}/jest.preset.js"
                      ],
                      "cache": true,
                      "parallelism": true
                    }
                  },
                  "name": "pubsub-workflows",
                  "tags": [
                    "npm:private",
                    "domain:pubsub-workflows",
                    "type:library"
                  ],
                  "metadata": {
                    "targetGroups": {},
                    "js": {
                      "packageName": "pubsub-workflows",
                      "packageMain": "./src/index.js",
                      "isInPackageManagerWorkspaces": false
                    }
                  },
                  "$schema": "../../../node_modules/nx/schemas/project-schema.json",
                  "sourceRoot": "infra/workflows/pubsub-workflows/src",
                  "projectType": "library",
                  "namedInputs": {
                    "default": [
                      "{projectRoot}/**/*",
                      "sharedGlobals"
                    ],
                    "production": [
                      "default",
                      "!{projectRoot}/**/?(*.)+(spec|test).[jt]s?(x)?(.snap)",
                      "!{projectRoot}/tsconfig.spec.json",
                      "!{projectRoot}/jest.config.[jt]s",
                      "!{projectRoot}/.eslintrc.json"
                    ],
                    "sharedGlobals": []
                  },
                  "implicitDependencies": []
                }
              },
              "reviews-api": {
                "name": "reviews-api",
                "type": "app",
                "data": {
                  "root": "apps/cloud-functions/reviews-api",
                  "targets": {
                    "eslint:lint": {
                      "cache": true,
                      "options": {
                        "cwd": "apps/cloud-functions/reviews-api",
                        "env": {
                          "ESLINT_USE_FLAT_CONFIG": "false"
                        },
                        "command": "eslint ."
                      },
                      "inputs": [
                        "default",
                        "^default"
                      ],
                      "outputs": [
                        "{workspaceRoot}/dist/{projectRoot}"
                      ],
                      "metadata": {
                        "technologies": [
                          "eslint"
                        ],
                        "description": "Runs ESLint on project",
                        "help": {
                          "command": "pnpm exec eslint --help",
                          "example": {
                            "options": {
                              "max-warnings": 0
                            }
                          }
                        }
                      },
                      "executor": "nx:run-commands",
                      "configurations": {},
                      "parallelism": true
                    },
                    "build": {
                      "executor": "@nx/esbuild:esbuild",
                      "outputs": [
                        "{options.outputPath}"
                      ],
                      "defaultConfiguration": "production",
                      "options": {
                        "platform": "node",
                        "outputPath": "dist/apps/cloud-functions/reviews-api",
                        "format": [
                          "cjs"
                        ],
                        "bundle": false,
                        "main": "apps/cloud-functions/reviews-api/src/main.ts",
                        "tsConfig": "apps/cloud-functions/reviews-api/tsconfig.app.json",
                        "assets": [
                          "apps/cloud-functions/reviews-api/src/assets"
                        ],
                        "generatePackageJson": true,
                        "esbuildOptions": {
                          "sourcemap": true,
                          "outExtension": {
                            ".js": ".js"
                          }
                        }
                      },
                      "configurations": {
                        "production": {
                          "optimization": true,
                          "extractLicenses": true,
                          "generatePackageJson": true,
                          "sourceMap": false
                        },
                        "development": {
                          "optimization": false,
                          "sourceMap": true
                        }
                      },
                      "cache": true,
                      "dependsOn": [
                        "^build"
                      ],
                      "inputs": [
                        "production",
                        "^production"
                      ],
                      "parallelism": true
                    },
                    "prune-lockfile": {
                      "dependsOn": [
                        "build"
                      ],
                      "cache": true,
                      "executor": "@nx/js:prune-lockfile",
                      "outputs": [
                        "{workspaceRoot}/dist/apps/cloud-functions/reviews-api/package.json",
                        "{workspaceRoot}/dist/apps/cloud-functions/reviews-api/pnpm-lock.yaml"
                      ],
                      "options": {
                        "buildTarget": "build"
                      },
                      "configurations": {},
                      "parallelism": true
                    },
                    "copy-workspace-modules": {
                      "dependsOn": [
                        "build"
                      ],
                      "cache": true,
                      "outputs": [
                        "{workspaceRoot}/dist/apps/cloud-functions/reviews-api/workspace_modules"
                      ],
                      "executor": "@nx/js:copy-workspace-modules",
                      "options": {
                        "buildTarget": "build"
                      },
                      "configurations": {},
                      "parallelism": true
                    },
                    "prune": {
                      "dependsOn": [
                        "prune-lockfile",
                        "copy-workspace-modules"
                      ],
                      "executor": "nx:noop",
                      "configurations": {},
                      "options": {},
                      "parallelism": true
                    },
                    "serve": {
                      "continuous": true,
                      "executor": "@nx/js:node",
                      "defaultConfiguration": "development",
                      "dependsOn": [
                        "build"
                      ],
                      "options": {
                        "buildTarget": "reviews-api:build",
                        "runBuildTargetDependencies": false
                      },
                      "configurations": {
                        "development": {
                          "buildTarget": "reviews-api:build:development"
                        },
                        "production": {
                          "buildTarget": "reviews-api:build:production"
                        }
                      },
                      "parallelism": true,
                      "cache": false
                    }
                  },
                  "name": "reviews-api",
                  "$schema": "../../../node_modules/nx/schemas/project-schema.json",
                  "sourceRoot": "apps/cloud-functions/reviews-api/src",
                  "projectType": "application",
                  "tags": [
                    "domain:reviews-api",
                    "type:application"
                  ],
                  "namedInputs": {
                    "default": [
                      "{projectRoot}/**/*",
                      "sharedGlobals"
                    ],
                    "production": [
                      "default",
                      "!{projectRoot}/**/?(*.)+(spec|test).[jt]s?(x)?(.snap)",
                      "!{projectRoot}/tsconfig.spec.json",
                      "!{projectRoot}/jest.config.[jt]s",
                      "!{projectRoot}/.eslintrc.json"
                    ],
                    "sharedGlobals": []
                  },
                  "implicitDependencies": []
                }
              },
              "cloud-workflows": {
                "name": "cloud-workflows",
                "type": "lib",
                "data": {
                  "root": "infra/workflows/cloud-workflows",
                  "targets": {
                    "eslint:lint": {
                      "cache": true,
                      "options": {
                        "cwd": "infra/workflows/cloud-workflows",
                        "command": "eslint ."
                      },
                      "inputs": [
                        "default",
                        "^default"
                      ],
                      "outputs": [
                        "{workspaceRoot}/dist/{projectRoot}"
                      ],
                      "metadata": {
                        "technologies": [
                          "eslint"
                        ],
                        "description": "Runs ESLint on project",
                        "help": {
                          "command": "pnpm exec eslint --help",
                          "example": {
                            "options": {
                              "max-warnings": 0
                            }
                          }
                        }
                      },
                      "executor": "nx:run-commands",
                      "configurations": {},
                      "parallelism": true
                    },
                    "jest:test": {
                      "options": {
                        "cwd": "infra/workflows/cloud-workflows",
                        "env": {
                          "TS_NODE_COMPILER_OPTIONS": "{\"moduleResolution\":\"node10\",\"module\":\"commonjs\",\"customConditions\":null}"
                        },
                        "command": "jest"
                      },
                      "metadata": {
                        "technologies": [
                          "jest"
                        ],
                        "description": "Run Jest Tests",
                        "help": {
                          "command": "pnpm exec jest --help",
                          "example": {
                            "options": {
                              "coverage": true
                            }
                          }
                        }
                      },
                      "cache": true,
                      "inputs": [
                        "default",
                        "^default"
                      ],
                      "outputs": [
                        "{workspaceRoot}/dist/{projectRoot}"
                      ],
                      "executor": "nx:run-commands",
                      "configurations": {},
                      "parallelism": true
                    },
                    "build": {
                      "executor": "@nx/js:tsc",
                      "outputs": [
                        "{options.outputPath}"
                      ],
                      "options": {
                        "outputPath": "dist/infra/workflows/cloud-workflows",
                        "main": "infra/workflows/cloud-workflows/src/index.ts",
                        "tsConfig": "infra/workflows/cloud-workflows/tsconfig.lib.json",
                        "assets": [
                          "infra/workflows/cloud-workflows/*.md"
                        ]
                      },
                      "configurations": {
                        "production": {
                          "optimization": true,
                          "extractLicenses": true,
                          "generatePackageJson": true,
                          "sourceMap": false
                        },
                        "development": {
                          "optimization": false,
                          "sourceMap": true
                        }
                      },
                      "defaultConfiguration": "production",
                      "cache": true,
                      "dependsOn": [
                        "^build"
                      ],
                      "inputs": [
                        "production",
                        "^production"
                      ],
                      "parallelism": true
                    },
                    "test": {
                      "executor": "@nx/jest:jest",
                      "outputs": [
                        "{workspaceRoot}/coverage/{projectRoot}"
                      ],
                      "options": {
                        "jestConfig": "infra/workflows/cloud-workflows/jest.config.ts"
                      },
                      "configurations": {
                        "ci": {
                          "ci": true,
                          "codeCoverage": true
                        }
                      },
                      "inputs": [
                        "default",
                        "^default",
                        "{workspaceRoot}/jest.preset.js"
                      ],
                      "cache": true,
                      "parallelism": true
                    }
                  },
                  "name": "cloud-workflows",
                  "tags": [
                    "npm:private",
                    "domain:cloud-workflows",
                    "type:library"
                  ],
                  "metadata": {
                    "targetGroups": {},
                    "js": {
                      "packageName": "cloud-workflows",
                      "packageMain": "./src/index.js",
                      "isInPackageManagerWorkspaces": false
                    }
                  },
                  "$schema": "../../../node_modules/nx/schemas/project-schema.json",
                  "sourceRoot": "infra/workflows/cloud-workflows/src",
                  "projectType": "library",
                  "namedInputs": {
                    "default": [
                      "{projectRoot}/**/*",
                      "sharedGlobals"
                    ],
                    "production": [
                      "default",
                      "!{projectRoot}/**/?(*.)+(spec|test).[jt]s?(x)?(.snap)",
                      "!{projectRoot}/tsconfig.spec.json",
                      "!{projectRoot}/jest.config.[jt]s",
                      "!{projectRoot}/.eslintrc.json"
                    ],
                    "sharedGlobals": []
                  },
                  "implicitDependencies": []
                }
              },
              "gemini-orchestrator": {
                "name": "gemini-orchestrator",
                "type": "lib",
                "data": {
                  "root": "libs/agents/gemini-orchestrator",
                  "targets": {
                    "eslint:lint": {
                      "cache": true,
                      "options": {
                        "cwd": "libs/agents/gemini-orchestrator",
                        "command": "eslint ."
                      },
                      "inputs": [
                        "default",
                        "^default"
                      ],
                      "outputs": [
                        "{workspaceRoot}/dist/{projectRoot}"
                      ],
                      "metadata": {
                        "technologies": [
                          "eslint"
                        ],
                        "description": "Runs ESLint on project",
                        "help": {
                          "command": "pnpm exec eslint --help",
                          "example": {
                            "options": {
                              "max-warnings": 0
                            }
                          }
                        }
                      },
                      "executor": "nx:run-commands",
                      "configurations": {},
                      "parallelism": true
                    },
                    "jest:test": {
                      "options": {
                        "cwd": "libs/agents/gemini-orchestrator",
                        "env": {
                          "TS_NODE_COMPILER_OPTIONS": "{\"moduleResolution\":\"node10\",\"module\":\"commonjs\",\"customConditions\":null}"
                        },
                        "command": "jest"
                      },
                      "metadata": {
                        "technologies": [
                          "jest"
                        ],
                        "description": "Run Jest Tests",
                        "help": {
                          "command": "pnpm exec jest --help",
                          "example": {
                            "options": {
                              "coverage": true
                            }
                          }
                        }
                      },
                      "cache": true,
                      "inputs": [
                        "default",
                        "^default"
                      ],
                      "outputs": [
                        "{workspaceRoot}/dist/{projectRoot}"
                      ],
                      "executor": "nx:run-commands",
                      "configurations": {},
                      "parallelism": true
                    },
                    "build": {
                      "executor": "@nx/js:tsc",
                      "outputs": [
                        "{options.outputPath}"
                      ],
                      "options": {
                        "outputPath": "dist/libs/agents/gemini-orchestrator",
                        "main": "libs/agents/gemini-orchestrator/src/index.ts",
                        "tsConfig": "libs/agents/gemini-orchestrator/tsconfig.lib.json",
                        "assets": [
                          "libs/agents/gemini-orchestrator/*.md"
                        ]
                      },
                      "configurations": {
                        "production": {
                          "optimization": true,
                          "extractLicenses": true,
                          "generatePackageJson": true,
                          "sourceMap": false
                        },
                        "development": {
                          "optimization": false,
                          "sourceMap": true
                        }
                      },
                      "defaultConfiguration": "production",
                      "cache": true,
                      "dependsOn": [
                        "^build"
                      ],
                      "inputs": [
                        "production",
                        "^production"
                      ],
                      "parallelism": true
                    },
                    "test": {
                      "executor": "@nx/jest:jest",
                      "outputs": [
                        "{workspaceRoot}/coverage/{projectRoot}"
                      ],
                      "options": {
                        "jestConfig": "libs/agents/gemini-orchestrator/jest.config.ts"
                      },
                      "configurations": {
                        "ci": {
                          "ci": true,
                          "codeCoverage": true
                        }
                      },
                      "inputs": [
                        "default",
                        "^default",
                        "{workspaceRoot}/jest.preset.js"
                      ],
                      "cache": true,
                      "parallelism": true
                    }
                  },
                  "name": "gemini-orchestrator",
                  "projectType": "library",
                  "tags": [
                    "npm:private",
                    "domain:gemini-orchestrator",
                    "type:library"
                  ],
                  "metadata": {
                    "targetGroups": {},
                    "js": {
                      "packageName": "gemini-orchestrator",
                      "packageMain": "./src/index.js",
                      "isInPackageManagerWorkspaces": true
                    }
                  },
                  "$schema": "../../../node_modules/nx/schemas/project-schema.json",
                  "sourceRoot": "libs/agents/gemini-orchestrator/src",
                  "implicitDependencies": [
                    "gcp",
                    "gcp-auth"
                  ],
                  "namedInputs": {
                    "default": [
                      "{projectRoot}/**/*",
                      "sharedGlobals"
                    ],
                    "production": [
                      "default",
                      "!{projectRoot}/**/?(*.)+(spec|test).[jt]s?(x)?(.snap)",
                      "!{projectRoot}/tsconfig.spec.json",
                      "!{projectRoot}/jest.config.[jt]s",
                      "!{projectRoot}/.eslintrc.json"
                    ],
                    "sharedGlobals": []
                  }
                }
              },
              "social-api": {
                "name": "social-api",
                "type": "app",
                "data": {
                  "root": "apps/cloud-functions/social-api",
                  "targets": {
                    "eslint:lint": {
                      "cache": true,
                      "options": {
                        "cwd": "apps/cloud-functions/social-api",
                        "env": {
                          "ESLINT_USE_FLAT_CONFIG": "false"
                        },
                        "command": "eslint ."
                      },
                      "inputs": [
                        "default",
                        "^default"
                      ],
                      "outputs": [
                        "{workspaceRoot}/dist/{projectRoot}"
                      ],
                      "metadata": {
                        "technologies": [
                          "eslint"
                        ],
                        "description": "Runs ESLint on project",
                        "help": {
                          "command": "pnpm exec eslint --help",
                          "example": {
                            "options": {
                              "max-warnings": 0
                            }
                          }
                        }
                      },
                      "executor": "nx:run-commands",
                      "configurations": {},
                      "parallelism": true
                    },
                    "build": {
                      "executor": "@nx/esbuild:esbuild",
                      "outputs": [
                        "{options.outputPath}"
                      ],
                      "defaultConfiguration": "production",
                      "options": {
                        "platform": "node",
                        "outputPath": "dist/apps/cloud-functions/social-api",
                        "format": [
                          "cjs"
                        ],
                        "bundle": false,
                        "main": "apps/cloud-functions/social-api/src/main.ts",
                        "tsConfig": "apps/cloud-functions/social-api/tsconfig.app.json",
                        "assets": [
                          "apps/cloud-functions/social-api/src/assets"
                        ],
                        "generatePackageJson": true,
                        "esbuildOptions": {
                          "sourcemap": true,
                          "outExtension": {
                            ".js": ".js"
                          }
                        }
                      },
                      "configurations": {
                        "production": {
                          "optimization": true,
                          "extractLicenses": true,
                          "generatePackageJson": true,
                          "sourceMap": false
                        },
                        "development": {
                          "optimization": false,
                          "sourceMap": true
                        }
                      },
                      "cache": true,
                      "dependsOn": [
                        "^build"
                      ],
                      "inputs": [
                        "production",
                        "^production"
                      ],
                      "parallelism": true
                    },
                    "prune-lockfile": {
                      "dependsOn": [
                        "build"
                      ],
                      "cache": true,
                      "executor": "@nx/js:prune-lockfile",
                      "outputs": [
                        "{workspaceRoot}/dist/apps/cloud-functions/social-api/package.json",
                        "{workspaceRoot}/dist/apps/cloud-functions/social-api/pnpm-lock.yaml"
                      ],
                      "options": {
                        "buildTarget": "build"
                      },
                      "configurations": {},
                      "parallelism": true
                    },
                    "copy-workspace-modules": {
                      "dependsOn": [
                        "build"
                      ],
                      "cache": true,
                      "outputs": [
                        "{workspaceRoot}/dist/apps/cloud-functions/social-api/workspace_modules"
                      ],
                      "executor": "@nx/js:copy-workspace-modules",
                      "options": {
                        "buildTarget": "build"
                      },
                      "configurations": {},
                      "parallelism": true
                    },
                    "prune": {
                      "dependsOn": [
                        "prune-lockfile",
                        "copy-workspace-modules"
                      ],
                      "executor": "nx:noop",
                      "configurations": {},
                      "options": {},
                      "parallelism": true
                    },
                    "serve": {
                      "continuous": true,
                      "executor": "@nx/js:node",
                      "defaultConfiguration": "development",
                      "dependsOn": [
                        "build"
                      ],
                      "options": {
                        "buildTarget": "social-api:build",
                        "runBuildTargetDependencies": false
                      },
                      "configurations": {
                        "development": {
                          "buildTarget": "social-api:build:development"
                        },
                        "production": {
                          "buildTarget": "social-api:build:production"
                        }
                      },
                      "parallelism": true,
                      "cache": false
                    }
                  },
                  "name": "social-api",
                  "$schema": "../../../node_modules/nx/schemas/project-schema.json",
                  "sourceRoot": "apps/cloud-functions/social-api/src",
                  "projectType": "application",
                  "tags": [
                    "domain:social-api",
                    "type:application"
                  ],
                  "namedInputs": {
                    "default": [
                      "{projectRoot}/**/*",
                      "sharedGlobals"
                    ],
                    "production": [
                      "default",
                      "!{projectRoot}/**/?(*.)+(spec|test).[jt]s?(x)?(.snap)",
                      "!{projectRoot}/tsconfig.spec.json",
                      "!{projectRoot}/jest.config.[jt]s",
                      "!{projectRoot}/.eslintrc.json"
                    ],
                    "sharedGlobals": []
                  },
                  "implicitDependencies": []
                }
              },
              "cms-api": {
                "name": "cms-api",
                "type": "app",
                "data": {
                  "root": "apps/cloud-functions/cms-api",
                  "targets": {
                    "eslint:lint": {
                      "cache": true,
                      "options": {
                        "cwd": "apps/cloud-functions/cms-api",
                        "env": {
                          "ESLINT_USE_FLAT_CONFIG": "false"
                        },
                        "command": "eslint ."
                      },
                      "inputs": [
                        "default",
                        "^default"
                      ],
                      "outputs": [
                        "{workspaceRoot}/dist/{projectRoot}"
                      ],
                      "metadata": {
                        "technologies": [
                          "eslint"
                        ],
                        "description": "Runs ESLint on project",
                        "help": {
                          "command": "pnpm exec eslint --help",
                          "example": {
                            "options": {
                              "max-warnings": 0
                            }
                          }
                        }
                      },
                      "executor": "nx:run-commands",
                      "configurations": {},
                      "parallelism": true
                    },
                    "build": {
                      "executor": "@nx/esbuild:esbuild",
                      "outputs": [
                        "{options.outputPath}"
                      ],
                      "defaultConfiguration": "production",
                      "options": {
                        "platform": "node",
                        "outputPath": "dist/apps/cloud-functions/cms-api",
                        "format": [
                          "cjs"
                        ],
                        "bundle": false,
                        "main": "apps/cloud-functions/cms-api/src/main.ts",
                        "tsConfig": "apps/cloud-functions/cms-api/tsconfig.app.json",
                        "assets": [
                          "apps/cloud-functions/cms-api/src/assets"
                        ],
                        "generatePackageJson": true,
                        "esbuildOptions": {
                          "sourcemap": true,
                          "outExtension": {
                            ".js": ".js"
                          }
                        }
                      },
                      "configurations": {
                        "production": {
                          "optimization": true,
                          "extractLicenses": true,
                          "generatePackageJson": true,
                          "sourceMap": false
                        },
                        "development": {
                          "optimization": false,
                          "sourceMap": true
                        }
                      },
                      "cache": true,
                      "dependsOn": [
                        "^build"
                      ],
                      "inputs": [
                        "production",
                        "^production"
                      ],
                      "parallelism": true
                    },
                    "prune-lockfile": {
                      "dependsOn": [
                        "build"
                      ],
                      "cache": true,
                      "executor": "@nx/js:prune-lockfile",
                      "outputs": [
                        "{workspaceRoot}/dist/apps/cloud-functions/cms-api/package.json",
                        "{workspaceRoot}/dist/apps/cloud-functions/cms-api/pnpm-lock.yaml"
                      ],
                      "options": {
                        "buildTarget": "build"
                      },
                      "configurations": {},
                      "parallelism": true
                    },
                    "copy-workspace-modules": {
                      "dependsOn": [
                        "build"
                      ],
                      "cache": true,
                      "outputs": [
                        "{workspaceRoot}/dist/apps/cloud-functions/cms-api/workspace_modules"
                      ],
                      "executor": "@nx/js:copy-workspace-modules",
                      "options": {
                        "buildTarget": "build"
                      },
                      "configurations": {},
                      "parallelism": true
                    },
                    "prune": {
                      "dependsOn": [
                        "prune-lockfile",
                        "copy-workspace-modules"
                      ],
                      "executor": "nx:noop",
                      "configurations": {},
                      "options": {},
                      "parallelism": true
                    },
                    "serve": {
                      "continuous": true,
                      "executor": "@nx/js:node",
                      "defaultConfiguration": "development",
                      "dependsOn": [
                        "build"
                      ],
                      "options": {
                        "buildTarget": "cms-api:build",
                        "runBuildTargetDependencies": false
                      },
                      "configurations": {
                        "development": {
                          "buildTarget": "cms-api:build:development"
                        },
                        "production": {
                          "buildTarget": "cms-api:build:production"
                        }
                      },
                      "parallelism": true,
                      "cache": false
                    }
                  },
                  "name": "cms-api",
                  "$schema": "../../../node_modules/nx/schemas/project-schema.json",
                  "sourceRoot": "apps/cloud-functions/cms-api/src",
                  "projectType": "application",
                  "tags": [
                    "domain:cms-api",
                    "type:application"
                  ],
                  "namedInputs": {
                    "default": [
                      "{projectRoot}/**/*",
                      "sharedGlobals"
                    ],
                    "production": [
                      "default",
                      "!{projectRoot}/**/?(*.)+(spec|test).[jt]s?(x)?(.snap)",
                      "!{projectRoot}/tsconfig.spec.json",
                      "!{projectRoot}/jest.config.[jt]s",
                      "!{projectRoot}/.eslintrc.json"
                    ],
                    "sharedGlobals": []
                  },
                  "implicitDependencies": []
                }
              },
              "crm-api": {
                "name": "crm-api",
                "type": "app",
                "data": {
                  "root": "apps/cloud-functions/crm-api",
                  "targets": {
                    "eslint:lint": {
                      "cache": true,
                      "options": {
                        "cwd": "apps/cloud-functions/crm-api",
                        "env": {
                          "ESLINT_USE_FLAT_CONFIG": "false"
                        },
                        "command": "eslint ."
                      },
                      "inputs": [
                        "default",
                        "^default"
                      ],
                      "outputs": [
                        "{workspaceRoot}/dist/{projectRoot}"
                      ],
                      "metadata": {
                        "technologies": [
                          "eslint"
                        ],
                        "description": "Runs ESLint on project",
                        "help": {
                          "command": "pnpm exec eslint --help",
                          "example": {
                            "options": {
                              "max-warnings": 0
                            }
                          }
                        }
                      },
                      "executor": "nx:run-commands",
                      "configurations": {},
                      "parallelism": true
                    },
                    "build": {
                      "executor": "@nx/esbuild:esbuild",
                      "outputs": [
                        "{options.outputPath}"
                      ],
                      "defaultConfiguration": "production",
                      "options": {
                        "platform": "node",
                        "outputPath": "dist/apps/cloud-functions/crm-api",
                        "format": [
                          "cjs"
                        ],
                        "bundle": false,
                        "main": "apps/cloud-functions/crm-api/src/main.ts",
                        "tsConfig": "apps/cloud-functions/crm-api/tsconfig.app.json",
                        "assets": [
                          "apps/cloud-functions/crm-api/src/assets"
                        ],
                        "generatePackageJson": true,
                        "esbuildOptions": {
                          "sourcemap": true,
                          "outExtension": {
                            ".js": ".js"
                          }
                        }
                      },
                      "configurations": {
                        "production": {
                          "optimization": true,
                          "extractLicenses": true,
                          "generatePackageJson": true,
                          "sourceMap": false
                        },
                        "development": {
                          "optimization": false,
                          "sourceMap": true
                        }
                      },
                      "cache": true,
                      "dependsOn": [
                        "^build"
                      ],
                      "inputs": [
                        "production",
                        "^production"
                      ],
                      "parallelism": true
                    },
                    "prune-lockfile": {
                      "dependsOn": [
                        "build"
                      ],
                      "cache": true,
                      "executor": "@nx/js:prune-lockfile",
                      "outputs": [
                        "{workspaceRoot}/dist/apps/cloud-functions/crm-api/package.json",
                        "{workspaceRoot}/dist/apps/cloud-functions/crm-api/pnpm-lock.yaml"
                      ],
                      "options": {
                        "buildTarget": "build"
                      },
                      "configurations": {},
                      "parallelism": true
                    },
                    "copy-workspace-modules": {
                      "dependsOn": [
                        "build"
                      ],
                      "cache": true,
                      "outputs": [
                        "{workspaceRoot}/dist/apps/cloud-functions/crm-api/workspace_modules"
                      ],
                      "executor": "@nx/js:copy-workspace-modules",
                      "options": {
                        "buildTarget": "build"
                      },
                      "configurations": {},
                      "parallelism": true
                    },
                    "prune": {
                      "dependsOn": [
                        "prune-lockfile",
                        "copy-workspace-modules"
                      ],
                      "executor": "nx:noop",
                      "configurations": {},
                      "options": {},
                      "parallelism": true
                    },
                    "serve": {
                      "continuous": true,
                      "executor": "@nx/js:node",
                      "defaultConfiguration": "development",
                      "dependsOn": [
                        "build"
                      ],
                      "options": {
                        "buildTarget": "crm-api:build",
                        "runBuildTargetDependencies": false
                      },
                      "configurations": {
                        "development": {
                          "buildTarget": "crm-api:build:development"
                        },
                        "production": {
                          "buildTarget": "crm-api:build:production"
                        }
                      },
                      "parallelism": true,
                      "cache": false
                    }
                  },
                  "name": "crm-api",
                  "$schema": "../../../node_modules/nx/schemas/project-schema.json",
                  "sourceRoot": "apps/cloud-functions/crm-api/src",
                  "projectType": "application",
                  "tags": [
                    "domain:crm-api",
                    "type:application"
                  ],
                  "namedInputs": {
                    "default": [
                      "{projectRoot}/**/*",
                      "sharedGlobals"
                    ],
                    "production": [
                      "default",
                      "!{projectRoot}/**/?(*.)+(spec|test).[jt]s?(x)?(.snap)",
                      "!{projectRoot}/tsconfig.spec.json",
                      "!{projectRoot}/jest.config.[jt]s",
                      "!{projectRoot}/.eslintrc.json"
                    ],
                    "sharedGlobals": []
                  },
                  "implicitDependencies": []
                }
              },
              "dbt-models": {
                "name": "dbt-models",
                "type": "lib",
                "data": {
                  "root": "libs/data-models/dbt-models",
                  "targets": {
                    "eslint:lint": {
                      "cache": true,
                      "options": {
                        "cwd": "libs/data-models/dbt-models",
                        "command": "eslint ."
                      },
                      "inputs": [
                        "default",
                        "^default"
                      ],
                      "outputs": [
                        "{workspaceRoot}/dist/{projectRoot}"
                      ],
                      "metadata": {
                        "technologies": [
                          "eslint"
                        ],
                        "description": "Runs ESLint on project",
                        "help": {
                          "command": "pnpm exec eslint --help",
                          "example": {
                            "options": {
                              "max-warnings": 0
                            }
                          }
                        }
                      },
                      "executor": "nx:run-commands",
                      "configurations": {},
                      "parallelism": true
                    },
                    "jest:test": {
                      "options": {
                        "cwd": "libs/data-models/dbt-models",
                        "env": {
                          "TS_NODE_COMPILER_OPTIONS": "{\"moduleResolution\":\"node10\",\"module\":\"commonjs\",\"customConditions\":null}"
                        },
                        "command": "jest"
                      },
                      "metadata": {
                        "technologies": [
                          "jest"
                        ],
                        "description": "Run Jest Tests",
                        "help": {
                          "command": "pnpm exec jest --help",
                          "example": {
                            "options": {
                              "coverage": true
                            }
                          }
                        }
                      },
                      "cache": true,
                      "inputs": [
                        "default",
                        "^default"
                      ],
                      "outputs": [
                        "{workspaceRoot}/dist/{projectRoot}"
                      ],
                      "executor": "nx:run-commands",
                      "configurations": {},
                      "parallelism": true
                    },
                    "build": {
                      "executor": "@nx/js:tsc",
                      "outputs": [
                        "{options.outputPath}"
                      ],
                      "options": {
                        "outputPath": "dist/libs/data-models/dbt-models",
                        "main": "libs/data-models/dbt-models/src/index.ts",
                        "tsConfig": "libs/data-models/dbt-models/tsconfig.lib.json",
                        "assets": [
                          "libs/data-models/dbt-models/*.md"
                        ]
                      },
                      "configurations": {
                        "production": {
                          "optimization": true,
                          "extractLicenses": true,
                          "generatePackageJson": true,
                          "sourceMap": false
                        },
                        "development": {
                          "optimization": false,
                          "sourceMap": true
                        }
                      },
                      "defaultConfiguration": "production",
                      "cache": true,
                      "dependsOn": [
                        "^build"
                      ],
                      "inputs": [
                        "production",
                        "^production"
                      ],
                      "parallelism": true
                    },
                    "test": {
                      "executor": "@nx/jest:jest",
                      "outputs": [
                        "{workspaceRoot}/coverage/{projectRoot}"
                      ],
                      "options": {
                        "jestConfig": "libs/data-models/dbt-models/jest.config.ts"
                      },
                      "configurations": {
                        "ci": {
                          "ci": true,
                          "codeCoverage": true
                        }
                      },
                      "inputs": [
                        "default",
                        "^default",
                        "{workspaceRoot}/jest.preset.js"
                      ],
                      "cache": true,
                      "parallelism": true
                    }
                  },
                  "name": "dbt-models",
                  "projectType": "library",
                  "tags": [
                    "npm:private",
                    "domain:dbt-models",
                    "type:library"
                  ],
                  "metadata": {
                    "targetGroups": {},
                    "js": {
                      "packageName": "dbt-models",
                      "packageMain": "./src/index.js",
                      "isInPackageManagerWorkspaces": true
                    }
                  },
                  "$schema": "../../../node_modules/nx/schemas/project-schema.json",
                  "sourceRoot": "libs/data-models/dbt-models/src",
                  "namedInputs": {
                    "default": [
                      "{projectRoot}/**/*",
                      "sharedGlobals"
                    ],
                    "production": [
                      "default",
                      "!{projectRoot}/**/?(*.)+(spec|test).[jt]s?(x)?(.snap)",
                      "!{projectRoot}/tsconfig.spec.json",
                      "!{projectRoot}/jest.config.[jt]s",
                      "!{projectRoot}/.eslintrc.json"
                    ],
                    "sharedGlobals": []
                  },
                  "implicitDependencies": []
                }
              },
              "utils-secrets-manager": {
                "name": "utils-secrets-manager",
                "type": "lib",
                "data": {
                  "root": "libs/utils/secrets-manager",
                  "targets": {
                    "eslint:lint": {
                      "cache": true,
                      "options": {
                        "cwd": "libs/utils/secrets-manager",
                        "env": {
                          "ESLINT_USE_FLAT_CONFIG": "false"
                        },
                        "command": "eslint ."
                      },
                      "inputs": [
                        "default",
                        "^default"
                      ],
                      "outputs": [
                        "{workspaceRoot}/dist/{projectRoot}"
                      ],
                      "metadata": {
                        "technologies": [
                          "eslint"
                        ],
                        "description": "Runs ESLint on project",
                        "help": {
                          "command": "pnpm exec eslint --help",
                          "example": {
                            "options": {
                              "max-warnings": 0
                            }
                          }
                        }
                      },
                      "executor": "nx:run-commands",
                      "configurations": {},
                      "parallelism": true
                    },
                    "nx-release-publish": {
                      "executor": "@nx/js:release-publish",
                      "dependsOn": [
                        "^nx-release-publish"
                      ],
                      "options": {},
                      "configurations": {},
                      "parallelism": true
                    },
                    "build": {
                      "executor": "@nx/rollup:rollup",
                      "outputs": [
                        "{options.outputPath}"
                      ],
                      "options": {
                        "outputPath": "dist/libs/utils/secrets-manager",
                        "tsConfig": "libs/utils/secrets-manager/tsconfig.lib.json",
                        "project": "libs/utils/secrets-manager/package.json",
                        "entryFile": "libs/utils/secrets-manager/src/index.ts",
                        "external": [
                          "rxjs",
                          "@google-cloud/secret-manager"
                        ],
                        "rollupConfig": "@nx/react/plugins/bundle-rollup"
                      },
                      "configurations": {},
                      "parallelism": true,
                      "cache": true,
                      "dependsOn": [
                        "^build"
                      ],
                      "inputs": [
                        "default",
                        "^default"
                      ]
                    },
                    "lint": {
                      "executor": "@nx/eslint:lint",
                      "outputs": [
                        "{options.outputFile}"
                      ],
                      "options": {
                        "lintFilePatterns": [
                          "libs/utils/secrets-manager/**/*.ts"
                        ]
                      },
                      "configurations": {},
                      "parallelism": true,
                      "cache": true,
                      "inputs": [
                        "default",
                        "{workspaceRoot}/.eslintrc.json",
                        "{workspaceRoot}/tools/eslint-rules/**/*"
                      ]
                    },
                    "test": {
                      "executor": "@nx/jest:jest",
                      "outputs": [
                        "{workspaceRoot}/coverage/{projectRoot}"
                      ],
                      "options": {
                        "jestConfig": "libs/utils/secrets-manager/jest.config.ts",
                        "passWithNoTests": true
                      },
                      "configurations": {
                        "ci": {
                          "ci": true,
                          "coverage": true
                        }
                      },
                      "parallelism": true,
                      "cache": true,
                      "inputs": [
                        "default",
                        "^default",
                        "{workspaceRoot}/jest.preset.js"
                      ]
                    }
                  },
                  "name": "utils-secrets-manager",
                  "projectType": "library",
                  "tags": [
                    "npm:public",
                    "scope:utils",
                    "type:data-access"
                  ],
                  "metadata": {
                    "targetGroups": {},
                    "js": {
                      "packageName": "@nx-monorepo/utils-secrets-manager",
                      "packageExports": {
                        ".": {
                          "import": "./src/index.ts",
                          "default": "./src/index.ts"
                        }
                      },
                      "packageMain": "./src/index.ts",
                      "isInPackageManagerWorkspaces": true
                    }
                  },
                  "$schema": "../../../node_modules/nx/schemas/project-schema.json",
                  "sourceRoot": "libs/utils/secrets-manager/src",
                  "implicitDependencies": []
                }
              },
              "content-agent": {
                "name": "content-agent",
                "type": "lib",
                "data": {
                  "root": "libs/agents/content-agent",
                  "targets": {
                    "eslint:lint": {
                      "cache": true,
                      "options": {
                        "cwd": "libs/agents/content-agent",
                        "command": "eslint ."
                      },
                      "inputs": [
                        "default",
                        "^default"
                      ],
                      "outputs": [
                        "{workspaceRoot}/dist/{projectRoot}"
                      ],
                      "metadata": {
                        "technologies": [
                          "eslint"
                        ],
                        "description": "Runs ESLint on project",
                        "help": {
                          "command": "pnpm exec eslint --help",
                          "example": {
                            "options": {
                              "max-warnings": 0
                            }
                          }
                        }
                      },
                      "executor": "nx:run-commands",
                      "configurations": {},
                      "parallelism": true
                    },
                    "jest:test": {
                      "options": {
                        "cwd": "libs/agents/content-agent",
                        "env": {
                          "TS_NODE_COMPILER_OPTIONS": "{\"moduleResolution\":\"node10\",\"module\":\"commonjs\",\"customConditions\":null}"
                        },
                        "command": "jest"
                      },
                      "metadata": {
                        "technologies": [
                          "jest"
                        ],
                        "description": "Run Jest Tests",
                        "help": {
                          "command": "pnpm exec jest --help",
                          "example": {
                            "options": {
                              "coverage": true
                            }
                          }
                        }
                      },
                      "cache": true,
                      "inputs": [
                        "default",
                        "^default"
                      ],
                      "outputs": [
                        "{workspaceRoot}/dist/{projectRoot}"
                      ],
                      "executor": "nx:run-commands",
                      "configurations": {},
                      "parallelism": true
                    },
                    "build": {
                      "executor": "@nx/js:tsc",
                      "outputs": [
                        "{options.outputPath}"
                      ],
                      "options": {
                        "outputPath": "dist/libs/agents/content-agent",
                        "main": "libs/agents/content-agent/src/index.ts",
                        "tsConfig": "libs/agents/content-agent/tsconfig.lib.json",
                        "assets": [
                          "libs/agents/content-agent/*.md"
                        ]
                      },
                      "configurations": {
                        "production": {
                          "optimization": true,
                          "extractLicenses": true,
                          "generatePackageJson": true,
                          "sourceMap": false
                        },
                        "development": {
                          "optimization": false,
                          "sourceMap": true
                        }
                      },
                      "defaultConfiguration": "production",
                      "cache": true,
                      "dependsOn": [
                        "^build"
                      ],
                      "inputs": [
                        "production",
                        "^production"
                      ],
                      "parallelism": true
                    },
                    "test": {
                      "executor": "@nx/jest:jest",
                      "outputs": [
                        "{workspaceRoot}/coverage/{projectRoot}"
                      ],
                      "options": {
                        "jestConfig": "libs/agents/content-agent/jest.config.ts"
                      },
                      "configurations": {
                        "ci": {
                          "ci": true,
                          "codeCoverage": true
                        }
                      },
                      "inputs": [
                        "default",
                        "^default",
                        "{workspaceRoot}/jest.preset.js"
                      ],
                      "cache": true,
                      "parallelism": true
                    }
                  },
                  "name": "content-agent",
                  "projectType": "library",
                  "tags": [
                    "npm:private",
                    "domain:content-agent",
                    "type:library"
                  ],
                  "metadata": {
                    "targetGroups": {},
                    "js": {
                      "packageName": "content-agent",
                      "packageMain": "./src/index.js",
                      "isInPackageManagerWorkspaces": true
                    }
                  },
                  "$schema": "../../../node_modules/nx/schemas/project-schema.json",
                  "sourceRoot": "libs/agents/content-agent/src",
                  "namedInputs": {
                    "default": [
                      "{projectRoot}/**/*",
                      "sharedGlobals"
                    ],
                    "production": [
                      "default",
                      "!{projectRoot}/**/?(*.)+(spec|test).[jt]s?(x)?(.snap)",
                      "!{projectRoot}/tsconfig.spec.json",
                      "!{projectRoot}/jest.config.[jt]s",
                      "!{projectRoot}/.eslintrc.json"
                    ],
                    "sharedGlobals": []
                  },
                  "implicitDependencies": []
                }
              },
              "reviews-agent": {
                "name": "reviews-agent",
                "type": "lib",
                "data": {
                  "root": "libs/agents/reviews-agent",
                  "targets": {
                    "eslint:lint": {
                      "cache": true,
                      "options": {
                        "cwd": "libs/agents/reviews-agent",
                        "command": "eslint ."
                      },
                      "inputs": [
                        "default",
                        "^default"
                      ],
                      "outputs": [
                        "{workspaceRoot}/dist/{projectRoot}"
                      ],
                      "metadata": {
                        "technologies": [
                          "eslint"
                        ],
                        "description": "Runs ESLint on project",
                        "help": {
                          "command": "pnpm exec eslint --help",
                          "example": {
                            "options": {
                              "max-warnings": 0
                            }
                          }
                        }
                      },
                      "executor": "nx:run-commands",
                      "configurations": {},
                      "parallelism": true
                    },
                    "jest:test": {
                      "options": {
                        "cwd": "libs/agents/reviews-agent",
                        "env": {
                          "TS_NODE_COMPILER_OPTIONS": "{\"moduleResolution\":\"node10\",\"module\":\"commonjs\",\"customConditions\":null}"
                        },
                        "command": "jest"
                      },
                      "metadata": {
                        "technologies": [
                          "jest"
                        ],
                        "description": "Run Jest Tests",
                        "help": {
                          "command": "pnpm exec jest --help",
                          "example": {
                            "options": {
                              "coverage": true
                            }
                          }
                        }
                      },
                      "cache": true,
                      "inputs": [
                        "default",
                        "^default"
                      ],
                      "outputs": [
                        "{workspaceRoot}/dist/{projectRoot}"
                      ],
                      "executor": "nx:run-commands",
                      "configurations": {},
                      "parallelism": true
                    },
                    "build": {
                      "executor": "@nx/js:tsc",
                      "outputs": [
                        "{options.outputPath}"
                      ],
                      "options": {
                        "outputPath": "dist/libs/agents/reviews-agent",
                        "main": "libs/agents/reviews-agent/src/index.ts",
                        "tsConfig": "libs/agents/reviews-agent/tsconfig.lib.json",
                        "assets": [
                          "libs/agents/reviews-agent/*.md"
                        ]
                      },
                      "configurations": {
                        "production": {
                          "optimization": true,
                          "extractLicenses": true,
                          "generatePackageJson": true,
                          "sourceMap": false
                        },
                        "development": {
                          "optimization": false,
                          "sourceMap": true
                        }
                      },
                      "defaultConfiguration": "production",
                      "cache": true,
                      "dependsOn": [
                        "^build"
                      ],
                      "inputs": [
                        "production",
                        "^production"
                      ],
                      "parallelism": true
                    },
                    "test": {
                      "executor": "@nx/jest:jest",
                      "outputs": [
                        "{workspaceRoot}/coverage/{projectRoot}"
                      ],
                      "options": {
                        "jestConfig": "libs/agents/reviews-agent/jest.config.ts"
                      },
                      "configurations": {
                        "ci": {
                          "ci": true,
                          "codeCoverage": true
                        }
                      },
                      "inputs": [
                        "default",
                        "^default",
                        "{workspaceRoot}/jest.preset.js"
                      ],
                      "cache": true,
                      "parallelism": true
                    }
                  },
                  "name": "reviews-agent",
                  "projectType": "library",
                  "tags": [
                    "npm:private",
                    "domain:reviews-agent",
                    "type:library"
                  ],
                  "metadata": {
                    "targetGroups": {},
                    "js": {
                      "packageName": "reviews-agent",
                      "packageMain": "./src/index.js",
                      "isInPackageManagerWorkspaces": true
                    }
                  },
                  "$schema": "../../../node_modules/nx/schemas/project-schema.json",
                  "sourceRoot": "libs/agents/reviews-agent/src",
                  "namedInputs": {
                    "default": [
                      "{projectRoot}/**/*",
                      "sharedGlobals"
                    ],
                    "production": [
                      "default",
                      "!{projectRoot}/**/?(*.)+(spec|test).[jt]s?(x)?(.snap)",
                      "!{projectRoot}/tsconfig.spec.json",
                      "!{projectRoot}/jest.config.[jt]s",
                      "!{projectRoot}/.eslintrc.json"
                    ],
                    "sharedGlobals": []
                  },
                  "implicitDependencies": []
                }
              },
              "looker-agent": {
                "name": "looker-agent",
                "type": "lib",
                "data": {
                  "root": "libs/agents/looker-agent",
                  "targets": {
                    "eslint:lint": {
                      "cache": true,
                      "options": {
                        "cwd": "libs/agents/looker-agent",
                        "command": "eslint ."
                      },
                      "inputs": [
                        "default",
                        "^default"
                      ],
                      "outputs": [
                        "{workspaceRoot}/dist/{projectRoot}"
                      ],
                      "metadata": {
                        "technologies": [
                          "eslint"
                        ],
                        "description": "Runs ESLint on project",
                        "help": {
                          "command": "pnpm exec eslint --help",
                          "example": {
                            "options": {
                              "max-warnings": 0
                            }
                          }
                        }
                      },
                      "executor": "nx:run-commands",
                      "configurations": {},
                      "parallelism": true
                    },
                    "jest:test": {
                      "options": {
                        "cwd": "libs/agents/looker-agent",
                        "env": {
                          "TS_NODE_COMPILER_OPTIONS": "{\"moduleResolution\":\"node10\",\"module\":\"commonjs\",\"customConditions\":null}"
                        },
                        "command": "jest"
                      },
                      "metadata": {
                        "technologies": [
                          "jest"
                        ],
                        "description": "Run Jest Tests",
                        "help": {
                          "command": "pnpm exec jest --help",
                          "example": {
                            "options": {
                              "coverage": true
                            }
                          }
                        }
                      },
                      "cache": true,
                      "inputs": [
                        "default",
                        "^default"
                      ],
                      "outputs": [
                        "{workspaceRoot}/dist/{projectRoot}"
                      ],
                      "executor": "nx:run-commands",
                      "configurations": {},
                      "parallelism": true
                    },
                    "build": {
                      "executor": "@nx/js:tsc",
                      "outputs": [
                        "{options.outputPath}"
                      ],
                      "options": {
                        "outputPath": "dist/libs/agents/looker-agent",
                        "main": "libs/agents/looker-agent/src/index.ts",
                        "tsConfig": "libs/agents/looker-agent/tsconfig.lib.json",
                        "assets": [
                          "libs/agents/looker-agent/*.md"
                        ]
                      },
                      "configurations": {
                        "production": {
                          "optimization": true,
                          "extractLicenses": true,
                          "generatePackageJson": true,
                          "sourceMap": false
                        },
                        "development": {
                          "optimization": false,
                          "sourceMap": true
                        }
                      },
                      "defaultConfiguration": "production",
                      "cache": true,
                      "dependsOn": [
                        "^build"
                      ],
                      "inputs": [
                        "production",
                        "^production"
                      ],
                      "parallelism": true
                    },
                    "test": {
                      "executor": "@nx/jest:jest",
                      "outputs": [
                        "{workspaceRoot}/coverage/{projectRoot}"
                      ],
                      "options": {
                        "jestConfig": "libs/agents/looker-agent/jest.config.ts"
                      },
                      "configurations": {
                        "ci": {
                          "ci": true,
                          "codeCoverage": true
                        }
                      },
                      "inputs": [
                        "default",
                        "^default",
                        "{workspaceRoot}/jest.preset.js"
                      ],
                      "cache": true,
                      "parallelism": true
                    }
                  },
                  "name": "looker-agent",
                  "projectType": "library",
                  "tags": [
                    "npm:private",
                    "domain:looker-agent",
                    "type:library"
                  ],
                  "metadata": {
                    "targetGroups": {},
                    "js": {
                      "packageName": "looker-agent",
                      "packageMain": "./src/index.js",
                      "isInPackageManagerWorkspaces": true
                    }
                  },
                  "$schema": "../../../node_modules/nx/schemas/project-schema.json",
                  "sourceRoot": "libs/agents/looker-agent/src",
                  "namedInputs": {
                    "default": [
                      "{projectRoot}/**/*",
                      "sharedGlobals"
                    ],
                    "production": [
                      "default",
                      "!{projectRoot}/**/?(*.)+(spec|test).[jt]s?(x)?(.snap)",
                      "!{projectRoot}/tsconfig.spec.json",
                      "!{projectRoot}/jest.config.[jt]s",
                      "!{projectRoot}/.eslintrc.json"
                    ],
                    "sharedGlobals": []
                  },
                  "implicitDependencies": []
                }
              },
              "schemas": {
                "name": "schemas",
                "type": "lib",
                "data": {
                  "root": "libs/data-models/schemas",
                  "targets": {
                    "eslint:lint": {
                      "cache": true,
                      "options": {
                        "cwd": "libs/data-models/schemas",
                        "command": "eslint ."
                      },
                      "inputs": [
                        "default",
                        "^default"
                      ],
                      "outputs": [
                        "{workspaceRoot}/dist/{projectRoot}"
                      ],
                      "metadata": {
                        "technologies": [
                          "eslint"
                        ],
                        "description": "Runs ESLint on project",
                        "help": {
                          "command": "pnpm exec eslint --help",
                          "example": {
                            "options": {
                              "max-warnings": 0
                            }
                          }
                        }
                      },
                      "executor": "nx:run-commands",
                      "configurations": {},
                      "parallelism": true
                    },
                    "jest:test": {
                      "options": {
                        "cwd": "libs/data-models/schemas",
                        "env": {
                          "TS_NODE_COMPILER_OPTIONS": "{\"moduleResolution\":\"node10\",\"module\":\"commonjs\",\"customConditions\":null}"
                        },
                        "command": "jest"
                      },
                      "metadata": {
                        "technologies": [
                          "jest"
                        ],
                        "description": "Run Jest Tests",
                        "help": {
                          "command": "pnpm exec jest --help",
                          "example": {
                            "options": {
                              "coverage": true
                            }
                          }
                        }
                      },
                      "cache": true,
                      "inputs": [
                        "default",
                        "^default"
                      ],
                      "outputs": [
                        "{workspaceRoot}/dist/{projectRoot}"
                      ],
                      "executor": "nx:run-commands",
                      "configurations": {},
                      "parallelism": true
                    },
                    "build": {
                      "executor": "@nx/js:tsc",
                      "outputs": [
                        "{options.outputPath}"
                      ],
                      "options": {
                        "outputPath": "dist/libs/data-models/schemas",
                        "main": "libs/data-models/schemas/src/index.ts",
                        "tsConfig": "libs/data-models/schemas/tsconfig.lib.json",
                        "assets": [
                          "libs/data-models/schemas/*.md"
                        ]
                      },
                      "configurations": {
                        "production": {
                          "optimization": true,
                          "extractLicenses": true,
                          "generatePackageJson": true,
                          "sourceMap": false
                        },
                        "development": {
                          "optimization": false,
                          "sourceMap": true
                        }
                      },
                      "defaultConfiguration": "production",
                      "cache": true,
                      "dependsOn": [
                        "^build"
                      ],
                      "inputs": [
                        "production",
                        "^production"
                      ],
                      "parallelism": true
                    },
                    "test": {
                      "executor": "@nx/jest:jest",
                      "outputs": [
                        "{workspaceRoot}/coverage/{projectRoot}"
                      ],
                      "options": {
                        "jestConfig": "libs/data-models/schemas/jest.config.ts"
                      },
                      "configurations": {
                        "ci": {
                          "ci": true,
                          "codeCoverage": true
                        }
                      },
                      "inputs": [
                        "default",
                        "^default",
                        "{workspaceRoot}/jest.preset.js"
                      ],
                      "cache": true,
                      "parallelism": true
                    }
                  },
                  "name": "schemas",
                  "projectType": "library",
                  "tags": [
                    "npm:private",
                    "domain:schemas",
                    "type:library"
                  ],
                  "metadata": {
                    "targetGroups": {},
                    "js": {
                      "packageName": "schemas",
                      "packageMain": "./src/index.js",
                      "isInPackageManagerWorkspaces": true
                    }
                  },
                  "$schema": "../../../node_modules/nx/schemas/project-schema.json",
                  "sourceRoot": "libs/data-models/schemas/src",
                  "namedInputs": {
                    "default": [
                      "{projectRoot}/**/*",
                      "sharedGlobals"
                    ],
                    "production": [
                      "default",
                      "!{projectRoot}/**/?(*.)+(spec|test).[jt]s?(x)?(.snap)",
                      "!{projectRoot}/tsconfig.spec.json",
                      "!{projectRoot}/jest.config.[jt]s",
                      "!{projectRoot}/.eslintrc.json"
                    ],
                    "sharedGlobals": []
                  },
                  "implicitDependencies": []
                }
              },
              "common-types": {
                "name": "common-types",
                "type": "lib",
                "data": {
                  "root": "libs/utils/common-types",
                  "targets": {
                    "eslint:lint": {
                      "cache": true,
                      "options": {
                        "cwd": "libs/utils/common-types",
                        "env": {
                          "ESLINT_USE_FLAT_CONFIG": "false"
                        },
                        "command": "eslint ."
                      },
                      "inputs": [
                        "default",
                        "^default"
                      ],
                      "outputs": [
                        "{workspaceRoot}/dist/{projectRoot}"
                      ],
                      "metadata": {
                        "technologies": [
                          "eslint"
                        ],
                        "description": "Runs ESLint on project",
                        "help": {
                          "command": "pnpm exec eslint --help",
                          "example": {
                            "options": {
                              "max-warnings": 0
                            }
                          }
                        }
                      },
                      "executor": "nx:run-commands",
                      "configurations": {},
                      "parallelism": true
                    },
                    "jest:test": {
                      "options": {
                        "cwd": "libs/utils/common-types",
                        "env": {
                          "TS_NODE_COMPILER_OPTIONS": "{\"moduleResolution\":\"node10\",\"module\":\"commonjs\",\"customConditions\":null}"
                        },
                        "command": "jest"
                      },
                      "metadata": {
                        "technologies": [
                          "jest"
                        ],
                        "description": "Run Jest Tests",
                        "help": {
                          "command": "pnpm exec jest --help",
                          "example": {
                            "options": {
                              "coverage": true
                            }
                          }
                        }
                      },
                      "cache": true,
                      "inputs": [
                        "default",
                        "^default"
                      ],
                      "outputs": [
                        "{workspaceRoot}/dist/{projectRoot}"
                      ],
                      "executor": "nx:run-commands",
                      "configurations": {},
                      "parallelism": true
                    },
                    "build": {
                      "executor": "@nx/js:tsc",
                      "outputs": [
                        "{options.outputPath}"
                      ],
                      "options": {
                        "outputPath": "dist/libs/utils/common-types",
                        "main": "libs/utils/common-types/src/index.ts",
                        "tsConfig": "libs/utils/common-types/tsconfig.lib.json",
                        "assets": [
                          "libs/utils/common-types/*.md"
                        ]
                      },
                      "configurations": {},
                      "parallelism": true,
                      "cache": true,
                      "dependsOn": [
                        "^build"
                      ],
                      "inputs": [
                        "default",
                        "^default"
                      ]
                    },
                    "lint": {
                      "executor": "@nx/eslint:lint",
                      "outputs": [
                        "{options.outputFile}"
                      ],
                      "configurations": {},
                      "options": {},
                      "parallelism": true,
                      "cache": true,
                      "inputs": [
                        "default",
                        "{workspaceRoot}/.eslintrc.json",
                        "{workspaceRoot}/tools/eslint-rules/**/*"
                      ]
                    },
                    "test": {
                      "executor": "@nx/jest:jest",
                      "outputs": [
                        "{workspaceRoot}/coverage/{projectRoot}"
                      ],
                      "options": {
                        "jestConfig": "libs/utils/common-types/jest.config.ts"
                      },
                      "configurations": {},
                      "parallelism": true,
                      "cache": true,
                      "inputs": [
                        "default",
                        "^default",
                        "{workspaceRoot}/jest.preset.js"
                      ]
                    }
                  },
                  "name": "common-types",
                  "sourceRoot": "libs/utils/common-types/src",
                  "projectType": "library",
                  "tags": [
                    "scope:utils",
                    "type:lib"
                  ],
                  "implicitDependencies": []
                }
              },
              "api-clients": {
                "name": "api-clients",
                "type": "lib",
                "data": {
                  "root": "libs/utils/api-clients",
                  "targets": {
                    "eslint:lint": {
                      "cache": true,
                      "options": {
                        "cwd": "libs/utils/api-clients",
                        "command": "eslint ."
                      },
                      "inputs": [
                        "default",
                        "^default"
                      ],
                      "outputs": [
                        "{workspaceRoot}/dist/{projectRoot}"
                      ],
                      "metadata": {
                        "technologies": [
                          "eslint"
                        ],
                        "description": "Runs ESLint on project",
                        "help": {
                          "command": "pnpm exec eslint --help",
                          "example": {
                            "options": {
                              "max-warnings": 0
                            }
                          }
                        }
                      },
                      "executor": "nx:run-commands",
                      "configurations": {},
                      "parallelism": true
                    },
                    "jest:test": {
                      "options": {
                        "cwd": "libs/utils/api-clients",
                        "env": {
                          "TS_NODE_COMPILER_OPTIONS": "{\"moduleResolution\":\"node10\",\"module\":\"commonjs\",\"customConditions\":null}"
                        },
                        "command": "jest"
                      },
                      "metadata": {
                        "technologies": [
                          "jest"
                        ],
                        "description": "Run Jest Tests",
                        "help": {
                          "command": "pnpm exec jest --help",
                          "example": {
                            "options": {
                              "coverage": true
                            }
                          }
                        }
                      },
                      "cache": true,
                      "inputs": [
                        "default",
                        "^default"
                      ],
                      "outputs": [
                        "{workspaceRoot}/dist/{projectRoot}"
                      ],
                      "executor": "nx:run-commands",
                      "configurations": {},
                      "parallelism": true
                    },
                    "build": {
                      "executor": "@nx/js:tsc",
                      "outputs": [
                        "{options.outputPath}"
                      ],
                      "options": {
                        "outputPath": "dist/libs/utils/api-clients",
                        "main": "libs/utils/api-clients/src/index.ts",
                        "tsConfig": "libs/utils/api-clients/tsconfig.lib.json",
                        "assets": [
                          "libs/utils/api-clients/*.md"
                        ]
                      },
                      "configurations": {
                        "production": {
                          "optimization": true,
                          "extractLicenses": true,
                          "generatePackageJson": true,
                          "sourceMap": false
                        },
                        "development": {
                          "optimization": false,
                          "sourceMap": true
                        }
                      },
                      "defaultConfiguration": "production",
                      "cache": true,
                      "dependsOn": [
                        "^build"
                      ],
                      "inputs": [
                        "production",
                        "^production"
                      ],
                      "parallelism": true
                    },
                    "test": {
                      "executor": "@nx/jest:jest",
                      "outputs": [
                        "{workspaceRoot}/coverage/{projectRoot}"
                      ],
                      "options": {
                        "jestConfig": "libs/utils/api-clients/jest.config.ts"
                      },
                      "configurations": {
                        "ci": {
                          "ci": true,
                          "codeCoverage": true
                        }
                      },
                      "inputs": [
                        "default",
                        "^default",
                        "{workspaceRoot}/jest.preset.js"
                      ],
                      "cache": true,
                      "parallelism": true
                    }
                  },
                  "name": "api-clients",
                  "projectType": "library",
                  "tags": [
                    "npm:private",
                    "domain:api-clients",
                    "type:library"
                  ],
                  "metadata": {
                    "targetGroups": {},
                    "js": {
                      "packageName": "api-clients",
                      "packageMain": "./src/index.js",
                      "isInPackageManagerWorkspaces": true
                    }
                  },
                  "$schema": "../../../node_modules/nx/schemas/project-schema.json",
                  "sourceRoot": "libs/utils/api-clients/src",
                  "namedInputs": {
                    "default": [
                      "{projectRoot}/**/*",
                      "sharedGlobals"
                    ],
                    "production": [
                      "default",
                      "!{projectRoot}/**/?(*.)+(spec|test).[jt]s?(x)?(.snap)",
                      "!{projectRoot}/tsconfig.spec.json",
                      "!{projectRoot}/jest.config.[jt]s",
                      "!{projectRoot}/.eslintrc.json"
                    ],
                    "sharedGlobals": []
                  },
                  "implicitDependencies": []
                }
              },
              "looker-dashboards": {
                "name": "looker-dashboards",
                "type": "lib",
                "data": {
                  "root": "apps/looker-dashboards",
                  "targets": {
                    "eslint:lint": {
                      "cache": true,
                      "inputs": [
                        "default",
                        "^default"
                      ],
                      "outputs": [
                        "{workspaceRoot}/dist/{projectRoot}"
                      ],
                      "metadata": {
                        "technologies": [
                          "eslint",
                          "eslint"
                        ],
                        "description": "Runs ESLint on project",
                        "help": {
                          "command": "pnpm exec eslint --help",
                          "example": {
                            "options": {
                              "max-warnings": 0
                            }
                          }
                        }
                      },
                      "executor": "nx:run-commands",
                      "options": {
                        "cwd": "apps/looker-dashboards",
                        "env": {
                          "ESLINT_USE_FLAT_CONFIG": "false"
                        },
                        "command": "eslint ."
                      },
                      "configurations": {},
                      "parallelism": true
                    },
                    "jest:test": {
                      "options": {
                        "cwd": "apps/looker-dashboards",
                        "env": {
                          "TS_NODE_COMPILER_OPTIONS": "{\"moduleResolution\":\"node10\",\"module\":\"commonjs\",\"customConditions\":null}"
                        },
                        "command": "jest"
                      },
                      "metadata": {
                        "technologies": [
                          "jest"
                        ],
                        "description": "Run Jest Tests",
                        "help": {
                          "command": "pnpm exec jest --help",
                          "example": {
                            "options": {
                              "coverage": true
                            }
                          }
                        }
                      },
                      "cache": true,
                      "inputs": [
                        "default",
                        "^default"
                      ],
                      "outputs": [
                        "{workspaceRoot}/dist/{projectRoot}"
                      ],
                      "executor": "nx:run-commands",
                      "configurations": {},
                      "parallelism": true
                    },
                    "build": {
                      "executor": "@nx/js:tsc",
                      "outputs": [
                        "{options.outputPath}"
                      ],
                      "options": {
                        "outputPath": "dist/apps/looker-dashboards",
                        "main": "apps/looker-dashboards/src/index.ts",
                        "tsConfig": "apps/looker-dashboards/tsconfig.lib.json",
                        "assets": [
                          "apps/looker-dashboards/*.md"
                        ]
                      },
                      "configurations": {
                        "production": {
                          "optimization": true,
                          "extractLicenses": true,
                          "generatePackageJson": true,
                          "sourceMap": false
                        },
                        "development": {
                          "optimization": false,
                          "sourceMap": true
                        }
                      },
                      "defaultConfiguration": "production",
                      "cache": true,
                      "dependsOn": [
                        "^build"
                      ],
                      "inputs": [
                        "production",
                        "^production"
                      ],
                      "parallelism": true
                    },
                    "test": {
                      "executor": "@nx/jest:jest",
                      "outputs": [
                        "{workspaceRoot}/coverage/{projectRoot}"
                      ],
                      "options": {
                        "jestConfig": "apps/looker-dashboards/jest.config.ts"
                      },
                      "configurations": {
                        "ci": {
                          "ci": true,
                          "codeCoverage": true
                        }
                      },
                      "inputs": [
                        "default",
                        "^default",
                        "{workspaceRoot}/jest.preset.js"
                      ],
                      "cache": true,
                      "parallelism": true
                    },
                    "lint": {
                      "executor": "@nx/eslint:lint",
                      "options": {
                        "lintFilePatterns": [
                          "apps/looker-dashboards/**/*.{ts,tsx,js,jsx}"
                        ]
                      },
                      "inputs": [
                        "default",
                        "{workspaceRoot}/.eslintrc.json"
                      ],
                      "cache": true,
                      "configurations": {},
                      "parallelism": true,
                      "outputs": [
                        "{options.outputFile}"
                      ]
                    }
                  },
                  "name": "looker-dashboards",
                  "projectType": "library",
                  "tags": [
                    "npm:private",
                    "domain:looker-dashboards",
                    "type:library",
                    "scope:client"
                  ],
                  "metadata": {
                    "targetGroups": {},
                    "js": {
                      "packageName": "looker-dashboards",
                      "packageMain": "./src/index.js",
                      "isInPackageManagerWorkspaces": true
                    }
                  },
                  "$schema": "../../node_modules/nx/schemas/project-schema.json",
                  "sourceRoot": "apps/looker-dashboards/src",
                  "namedInputs": {
                    "default": [
                      "{projectRoot}/**/*",
                      "sharedGlobals"
                    ],
                    "production": [
                      "default",
                      "!{projectRoot}/**/?(*.)+(spec|test).[jt]s?(x)?(.snap)",
                      "!{projectRoot}/tsconfig.spec.json",
                      "!{projectRoot}/jest.config.[jt]s",
                      "!{projectRoot}/.eslintrc.json"
                    ],
                    "sharedGlobals": []
                  },
                  "implicitDependencies": []
                }
              },
              "crm-agent": {
                "name": "crm-agent",
                "type": "lib",
                "data": {
                  "root": "libs/agents/crm-agent",
                  "targets": {
                    "eslint:lint": {
                      "cache": true,
                      "options": {
                        "cwd": "libs/agents/crm-agent",
                        "command": "eslint ."
                      },
                      "inputs": [
                        "default",
                        "^default"
                      ],
                      "outputs": [
                        "{workspaceRoot}/dist/{projectRoot}"
                      ],
                      "metadata": {
                        "technologies": [
                          "eslint"
                        ],
                        "description": "Runs ESLint on project",
                        "help": {
                          "command": "pnpm exec eslint --help",
                          "example": {
                            "options": {
                              "max-warnings": 0
                            }
                          }
                        }
                      },
                      "executor": "nx:run-commands",
                      "configurations": {},
                      "parallelism": true
                    },
                    "jest:test": {
                      "options": {
                        "cwd": "libs/agents/crm-agent",
                        "env": {
                          "TS_NODE_COMPILER_OPTIONS": "{\"moduleResolution\":\"node10\",\"module\":\"commonjs\",\"customConditions\":null}"
                        },
                        "command": "jest"
                      },
                      "metadata": {
                        "technologies": [
                          "jest"
                        ],
                        "description": "Run Jest Tests",
                        "help": {
                          "command": "pnpm exec jest --help",
                          "example": {
                            "options": {
                              "coverage": true
                            }
                          }
                        }
                      },
                      "cache": true,
                      "inputs": [
                        "default",
                        "^default"
                      ],
                      "outputs": [
                        "{workspaceRoot}/dist/{projectRoot}"
                      ],
                      "executor": "nx:run-commands",
                      "configurations": {},
                      "parallelism": true
                    },
                    "build": {
                      "executor": "@nx/js:tsc",
                      "outputs": [
                        "{options.outputPath}"
                      ],
                      "options": {
                        "outputPath": "dist/libs/agents/crm-agent",
                        "main": "libs/agents/crm-agent/src/index.ts",
                        "tsConfig": "libs/agents/crm-agent/tsconfig.lib.json",
                        "assets": [
                          "libs/agents/crm-agent/*.md"
                        ]
                      },
                      "configurations": {
                        "production": {
                          "optimization": true,
                          "extractLicenses": true,
                          "generatePackageJson": true,
                          "sourceMap": false
                        },
                        "development": {
                          "optimization": false,
                          "sourceMap": true
                        }
                      },
                      "defaultConfiguration": "production",
                      "cache": true,
                      "dependsOn": [
                        "^build"
                      ],
                      "inputs": [
                        "production",
                        "^production"
                      ],
                      "parallelism": true
                    },
                    "test": {
                      "executor": "@nx/jest:jest",
                      "outputs": [
                        "{workspaceRoot}/coverage/{projectRoot}"
                      ],
                      "options": {
                        "jestConfig": "libs/agents/crm-agent/jest.config.ts"
                      },
                      "configurations": {
                        "ci": {
                          "ci": true,
                          "codeCoverage": true
                        }
                      },
                      "inputs": [
                        "default",
                        "^default",
                        "{workspaceRoot}/jest.preset.js"
                      ],
                      "cache": true,
                      "parallelism": true
                    }
                  },
                  "name": "crm-agent",
                  "projectType": "library",
                  "tags": [
                    "npm:private",
                    "domain:crm-agent",
                    "type:library"
                  ],
                  "metadata": {
                    "targetGroups": {},
                    "js": {
                      "packageName": "crm-agent",
                      "packageMain": "./src/index.js",
                      "isInPackageManagerWorkspaces": true
                    }
                  },
                  "$schema": "../../../node_modules/nx/schemas/project-schema.json",
                  "sourceRoot": "libs/agents/crm-agent/src",
                  "namedInputs": {
                    "default": [
                      "{projectRoot}/**/*",
                      "sharedGlobals"
                    ],
                    "production": [
                      "default",
                      "!{projectRoot}/**/?(*.)+(spec|test).[jt]s?(x)?(.snap)",
                      "!{projectRoot}/tsconfig.spec.json",
                      "!{projectRoot}/jest.config.[jt]s",
                      "!{projectRoot}/.eslintrc.json"
                    ],
                    "sharedGlobals": []
                  },
                  "implicitDependencies": []
                }
              },
              "monitoring": {
                "name": "monitoring",
                "type": "lib",
                "data": {
                  "root": "libs/utils/monitoring",
                  "targets": {
                    "eslint:lint": {
                      "cache": true,
                      "options": {
                        "cwd": "libs/utils/monitoring",
                        "env": {
                          "ESLINT_USE_FLAT_CONFIG": "false"
                        },
                        "command": "eslint ."
                      },
                      "inputs": [
                        "default",
                        "^default"
                      ],
                      "outputs": [
                        "{workspaceRoot}/dist/{projectRoot}"
                      ],
                      "metadata": {
                        "technologies": [
                          "eslint"
                        ],
                        "description": "Runs ESLint on project",
                        "help": {
                          "command": "pnpm exec eslint --help",
                          "example": {
                            "options": {
                              "max-warnings": 0
                            }
                          }
                        }
                      },
                      "executor": "nx:run-commands",
                      "configurations": {},
                      "parallelism": true
                    },
                    "jest:test": {
                      "options": {
                        "cwd": "libs/utils/monitoring",
                        "env": {
                          "TS_NODE_COMPILER_OPTIONS": "{\"moduleResolution\":\"node10\",\"module\":\"commonjs\",\"customConditions\":null}"
                        },
                        "command": "jest"
                      },
                      "metadata": {
                        "technologies": [
                          "jest"
                        ],
                        "description": "Run Jest Tests",
                        "help": {
                          "command": "pnpm exec jest --help",
                          "example": {
                            "options": {
                              "coverage": true
                            }
                          }
                        }
                      },
                      "cache": true,
                      "inputs": [
                        "default",
                        "^default"
                      ],
                      "outputs": [
                        "{workspaceRoot}/dist/{projectRoot}"
                      ],
                      "executor": "nx:run-commands",
                      "configurations": {},
                      "parallelism": true
                    },
                    "build": {
                      "executor": "@nx/js:tsc",
                      "outputs": [
                        "{options.outputPath}"
                      ],
                      "options": {
                        "outputPath": "dist/libs/utils/monitoring",
                        "main": "libs/utils/monitoring/src/index.ts",
                        "tsConfig": "libs/utils/monitoring/tsconfig.lib.json",
                        "assets": [
                          "libs/utils/monitoring/*.md"
                        ]
                      },
                      "configurations": {
                        "production": {
                          "optimization": true,
                          "extractLicenses": true,
                          "generatePackageJson": true,
                          "sourceMap": false
                        },
                        "development": {
                          "optimization": false,
                          "sourceMap": true
                        }
                      },
                      "defaultConfiguration": "production",
                      "cache": true,
                      "dependsOn": [
                        "^build"
                      ],
                      "inputs": [
                        "production",
                        "^production"
                      ],
                      "parallelism": true
                    },
                    "lint": {
                      "executor": "@nx/eslint:lint",
                      "outputs": [
                        "{options.outputFile}"
                      ],
                      "options": {
                        "lintFilePatterns": [
                          "libs/utils/monitoring/**/*.ts",
                          "libs/utils/monitoring/**/*.tsx",
                          "libs/utils/monitoring/**/*.js",
                          "libs/utils/monitoring/**/*.jsx"
                        ]
                      },
                      "inputs": [
                        "default",
                        "{workspaceRoot}/.eslintrc.json"
                      ],
                      "cache": true,
                      "configurations": {},
                      "parallelism": true
                    },
                    "test": {
                      "executor": "@nx/jest:jest",
                      "outputs": [
                        "{workspaceRoot}/coverage/{projectRoot}"
                      ],
                      "options": {
                        "jestConfig": "libs/utils/monitoring/jest.config.ts"
                      },
                      "configurations": {
                        "ci": {
                          "ci": true,
                          "codeCoverage": true
                        }
                      },
                      "inputs": [
                        "default",
                        "^default",
                        "{workspaceRoot}/jest.preset.js"
                      ],
                      "cache": true,
                      "parallelism": true
                    }
                  },
                  "name": "monitoring",
                  "projectType": "library",
                  "tags": [
                    "npm:private",
                    "domain:monitoring",
                    "type:library"
                  ],
                  "metadata": {
                    "targetGroups": {},
                    "js": {
                      "packageName": "monitoring",
                      "packageMain": "./src/index.js",
                      "isInPackageManagerWorkspaces": true
                    }
                  },
                  "$schema": "../../../node_modules/nx/schemas/project-schema.json",
                  "sourceRoot": "libs/utils/monitoring/src",
                  "namedInputs": {
                    "default": [
                      "{projectRoot}/**/*",
                      "sharedGlobals"
                    ],
                    "production": [
                      "default",
                      "!{projectRoot}/**/?(*.)+(spec|test).[jt]s?(x)?(.snap)",
                      "!{projectRoot}/tsconfig.spec.json",
                      "!{projectRoot}/jest.config.[jt]s",
                      "!{projectRoot}/.eslintrc.json"
                    ],
                    "sharedGlobals": []
                  },
                  "implicitDependencies": []
                }
              },
              "bq-agent": {
                "name": "bq-agent",
                "type": "lib",
                "data": {
                  "root": "libs/agents/bq-agent",
                  "targets": {
                    "eslint:lint": {
                      "cache": true,
                      "options": {
                        "cwd": "libs/agents/bq-agent",
                        "command": "eslint ."
                      },
                      "inputs": [
                        "default",
                        "^default"
                      ],
                      "outputs": [
                        "{workspaceRoot}/dist/{projectRoot}"
                      ],
                      "metadata": {
                        "technologies": [
                          "eslint"
                        ],
                        "description": "Runs ESLint on project",
                        "help": {
                          "command": "pnpm exec eslint --help",
                          "example": {
                            "options": {
                              "max-warnings": 0
                            }
                          }
                        }
                      },
                      "executor": "nx:run-commands",
                      "configurations": {},
                      "parallelism": true
                    },
                    "jest:test": {
                      "options": {
                        "cwd": "libs/agents/bq-agent",
                        "env": {
                          "TS_NODE_COMPILER_OPTIONS": "{\"moduleResolution\":\"node10\",\"module\":\"commonjs\",\"customConditions\":null}"
                        },
                        "command": "jest"
                      },
                      "metadata": {
                        "technologies": [
                          "jest"
                        ],
                        "description": "Run Jest Tests",
                        "help": {
                          "command": "pnpm exec jest --help",
                          "example": {
                            "options": {
                              "coverage": true
                            }
                          }
                        }
                      },
                      "cache": true,
                      "inputs": [
                        "default",
                        "^default"
                      ],
                      "outputs": [
                        "{workspaceRoot}/dist/{projectRoot}"
                      ],
                      "executor": "nx:run-commands",
                      "configurations": {},
                      "parallelism": true
                    },
                    "build": {
                      "executor": "@nx/js:tsc",
                      "outputs": [
                        "{options.outputPath}"
                      ],
                      "options": {
                        "outputPath": "dist/libs/agents/bq-agent",
                        "main": "libs/agents/bq-agent/src/index.ts",
                        "tsConfig": "libs/agents/bq-agent/tsconfig.lib.json",
                        "assets": [
                          "libs/agents/bq-agent/*.md"
                        ]
                      },
                      "configurations": {
                        "production": {
                          "optimization": true,
                          "extractLicenses": true,
                          "generatePackageJson": true,
                          "sourceMap": false
                        },
                        "development": {
                          "optimization": false,
                          "sourceMap": true
                        }
                      },
                      "defaultConfiguration": "production",
                      "cache": true,
                      "dependsOn": [
                        "^build"
                      ],
                      "inputs": [
                        "production",
                        "^production"
                      ],
                      "parallelism": true
                    },
                    "test": {
                      "executor": "@nx/jest:jest",
                      "outputs": [
                        "{workspaceRoot}/coverage/{projectRoot}"
                      ],
                      "options": {
                        "jestConfig": "libs/agents/bq-agent/jest.config.ts"
                      },
                      "configurations": {
                        "ci": {
                          "ci": true,
                          "codeCoverage": true
                        }
                      },
                      "inputs": [
                        "default",
                        "^default",
                        "{workspaceRoot}/jest.preset.js"
                      ],
                      "cache": true,
                      "parallelism": true
                    }
                  },
                  "name": "bq-agent",
                  "projectType": "library",
                  "tags": [
                    "npm:private",
                    "domain:bq-agent",
                    "type:library"
                  ],
                  "metadata": {
                    "targetGroups": {},
                    "js": {
                      "packageName": "bq-agent",
                      "packageMain": "./src/index.js",
                      "isInPackageManagerWorkspaces": true
                    }
                  },
                  "$schema": "../../../node_modules/nx/schemas/project-schema.json",
                  "sourceRoot": "libs/agents/bq-agent/src",
                  "namedInputs": {
                    "default": [
                      "{projectRoot}/**/*",
                      "sharedGlobals"
                    ],
                    "production": [
                      "default",
                      "!{projectRoot}/**/?(*.)+(spec|test).[jt]s?(x)?(.snap)",
                      "!{projectRoot}/tsconfig.spec.json",
                      "!{projectRoot}/jest.config.[jt]s",
                      "!{projectRoot}/.eslintrc.json"
                    ],
                    "sharedGlobals": []
                  },
                  "implicitDependencies": []
                }
              },
              "frontend-agents": {
                "name": "frontend-agents",
                "type": "app",
                "data": {
                  "root": "apps/frontend-agents",
                  "targets": {
                    "next:build": {
                      "options": {
                        "cwd": "apps/frontend-agents",
                        "tty": false,
                        "command": "next build"
                      },
                      "dependsOn": [
                        "^build"
                      ],
                      "cache": true,
                      "inputs": [
                        "default",
                        "^default"
                      ],
                      "outputs": [
                        "{workspaceRoot}/dist/{projectRoot}"
                      ],
                      "executor": "nx:run-commands",
                      "configurations": {},
                      "parallelism": true
                    },
                    "next:dev": {
                      "continuous": true,
                      "options": {
                        "cwd": "apps/frontend-agents",
                        "command": "next dev"
                      },
                      "executor": "nx:run-commands",
                      "configurations": {},
                      "parallelism": true,
                      "cache": true,
                      "inputs": [
                        "default",
                        "^default"
                      ],
                      "outputs": [
                        "{workspaceRoot}/dist/{projectRoot}"
                      ]
                    },
                    "next:start": {
                      "continuous": true,
                      "options": {
                        "cwd": "apps/frontend-agents",
                        "command": "next start"
                      },
                      "dependsOn": [
                        "next:build"
                      ],
                      "executor": "nx:run-commands",
                      "configurations": {},
                      "parallelism": true,
                      "cache": true,
                      "inputs": [
                        "default",
                        "^default"
                      ],
                      "outputs": [
                        "{workspaceRoot}/dist/{projectRoot}"
                      ]
                    },
                    "serve-static": {
                      "continuous": true,
                      "options": {
                        "cwd": "apps/frontend-agents",
                        "command": "next start"
                      },
                      "dependsOn": [
                        "next:build"
                      ],
                      "executor": "nx:run-commands",
                      "configurations": {},
                      "parallelism": true,
                      "cache": true,
                      "inputs": [
                        "default",
                        "^default"
                      ],
                      "outputs": [
                        "{workspaceRoot}/dist/{projectRoot}"
                      ]
                    },
                    "build-deps": {
                      "dependsOn": [
                        "^build"
                      ],
                      "configurations": {},
                      "options": {},
                      "parallelism": true,
                      "executor": "nx:noop"
                    },
                    "watch-deps": {
                      "continuous": true,
                      "dependsOn": [
                        "build-deps"
                      ],
                      "executor": "nx:run-commands",
                      "options": {
                        "command": "pnpm exec nx watch --projects frontend-agents --includeDependentProjects -- pnpm exec nx build-deps frontend-agents"
                      },
                      "configurations": {},
                      "parallelism": true,
                      "cache": true,
                      "inputs": [
                        "default",
                        "^default"
                      ],
                      "outputs": [
                        "{workspaceRoot}/dist/{projectRoot}"
                      ]
                    },
                    "eslint:lint": {
                      "cache": true,
                      "options": {
                        "cwd": "apps/frontend-agents",
                        "env": {
                          "ESLINT_USE_FLAT_CONFIG": "false"
                        },
                        "command": "eslint ."
                      },
                      "inputs": [
                        "default",
                        "^default"
                      ],
                      "outputs": [
                        "{workspaceRoot}/dist/{projectRoot}"
                      ],
                      "metadata": {
                        "technologies": [
                          "eslint"
                        ],
                        "description": "Runs ESLint on project",
                        "help": {
                          "command": "pnpm exec eslint --help",
                          "example": {
                            "options": {
                              "max-warnings": 0
                            }
                          }
                        }
                      },
                      "executor": "nx:run-commands",
                      "configurations": {},
                      "parallelism": true
                    },
                    "dev": {
                      "executor": "nx:run-script",
                      "options": {
                        "script": "dev"
                      },
                      "metadata": {
                        "scriptContent": "next dev",
                        "runCommand": "pnpm run dev"
                      },
                      "configurations": {},
                      "parallelism": true,
                      "cache": false
                    },
                    "start": {
                      "executor": "nx:run-script",
                      "options": {
                        "script": "start"
                      },
                      "metadata": {
                        "scriptContent": "next start",
                        "runCommand": "pnpm run start"
                      },
                      "configurations": {},
                      "parallelism": true
                    },
                    "type-check": {
                      "executor": "nx:run-script",
                      "options": {
                        "script": "type-check"
                      },
                      "metadata": {
                        "scriptContent": "tsc --noEmit",
                        "runCommand": "pnpm run type-check"
                      },
                      "configurations": {},
                      "parallelism": true
                    },
                    "build": {
                      "executor": "@nx/next:build",
                      "outputs": [
                        "{projectRoot}/dist"
                      ],
                      "defaultConfiguration": "production",
                      "options": {},
                      "configurations": {
                        "production": {
                          "optimization": true,
                          "extractLicenses": true,
                          "generatePackageJson": true,
                          "sourceMap": false
                        },
                        "development": {
                          "optimization": false,
                          "sourceMap": true
                        }
                      },
                      "cache": true,
                      "dependsOn": [
                        "^build"
                      ],
                      "inputs": [
                        "production",
                        "^production"
                      ],
                      "parallelism": true
                    },
                    "serve": {
                      "executor": "@nx/next:server",
                      "defaultConfiguration": "development",
                      "options": {},
                      "configurations": {
                        "development": {
                          "buildTarget": "frontend-agents:build:development",
                          "dev": true
                        },
                        "production": {
                          "buildTarget": "frontend-agents:build:production",
                          "dev": false
                        }
                      },
                      "parallelism": true,
                      "continuous": true,
                      "cache": false
                    },
                    "export": {
                      "executor": "@nx/next:export",
                      "options": {
                        "buildTarget": "frontend-agents:build:production"
                      },
                      "configurations": {},
                      "parallelism": true
                    },
                    "lint": {
                      "executor": "@nx/eslint:lint",
                      "options": {
                        "lintFilePatterns": [
                          "apps/frontend-agents/**/*.{ts,tsx,js,jsx}"
                        ]
                      },
                      "inputs": [
                        "default",
                        "{workspaceRoot}/.eslintrc.json"
                      ],
                      "cache": true,
                      "configurations": {},
                      "parallelism": true,
                      "outputs": [
                        "{options.outputFile}"
                      ]
                    }
                  },
                  "name": "frontend-agents",
                  "projectType": "application",
                  "tags": [
                    "npm:private",
                    "domain:frontend-agents",
                    "type:application",
                    "scope:client"
                  ],
                  "metadata": {
                    "targetGroups": {
                      "NPM Scripts": [
                        "dev",
                        "start",
                        "type-check"
                      ]
                    },
                    "js": {
                      "packageName": "frontend-agents",
                      "isInPackageManagerWorkspaces": true
                    }
                  },
                  "$schema": "../../node_modules/nx/schemas/project-schema.json",
                  "sourceRoot": "apps/frontend-agents/src",
                  "namedInputs": {
                    "default": [
                      "{projectRoot}/**/*",
                      "sharedGlobals"
                    ],
                    "production": [
                      "default",
                      "!{projectRoot}/**/?(*.)+(spec|test).[jt]s?(x)?(.snap)",
                      "!{projectRoot}/tsconfig.spec.json",
                      "!{projectRoot}/jest.config.[jt]s",
                      "!{projectRoot}/.eslintrc.json"
                    ],
                    "sharedGlobals": []
                  },
                  "implicitDependencies": []
                }
              },
              "gcp-auth": {
                "name": "gcp-auth",
                "type": "lib",
                "data": {
                  "root": "libs/utils/gcp-auth",
                  "targets": {
                    "eslint:lint": {
                      "cache": true,
                      "options": {
                        "cwd": "libs/utils/gcp-auth",
                        "command": "eslint ."
                      },
                      "inputs": [
                        "default",
                        "^default"
                      ],
                      "outputs": [
                        "{workspaceRoot}/dist/{projectRoot}"
                      ],
                      "metadata": {
                        "technologies": [
                          "eslint"
                        ],
                        "description": "Runs ESLint on project",
                        "help": {
                          "command": "pnpm exec eslint --help",
                          "example": {
                            "options": {
                              "max-warnings": 0
                            }
                          }
                        }
                      },
                      "executor": "nx:run-commands",
                      "configurations": {},
                      "parallelism": true
                    },
                    "jest:test": {
                      "options": {
                        "cwd": "libs/utils/gcp-auth",
                        "env": {
                          "TS_NODE_COMPILER_OPTIONS": "{\"moduleResolution\":\"node10\",\"module\":\"commonjs\",\"customConditions\":null}"
                        },
                        "command": "jest"
                      },
                      "metadata": {
                        "technologies": [
                          "jest"
                        ],
                        "description": "Run Jest Tests",
                        "help": {
                          "command": "pnpm exec jest --help",
                          "example": {
                            "options": {
                              "coverage": true
                            }
                          }
                        }
                      },
                      "cache": true,
                      "inputs": [
                        "default",
                        "^default"
                      ],
                      "outputs": [
                        "{workspaceRoot}/dist/{projectRoot}"
                      ],
                      "executor": "nx:run-commands",
                      "configurations": {},
                      "parallelism": true
                    },
                    "build": {
                      "executor": "@nx/js:tsc",
                      "outputs": [
                        "{options.outputPath}"
                      ],
                      "options": {
                        "outputPath": "dist/libs/utils/gcp-auth",
                        "main": "libs/utils/gcp-auth/src/index.ts",
                        "tsConfig": "libs/utils/gcp-auth/tsconfig.lib.json",
                        "assets": [
                          "libs/utils/gcp-auth/*.md"
                        ]
                      },
                      "configurations": {
                        "production": {
                          "optimization": true,
                          "extractLicenses": true,
                          "generatePackageJson": true,
                          "sourceMap": false
                        },
                        "development": {
                          "optimization": false,
                          "sourceMap": true
                        }
                      },
                      "defaultConfiguration": "production",
                      "cache": true,
                      "dependsOn": [
                        "^build"
                      ],
                      "inputs": [
                        "production",
                        "^production"
                      ],
                      "parallelism": true
                    },
                    "test": {
                      "executor": "@nx/jest:jest",
                      "outputs": [
                        "{workspaceRoot}/coverage/{projectRoot}"
                      ],
                      "options": {
                        "jestConfig": "libs/utils/gcp-auth/jest.config.ts"
                      },
                      "configurations": {
                        "ci": {
                          "ci": true,
                          "codeCoverage": true
                        }
                      },
                      "inputs": [
                        "default",
                        "^default",
                        "{workspaceRoot}/jest.preset.js"
                      ],
                      "cache": true,
                      "parallelism": true
                    }
                  },
                  "name": "gcp-auth",
                  "projectType": "library",
                  "tags": [
                    "npm:private",
                    "domain:gcp-auth",
                    "type:library"
                  ],
                  "metadata": {
                    "targetGroups": {},
                    "js": {
                      "packageName": "gcp-auth",
                      "packageMain": "./src/index.js",
                      "isInPackageManagerWorkspaces": true
                    }
                  },
                  "$schema": "../../../node_modules/nx/schemas/project-schema.json",
                  "sourceRoot": "libs/utils/gcp-auth/src",
                  "namedInputs": {
                    "default": [
                      "{projectRoot}/**/*",
                      "sharedGlobals"
                    ],
                    "production": [
                      "default",
                      "!{projectRoot}/**/?(*.)+(spec|test).[jt]s?(x)?(.snap)",
                      "!{projectRoot}/tsconfig.spec.json",
                      "!{projectRoot}/jest.config.[jt]s",
                      "!{projectRoot}/.eslintrc.json"
                    ],
                    "sharedGlobals": []
                  },
                  "implicitDependencies": []
                }
              },
              "signals": {
                "name": "signals",
                "type": "lib",
                "data": {
                  "root": "libs/utils/signals",
                  "targets": {
                    "eslint:lint": {
                      "cache": true,
                      "options": {
                        "cwd": "libs/utils/signals",
                        "env": {
                          "ESLINT_USE_FLAT_CONFIG": "false"
                        },
                        "command": "eslint ."
                      },
                      "inputs": [
                        "default",
                        "^default"
                      ],
                      "outputs": [
                        "{workspaceRoot}/dist/{projectRoot}"
                      ],
                      "metadata": {
                        "technologies": [
                          "eslint"
                        ],
                        "description": "Runs ESLint on project",
                        "help": {
                          "command": "pnpm exec eslint --help",
                          "example": {
                            "options": {
                              "max-warnings": 0
                            }
                          }
                        }
                      },
                      "executor": "nx:run-commands",
                      "configurations": {},
                      "parallelism": true
                    },
                    "jest:test": {
                      "options": {
                        "cwd": "libs/utils/signals",
                        "env": {
                          "TS_NODE_COMPILER_OPTIONS": "{\"moduleResolution\":\"node10\",\"module\":\"commonjs\",\"customConditions\":null}"
                        },
                        "command": "jest"
                      },
                      "metadata": {
                        "technologies": [
                          "jest"
                        ],
                        "description": "Run Jest Tests",
                        "help": {
                          "command": "pnpm exec jest --help",
                          "example": {
                            "options": {
                              "coverage": true
                            }
                          }
                        }
                      },
                      "cache": true,
                      "inputs": [
                        "default",
                        "^default"
                      ],
                      "outputs": [
                        "{workspaceRoot}/dist/{projectRoot}"
                      ],
                      "executor": "nx:run-commands",
                      "configurations": {},
                      "parallelism": true
                    },
                    "build": {
                      "executor": "@nx/esbuild:esbuild",
                      "outputs": [
                        "{options.outputPath}"
                      ],
                      "options": {
                        "outputPath": "dist/libs/utils/signals",
                        "main": "libs/utils/signals/index.ts",
                        "tsConfig": "libs/utils/signals/tsconfig.json",
                        "assets": [
                          "libs/utils/signals/*.md"
                        ],
                        "generatePackageJson": true
                      },
                      "configurations": {
                        "production": {
                          "optimization": true,
                          "extractLicenses": true,
                          "generatePackageJson": true,
                          "sourceMap": false
                        },
                        "development": {
                          "optimization": false,
                          "sourceMap": true
                        }
                      },
                      "defaultConfiguration": "production",
                      "cache": true,
                      "dependsOn": [
                        "^build"
                      ],
                      "inputs": [
                        "production",
                        "^production"
                      ],
                      "parallelism": true
                    },
                    "lint": {
                      "executor": "@nx/eslint:lint",
                      "outputs": [
                        "{options.outputFile}"
                      ],
                      "options": {
                        "lintFilePatterns": [
                          "libs/utils/signals/**/*.ts"
                        ]
                      },
                      "inputs": [
                        "default",
                        "{workspaceRoot}/.eslintrc.json"
                      ],
                      "cache": true,
                      "configurations": {},
                      "parallelism": true
                    },
                    "test": {
                      "executor": "@nx/jest:jest",
                      "outputs": [
                        "{workspaceRoot}/coverage/{projectRoot}"
                      ],
                      "options": {
                        "jestConfig": "libs/utils/signals/jest.config.ts",
                        "passWithNoTests": true
                      },
                      "configurations": {
                        "ci": {
                          "ci": true,
                          "codeCoverage": true
                        }
                      },
                      "inputs": [
                        "default",
                        "^default",
                        "{workspaceRoot}/jest.preset.js"
                      ],
                      "cache": true,
                      "parallelism": true
                    }
                  },
                  "name": "signals",
                  "$schema": "../../../node_modules/nx/schemas/project-schema.json",
                  "sourceRoot": "libs/utils/signals/src",
                  "projectType": "library",
                  "tags": [
                    "domain:signals",
                    "type:library"
                  ],
                  "namedInputs": {
                    "default": [
                      "{projectRoot}/**/*",
                      "sharedGlobals"
                    ],
                    "production": [
                      "default",
                      "!{projectRoot}/**/?(*.)+(spec|test).[jt]s?(x)?(.snap)",
                      "!{projectRoot}/tsconfig.spec.json",
                      "!{projectRoot}/jest.config.[jt]s",
                      "!{projectRoot}/.eslintrc.json"
                    ],
                    "sharedGlobals": []
                  },
                  "implicitDependencies": []
                }
              },
              "ui-components": {
                "name": "ui-components",
                "type": "lib",
                "data": {
                  "root": "libs/ui/components",
                  "targets": {
                    "eslint:lint": {
                      "cache": true,
                      "options": {
                        "cwd": "libs/ui/components",
                        "env": {
                          "ESLINT_USE_FLAT_CONFIG": "false"
                        },
                        "command": "eslint ."
                      },
                      "inputs": [
                        "default",
                        "^default"
                      ],
                      "outputs": [
                        "{workspaceRoot}/dist/{projectRoot}"
                      ],
                      "metadata": {
                        "technologies": [
                          "eslint"
                        ],
                        "description": "Runs ESLint on project",
                        "help": {
                          "command": "pnpm exec eslint --help",
                          "example": {
                            "options": {
                              "max-warnings": 0
                            }
                          }
                        }
                      },
                      "executor": "nx:run-commands",
                      "configurations": {},
                      "parallelism": true
                    },
                    "jest:test": {
                      "options": {
                        "cwd": "libs/ui/components",
                        "env": {
                          "TS_NODE_COMPILER_OPTIONS": "{\"moduleResolution\":\"node10\",\"module\":\"commonjs\",\"customConditions\":null}"
                        },
                        "command": "jest"
                      },
                      "metadata": {
                        "technologies": [
                          "jest"
                        ],
                        "description": "Run Jest Tests",
                        "help": {
                          "command": "pnpm exec jest --help",
                          "example": {
                            "options": {
                              "coverage": true
                            }
                          }
                        }
                      },
                      "cache": true,
                      "inputs": [
                        "default",
                        "^default"
                      ],
                      "outputs": [
                        "{workspaceRoot}/dist/{projectRoot}"
                      ],
                      "executor": "nx:run-commands",
                      "configurations": {},
                      "parallelism": true
                    },
                    "build": {
                      "executor": "@nx/js:tsc",
                      "outputs": [
                        "{options.outputPath}"
                      ],
                      "options": {
                        "outputPath": "dist/libs/ui/components",
                        "main": "libs/ui/components/src/index.ts",
                        "tsConfig": "libs/ui/components/tsconfig.lib.json",
                        "assets": [
                          "libs/ui/components/*.md"
                        ]
                      },
                      "configurations": {
                        "production": {
                          "optimization": true,
                          "extractLicenses": true,
                          "generatePackageJson": true,
                          "sourceMap": false
                        },
                        "development": {
                          "optimization": false,
                          "sourceMap": true
                        }
                      },
                      "defaultConfiguration": "production",
                      "cache": true,
                      "dependsOn": [
                        "^build"
                      ],
                      "inputs": [
                        "production",
                        "^production"
                      ],
                      "parallelism": true
                    },
                    "test": {
                      "executor": "@nx/jest:jest",
                      "outputs": [
                        "{workspaceRoot}/coverage/{projectRoot}"
                      ],
                      "options": {
                        "jestConfig": "libs/ui/components/jest.config.ts"
                      },
                      "configurations": {
                        "ci": {
                          "ci": true,
                          "codeCoverage": true
                        }
                      },
                      "inputs": [
                        "default",
                        "^default",
                        "{workspaceRoot}/jest.preset.js"
                      ],
                      "cache": true,
                      "parallelism": true
                    },
                    "lint": {
                      "executor": "@nx/eslint:lint",
                      "options": {
                        "lintFilePatterns": [
                          "libs/ui/components/**/*.{ts,tsx,js,jsx}"
                        ]
                      },
                      "inputs": [
                        "default",
                        "{workspaceRoot}/.eslintrc.json"
                      ],
                      "cache": true,
                      "configurations": {},
                      "parallelism": true,
                      "outputs": [
                        "{options.outputFile}"
                      ]
                    }
                  },
                  "name": "ui-components",
                  "$schema": "../../../node_modules/nx/schemas/project-schema.json",
                  "sourceRoot": "libs/ui/components/src",
                  "projectType": "library",
                  "tags": [
                    "domain:ui",
                    "type:library",
                    "scope:client"
                  ],
                  "namedInputs": {
                    "default": [
                      "{projectRoot}/**/*",
                      "sharedGlobals"
                    ],
                    "production": [
                      "default",
                      "!{projectRoot}/**/?(*.)+(spec|test).[jt]s?(x)?(.snap)",
                      "!{projectRoot}/tsconfig.spec.json",
                      "!{projectRoot}/jest.config.[jt]s",
                      "!{projectRoot}/.eslintrc.json"
                    ],
                    "sharedGlobals": []
                  },
                  "implicitDependencies": []
                }
              },
              "event-parser": {
                "name": "event-parser",
                "type": "app",
                "data": {
                  "root": "apps/event-parser",
                  "targets": {
                    "eslint:lint": {
                      "cache": true,
                      "options": {
                        "cwd": "apps/event-parser",
                        "env": {
                          "ESLINT_USE_FLAT_CONFIG": "false"
                        },
                        "command": "eslint ."
                      },
                      "inputs": [
                        "default",
                        "^default"
                      ],
                      "outputs": [
                        "{workspaceRoot}/dist/{projectRoot}"
                      ],
                      "metadata": {
                        "technologies": [
                          "eslint"
                        ],
                        "description": "Runs ESLint on project",
                        "help": {
                          "command": "pnpm exec eslint --help",
                          "example": {
                            "options": {
                              "max-warnings": 0
                            }
                          }
                        }
                      },
                      "executor": "nx:run-commands",
                      "configurations": {},
                      "parallelism": true
                    },
                    "build": {
                      "executor": "nx:run-commands",
                      "options": {
                        "command": "echo 'No build step for event-parser (Node.js Cloud Function)'"
                      },
                      "configurations": {
                        "production": {
                          "optimization": true,
                          "extractLicenses": true,
                          "generatePackageJson": true,
                          "sourceMap": false
                        },
                        "development": {
                          "optimization": false,
                          "sourceMap": true
                        }
                      },
                      "defaultConfiguration": "production",
                      "cache": true,
                      "dependsOn": [
                        "^build"
                      ],
                      "inputs": [
                        "production",
                        "^production"
                      ],
                      "parallelism": true,
                      "outputs": [
                        "{workspaceRoot}/dist/{projectRoot}"
                      ]
                    },
                    "deploy": {
                      "executor": "nx:run-commands",
                      "options": {
                        "command": "gcloud functions deploy parseAgentEvent --region=asia-southeast1 --runtime=nodejs18 --trigger-topic=agent-events --entry-point=parseAgentEvent --project=chimera-prod-392817 --source=apps/event-parser --set-env-vars=NODE_ENV=production"
                      },
                      "configurations": {},
                      "parallelism": true,
                      "cache": true,
                      "inputs": [
                        "default",
                        "^default"
                      ],
                      "outputs": [
                        "{workspaceRoot}/dist/{projectRoot}"
                      ]
                    },
                    "test": {
                      "executor": "nx:run-commands",
                      "options": {
                        "command": "echo 'No tests defined for event-parser'"
                      },
                      "configurations": {
                        "ci": {
                          "ci": true,
                          "codeCoverage": true
                        }
                      },
                      "inputs": [
                        "default",
                        "^default",
                        "{workspaceRoot}/jest.preset.js"
                      ],
                      "cache": true,
                      "parallelism": true,
                      "outputs": [
                        "{workspaceRoot}/dist/{projectRoot}"
                      ]
                    },
                    "lint": {
                      "executor": "@nx/eslint:lint",
                      "options": {
                        "lintFilePatterns": [
                          "apps/event-parser/**/*.{ts,tsx,js,jsx}"
                        ]
                      },
                      "inputs": [
                        "default",
                        "{workspaceRoot}/.eslintrc.json"
                      ],
                      "cache": true,
                      "configurations": {},
                      "parallelism": true,
                      "outputs": [
                        "{options.outputFile}"
                      ]
                    }
                  },
                  "name": "event-parser",
                  "projectType": "application",
                  "tags": [
                    "npm:private",
                    "domain:event-parser",
                    "type:application"
                  ],
                  "metadata": {
                    "targetGroups": {},
                    "description": "Cloud Function to parse raw agent events, stage them, and load into BigQuery.",
                    "js": {
                      "packageName": "@dulce-de-saigon/event-parser",
                      "packageMain": "index.js",
                      "isInPackageManagerWorkspaces": true
                    }
                  },
                  "$schema": "../../node_modules/nx/schemas/project-schema.json",
                  "sourceRoot": "apps/event-parser",
                  "namedInputs": {
                    "default": [
                      "{projectRoot}/**/*",
                      "sharedGlobals"
                    ],
                    "production": [
                      "default",
                      "!{projectRoot}/**/?(*.)+(spec|test).[jt]s?(x)?(.snap)",
                      "!{projectRoot}/tsconfig.spec.json",
                      "!{projectRoot}/jest.config.[jt]s",
                      "!{projectRoot}/.eslintrc.json"
                    ],
                    "sharedGlobals": []
                  },
                  "implicitDependencies": []
                }
              },
              "build-tools": {
                "name": "build-tools",
                "type": "lib",
                "data": {
                  "root": "libs/build-tools",
                  "targets": {
                    "eslint:lint": {
                      "cache": true,
                      "options": {
                        "cwd": "libs/build-tools",
                        "command": "eslint ."
                      },
                      "inputs": [
                        "default",
                        "^default"
                      ],
                      "outputs": [
                        "{workspaceRoot}/dist/{projectRoot}"
                      ],
                      "metadata": {
                        "technologies": [
                          "eslint"
                        ],
                        "description": "Runs ESLint on project",
                        "help": {
                          "command": "pnpm exec eslint --help",
                          "example": {
                            "options": {
                              "max-warnings": 0
                            }
                          }
                        }
                      },
                      "executor": "nx:run-commands",
                      "configurations": {},
                      "parallelism": true
                    },
                    "jest:test": {
                      "options": {
                        "cwd": "libs/build-tools",
                        "env": {
                          "TS_NODE_COMPILER_OPTIONS": "{\"moduleResolution\":\"node10\",\"module\":\"commonjs\",\"customConditions\":null}"
                        },
                        "command": "jest"
                      },
                      "metadata": {
                        "technologies": [
                          "jest"
                        ],
                        "description": "Run Jest Tests",
                        "help": {
                          "command": "pnpm exec jest --help",
                          "example": {
                            "options": {
                              "coverage": true
                            }
                          }
                        }
                      },
                      "cache": true,
                      "inputs": [
                        "default",
                        "^default"
                      ],
                      "outputs": [
                        "{workspaceRoot}/dist/{projectRoot}"
                      ],
                      "executor": "nx:run-commands",
                      "configurations": {},
                      "parallelism": true
                    },
                    "nx-release-publish": {
                      "executor": "@nx/js:release-publish",
                      "dependsOn": [
                        "^nx-release-publish"
                      ],
                      "options": {
                        "packageRoot": "dist/libs/build-tools"
                      },
                      "configurations": {},
                      "parallelism": true
                    },
                    "test": {
                      "executor": "@nx/jest:jest",
                      "outputs": [
                        "{workspaceRoot}/coverage/{projectRoot}"
                      ],
                      "options": {
                        "jestConfig": "libs/build-tools/jest.config.ts"
                      },
                      "configurations": {
                        "ci": {
                          "ci": true,
                          "codeCoverage": true
                        }
                      },
                      "inputs": [
                        "default",
                        "^default",
                        "{workspaceRoot}/jest.preset.js"
                      ],
                      "cache": true,
                      "parallelism": true
                    }
                  },
                  "name": "build-tools",
                  "projectType": "library",
                  "tags": [
                    "npm:public",
                    "domain:build-tools",
                    "type:library"
                  ],
                  "metadata": {
                    "targetGroups": {},
                    "js": {
                      "packageName": "@signals/build-tools",
                      "packageMain": "./index.js",
                      "isInPackageManagerWorkspaces": true
                    }
                  },
                  "$schema": "../../node_modules/nx/schemas/project-schema.json",
                  "sourceRoot": "libs/build-tools/src",
                  "release": {
                    "version": {
                      "manifestRootsToUpdate": [
                        "dist/{projectRoot}"
                      ],
                      "currentVersionResolver": "git-tag",
                      "fallbackCurrentVersionResolver": "disk"
                    }
                  },
                  "namedInputs": {
                    "default": [
                      "{projectRoot}/**/*",
                      "sharedGlobals"
                    ],
                    "production": [
                      "default",
                      "!{projectRoot}/**/?(*.)+(spec|test).[jt]s?(x)?(.snap)",
                      "!{projectRoot}/tsconfig.spec.json",
                      "!{projectRoot}/jest.config.[jt]s",
                      "!{projectRoot}/.eslintrc.json"
                    ],
                    "sharedGlobals": []
                  },
                  "implicitDependencies": []
                }
              },
              "agents-sdk": {
                "name": "agents-sdk",
                "type": "lib",
                "data": {
                  "root": "libs/agents-sdk",
                  "targets": {
                    "eslint:lint": {
                      "cache": true,
                      "inputs": [
                        "default",
                        "^default"
                      ],
                      "outputs": [
                        "{workspaceRoot}/dist/{projectRoot}"
                      ],
                      "metadata": {
                        "technologies": [
                          "eslint",
                          "eslint"
                        ],
                        "description": "Runs ESLint on project",
                        "help": {
                          "command": "pnpm exec eslint --help",
                          "example": {
                            "options": {
                              "max-warnings": 0
                            }
                          }
                        }
                      },
                      "executor": "nx:run-commands",
                      "options": {
                        "cwd": "libs/agents-sdk",
                        "env": {
                          "ESLINT_USE_FLAT_CONFIG": "false"
                        },
                        "command": "eslint ."
                      },
                      "configurations": {},
                      "parallelism": true
                    },
                    "jest:test": {
                      "options": {
                        "cwd": "libs/agents-sdk",
                        "env": {
                          "TS_NODE_COMPILER_OPTIONS": "{\"moduleResolution\":\"node10\",\"module\":\"commonjs\",\"customConditions\":null}"
                        },
                        "command": "jest"
                      },
                      "metadata": {
                        "technologies": [
                          "jest"
                        ],
                        "description": "Run Jest Tests",
                        "help": {
                          "command": "pnpm exec jest --help",
                          "example": {
                            "options": {
                              "coverage": true
                            }
                          }
                        }
                      },
                      "cache": true,
                      "inputs": [
                        "default",
                        "^default"
                      ],
                      "outputs": [
                        "{workspaceRoot}/dist/{projectRoot}"
                      ],
                      "executor": "nx:run-commands",
                      "configurations": {},
                      "parallelism": true
                    },
                    "test": {
                      "executor": "@nx/jest:jest",
                      "outputs": [
                        "{workspaceRoot}/coverage/{projectRoot}"
                      ],
                      "options": {
                        "jestConfig": "libs/agents-sdk/jest.config.ts"
                      },
                      "configurations": {
                        "ci": {
                          "ci": true,
                          "codeCoverage": true
                        }
                      },
                      "inputs": [
                        "default",
                        "^default",
                        "{workspaceRoot}/jest.preset.js"
                      ],
                      "cache": true,
                      "parallelism": true
                    },
                    "lint": {
                      "executor": "@nx/eslint:lint",
                      "options": {
                        "lintFilePatterns": [
                          "libs/agents-sdk/**/*.{ts,tsx,js,jsx}"
                        ]
                      },
                      "inputs": [
                        "default",
                        "{workspaceRoot}/.eslintrc.json"
                      ],
                      "cache": true,
                      "configurations": {},
                      "parallelism": true,
                      "outputs": [
                        "{options.outputFile}"
                      ]
                    }
                  },
                  "name": "agents-sdk",
                  "$schema": "../../node_modules/nx/schemas/project-schema.json",
                  "sourceRoot": "libs/agents-sdk/src",
                  "projectType": "library",
                  "tags": [
                    "domain:agents-sdk",
                    "type:library"
                  ],
                  "namedInputs": {
                    "default": [
                      "{projectRoot}/**/*",
                      "sharedGlobals"
                    ],
                    "production": [
                      "default",
                      "!{projectRoot}/**/?(*.)+(spec|test).[jt]s?(x)?(.snap)",
                      "!{projectRoot}/tsconfig.spec.json",
                      "!{projectRoot}/jest.config.[jt]s",
                      "!{projectRoot}/.eslintrc.json"
                    ],
                    "sharedGlobals": []
                  },
                  "implicitDependencies": []
                }
              },
              "agent-frontend": {
                "name": "agent-frontend",
                "type": "app",
                "data": {
                  "root": "agent-frontend",
                  "targets": {
                    "eslint:lint": {
                      "cache": true,
                      "inputs": [
                        "default",
                        "^default"
                      ],
                      "outputs": [
                        "{workspaceRoot}/dist/{projectRoot}"
                      ],
                      "metadata": {
                        "technologies": [
                          "eslint",
                          "eslint"
                        ],
                        "description": "Runs ESLint on project",
                        "help": {
                          "command": "pnpm exec eslint --help",
                          "example": {
                            "options": {
                              "max-warnings": 0
                            }
                          }
                        }
                      },
                      "executor": "nx:run-commands",
                      "options": {
                        "cwd": "agent-frontend",
                        "env": {
                          "ESLINT_USE_FLAT_CONFIG": "false"
                        },
                        "command": "eslint ."
                      },
                      "configurations": {},
                      "parallelism": true
                    },
                    "jest:test": {
                      "options": {
                        "cwd": "agent-frontend",
                        "env": {
                          "TS_NODE_COMPILER_OPTIONS": "{\"moduleResolution\":\"node10\",\"module\":\"commonjs\",\"customConditions\":null}"
                        },
                        "command": "jest"
                      },
                      "metadata": {
                        "technologies": [
                          "jest"
                        ],
                        "description": "Run Jest Tests",
                        "help": {
                          "command": "pnpm exec jest --help",
                          "example": {
                            "options": {
                              "coverage": true
                            }
                          }
                        }
                      },
                      "cache": true,
                      "inputs": [
                        "default",
                        "^default"
                      ],
                      "outputs": [
                        "{workspaceRoot}/dist/{projectRoot}"
                      ],
                      "executor": "nx:run-commands",
                      "configurations": {},
                      "parallelism": true
                    },
                    "test": {
                      "executor": "@nx/jest:jest",
                      "outputs": [
                        "{workspaceRoot}/coverage/{projectRoot}"
                      ],
                      "options": {
                        "jestConfig": "agent-frontend/jest.config.ts"
                      },
                      "configurations": {
                        "ci": {
                          "ci": true,
                          "codeCoverage": true
                        }
                      },
                      "inputs": [
                        "default",
                        "^default",
                        "{workspaceRoot}/jest.preset.js"
                      ],
                      "cache": true,
                      "parallelism": true
                    },
                    "build": {
                      "options": {
                        "cwd": "agent-frontend",
                        "command": "vite build"
                      },
                      "cache": true,
                      "dependsOn": [
                        "^build"
                      ],
                      "inputs": [
                        "default",
                        "^default"
                      ],
                      "outputs": [
                        "{workspaceRoot}/dist/{projectRoot}"
                      ],
                      "metadata": {
                        "technologies": [
                          "vite"
                        ],
                        "description": "Run Vite build",
                        "help": {
                          "command": "pnpm exec vite build --help",
                          "example": {
                            "options": {
                              "sourcemap": true,
                              "manifest": "manifest.json"
                            }
                          }
                        }
                      },
                      "executor": "nx:run-commands",
                      "configurations": {},
                      "parallelism": true
                    },
                    "serve": {
                      "continuous": true,
                      "options": {
                        "cwd": "agent-frontend",
                        "command": "vite"
                      },
                      "metadata": {
                        "technologies": [
                          "vite"
                        ],
                        "description": "Starts Vite dev server",
                        "help": {
                          "command": "pnpm exec vite --help",
                          "example": {
                            "options": {
                              "port": 3000
                            }
                          }
                        },
                        "deprecated": "Use devTargetName instead. This option will be removed in Nx 22."
                      },
                      "executor": "nx:run-commands",
                      "configurations": {},
                      "parallelism": true,
                      "cache": true,
                      "inputs": [
                        "default",
                        "^default"
                      ],
                      "outputs": [
                        "{workspaceRoot}/dist/{projectRoot}"
                      ]
                    },
                    "dev": {
                      "continuous": true,
                      "options": {
                        "cwd": "agent-frontend",
                        "command": "vite"
                      },
                      "metadata": {
                        "technologies": [
                          "vite"
                        ],
                        "description": "Starts Vite dev server",
                        "help": {
                          "command": "pnpm exec vite --help",
                          "example": {
                            "options": {
                              "port": 3000
                            }
                          }
                        }
                      },
                      "executor": "nx:run-commands",
                      "configurations": {},
                      "parallelism": true,
                      "cache": true,
                      "inputs": [
                        "default",
                        "^default"
                      ],
                      "outputs": [
                        "{workspaceRoot}/dist/{projectRoot}"
                      ]
                    },
                    "preview": {
                      "continuous": true,
                      "dependsOn": [
                        "build"
                      ],
                      "options": {
                        "cwd": "agent-frontend",
                        "command": "vite preview"
                      },
                      "metadata": {
                        "technologies": [
                          "vite"
                        ],
                        "description": "Locally preview Vite production build",
                        "help": {
                          "command": "pnpm exec vite preview --help",
                          "example": {
                            "options": {
                              "port": 3000
                            }
                          }
                        }
                      },
                      "executor": "nx:run-commands",
                      "configurations": {},
                      "parallelism": true,
                      "cache": true,
                      "inputs": [
                        "default",
                        "^default"
                      ],
                      "outputs": [
                        "{workspaceRoot}/dist/{projectRoot}"
                      ]
                    },
                    "serve-static": {
                      "continuous": true,
                      "executor": "@nx/web:file-server",
                      "options": {
                        "buildTarget": "build",
                        "spa": true
                      },
                      "configurations": {},
                      "parallelism": true
                    },
                    "typecheck": {
                      "cache": true,
                      "inputs": [
                        "default",
                        "^default"
                      ],
                      "options": {
                        "cwd": "agent-frontend",
                        "command": "tsc --noEmit -p tsconfig.app.json"
                      },
                      "metadata": {
                        "description": "Runs type-checking for the project.",
                        "technologies": [
                          "typescript"
                        ],
                        "help": {
                          "command": "pnpm exec tsc -p tsconfig.app.json --help",
                          "example": {
                            "options": {
                              "noEmit": true
                            }
                          }
                        }
                      },
                      "executor": "nx:run-commands",
                      "configurations": {},
                      "parallelism": true,
                      "outputs": [
                        "{workspaceRoot}/dist/{projectRoot}"
                      ]
                    },
                    "build-deps": {
                      "dependsOn": [
                        "^build"
                      ],
                      "configurations": {},
                      "options": {},
                      "parallelism": true,
                      "executor": "nx:noop"
                    },
                    "watch-deps": {
                      "continuous": true,
                      "dependsOn": [
                        "build-deps"
                      ],
                      "executor": "nx:run-commands",
                      "options": {
                        "command": "pnpm exec nx watch --projects agent-frontend --includeDependentProjects -- pnpm exec nx build-deps agent-frontend"
                      },
                      "configurations": {},
                      "parallelism": true,
                      "cache": true,
                      "inputs": [
                        "default",
                        "^default"
                      ],
                      "outputs": [
                        "{workspaceRoot}/dist/{projectRoot}"
                      ]
                    },
                    "build-storybook": {
                      "options": {
                        "cwd": "agent-frontend",
                        "command": "storybook build"
                      },
                      "cache": true,
                      "outputs": [
                        "{workspaceRoot}/dist/{projectRoot}"
                      ],
                      "inputs": [
                        "default",
                        "^default"
                      ],
                      "executor": "nx:run-commands",
                      "configurations": {},
                      "parallelism": true
                    },
                    "storybook": {
                      "continuous": true,
                      "options": {
                        "cwd": "agent-frontend",
                        "command": "storybook dev"
                      },
                      "executor": "nx:run-commands",
                      "configurations": {},
                      "parallelism": true,
                      "cache": true,
                      "inputs": [
                        "default",
                        "^default"
                      ],
                      "outputs": [
                        "{workspaceRoot}/dist/{projectRoot}"
                      ]
                    },
                    "static-storybook": {
                      "dependsOn": [
                        "build-storybook"
                      ],
                      "continuous": true,
                      "executor": "@nx/web:file-server",
                      "options": {
                        "buildTarget": "build-storybook",
                        "staticFilePath": "agent-frontend/storybook-static"
                      },
                      "configurations": {},
                      "parallelism": true
                    },
                    "test:jest": {
                      "executor": "nx:run-script",
                      "options": {
                        "script": "test:jest"
                      },
                      "metadata": {
                        "scriptContent": "nx test agent-frontend",
                        "runCommand": "pnpm run test:jest"
                      },
                      "configurations": {},
                      "parallelism": true
                    },
                    "test:vitest": {
                      "executor": "nx:run-script",
                      "options": {
                        "script": "test:vitest"
                      },
                      "metadata": {
                        "scriptContent": "vitest run",
                        "runCommand": "pnpm run test:vitest"
                      },
                      "configurations": {},
                      "parallelism": true
                    },
                    "test:vitest:watch": {
                      "executor": "nx:run-script",
                      "options": {
                        "script": "test:vitest:watch"
                      },
                      "metadata": {
                        "scriptContent": "vitest",
                        "runCommand": "pnpm run test:vitest:watch"
                      },
                      "configurations": {},
                      "parallelism": true
                    },
                    "test:vitest:coverage": {
                      "executor": "nx:run-script",
                      "options": {
                        "script": "test:vitest:coverage"
                      },
                      "metadata": {
                        "scriptContent": "vitest run --coverage",
                        "runCommand": "pnpm run test:vitest:coverage"
                      },
                      "configurations": {},
                      "parallelism": true
                    },
                    "test:all": {
                      "executor": "nx:run-script",
                      "options": {
                        "script": "test:all"
                      },
                      "metadata": {
                        "scriptContent": "npm run test:jest && npm run test:vitest",
                        "runCommand": "pnpm run test:all"
                      },
                      "configurations": {},
                      "parallelism": true
                    },
                    "lint": {
                      "executor": "@nx/eslint:lint",
                      "options": {
                        "lintFilePatterns": [
                          "agent-frontend/**/*.{ts,tsx,js,jsx}"
                        ]
                      },
                      "inputs": [
                        "default",
                        "{workspaceRoot}/.eslintrc.json"
                      ],
                      "cache": true,
                      "configurations": {},
                      "parallelism": true,
                      "outputs": [
                        "{options.outputFile}"
                      ]
                    }
                  },
                  "projectType": "application",
                  "metadata": {
                    "targetGroups": {
                      "NPM Scripts": [
                        "test:jest",
                        "test:vitest",
                        "test:vitest:watch",
                        "test:vitest:coverage",
                        "test:all"
                      ]
                    },
                    "js": {
                      "packageName": "agent-frontend",
                      "isInPackageManagerWorkspaces": false
                    }
                  },
                  "name": "agent-frontend",
                  "tags": [
                    "npm:private",
                    "domain:agent-frontend",
                    "type:application"
                  ],
                  "$schema": "../node_modules/nx/schemas/project-schema.json",
                  "sourceRoot": "agent-frontend/src",
                  "namedInputs": {
                    "default": [
                      "{projectRoot}/**/*",
                      "sharedGlobals"
                    ],
                    "production": [
                      "default",
                      "!{projectRoot}/**/?(*.)+(spec|test).[jt]s?(x)?(.snap)",
                      "!{projectRoot}/tsconfig.spec.json",
                      "!{projectRoot}/jest.config.[jt]s",
                      "!{projectRoot}/.eslintrc.json"
                    ],
                    "sharedGlobals": []
                  },
                  "implicitDependencies": []
                }
              },
              "gcp-core": {
                "name": "gcp-core",
                "type": "lib",
                "data": {
                  "root": "libs/gcp-core",
                  "targets": {
                    "eslint:lint": {
                      "cache": true,
                      "options": {
                        "cwd": "libs/gcp-core",
                        "env": {
                          "ESLINT_USE_FLAT_CONFIG": "false"
                        },
                        "command": "eslint ."
                      },
                      "inputs": [
                        "default",
                        "^default"
                      ],
                      "outputs": [
                        "{workspaceRoot}/dist/{projectRoot}"
                      ],
                      "metadata": {
                        "technologies": [
                          "eslint"
                        ],
                        "description": "Runs ESLint on project",
                        "help": {
                          "command": "pnpm exec eslint --help",
                          "example": {
                            "options": {
                              "max-warnings": 0
                            }
                          }
                        }
                      },
                      "executor": "nx:run-commands",
                      "configurations": {},
                      "parallelism": true
                    },
                    "nx-release-publish": {
                      "executor": "@nx/js:release-publish",
                      "dependsOn": [
                        "^nx-release-publish"
                      ],
                      "options": {},
                      "configurations": {},
                      "parallelism": true
                    },
                    "build": {
                      "executor": "@nx/js:tsc",
                      "outputs": [
                        "{options.outputPath}"
                      ],
                      "options": {
                        "outputPath": "dist/libs/gcp-core",
                        "main": "libs/gcp-core/src/index.ts",
                        "tsConfig": "libs/gcp-core/tsconfig.lib.json",
                        "assets": [
                          "libs/gcp-core/*.md"
                        ]
                      },
                      "configurations": {
                        "production": {
                          "optimization": true,
                          "extractLicenses": true,
                          "generatePackageJson": true,
                          "sourceMap": false
                        },
                        "development": {
                          "optimization": false,
                          "sourceMap": true
                        }
                      },
                      "defaultConfiguration": "production",
                      "cache": true,
                      "dependsOn": [
                        "^build"
                      ],
                      "inputs": [
                        "production",
                        "^production"
                      ],
                      "parallelism": true
                    },
                    "lint": {
                      "executor": "@nx/eslint:lint",
                      "options": {
                        "lintFilePatterns": [
                          "libs/gcp-core/**/*.ts"
                        ]
                      },
                      "configurations": {},
                      "parallelism": true,
                      "cache": true,
                      "inputs": [
                        "default",
                        "{workspaceRoot}/.eslintrc.json",
                        "{workspaceRoot}/tools/eslint-rules/**/*"
                      ],
                      "outputs": [
                        "{options.outputFile}"
                      ]
                    }
                  },
                  "name": "gcp-core",
                  "projectType": "library",
                  "tags": [
                    "npm:public",
                    "domain:gcp",
                    "type:library"
                  ],
                  "metadata": {
                    "targetGroups": {},
                    "js": {
                      "packageName": "@nx-monorepo/gcp-core",
                      "packageMain": "./src/index.ts",
                      "isInPackageManagerWorkspaces": true
                    }
                  },
                  "$schema": "../../node_modules/nx/schemas/project-schema.json",
                  "sourceRoot": "libs/gcp-core/src",
                  "implicitDependencies": []
                }
              },
              "security": {
                "name": "security",
                "type": "lib",
                "data": {
                  "root": "libs/security",
                  "targets": {
                    "eslint:lint": {
                      "cache": true,
                      "options": {
                        "cwd": "libs/security",
                        "env": {
                          "ESLINT_USE_FLAT_CONFIG": "false"
                        },
                        "command": "eslint ."
                      },
                      "inputs": [
                        "default",
                        "^default"
                      ],
                      "outputs": [
                        "{workspaceRoot}/dist/{projectRoot}"
                      ],
                      "metadata": {
                        "technologies": [
                          "eslint"
                        ],
                        "description": "Runs ESLint on project",
                        "help": {
                          "command": "pnpm exec eslint --help",
                          "example": {
                            "options": {
                              "max-warnings": 0
                            }
                          }
                        }
                      },
                      "executor": "nx:run-commands",
                      "configurations": {},
                      "parallelism": true
                    },
                    "jest:test": {
                      "options": {
                        "cwd": "libs/security",
                        "env": {
                          "TS_NODE_COMPILER_OPTIONS": "{\"moduleResolution\":\"node10\",\"module\":\"commonjs\",\"customConditions\":null}"
                        },
                        "command": "jest"
                      },
                      "metadata": {
                        "technologies": [
                          "jest"
                        ],
                        "description": "Run Jest Tests",
                        "help": {
                          "command": "pnpm exec jest --help",
                          "example": {
                            "options": {
                              "coverage": true
                            }
                          }
                        }
                      },
                      "cache": true,
                      "inputs": [
                        "default",
                        "^default"
                      ],
                      "outputs": [
                        "{workspaceRoot}/dist/{projectRoot}"
                      ],
                      "executor": "nx:run-commands",
                      "configurations": {},
                      "parallelism": true
                    },
                    "nx-release-publish": {
                      "executor": "@nx/js:release-publish",
                      "dependsOn": [
                        "^nx-release-publish"
                      ],
                      "options": {},
                      "configurations": {},
                      "parallelism": true
                    },
                    "build": {
                      "executor": "@nx/js:tsc",
                      "outputs": [
                        "{options.outputPath}"
                      ],
                      "options": {
                        "outputPath": "dist/libs/security",
                        "tsConfig": "libs/security/tsconfig.lib.json",
                        "packageJson": "libs/security/package.json"
                      },
                      "configurations": {},
                      "parallelism": true,
                      "cache": true,
                      "dependsOn": [
                        "^build"
                      ],
                      "inputs": [
                        "default",
                        "^default"
                      ]
                    },
                    "lint": {
                      "executor": "@nx/eslint:lint",
                      "outputs": [
                        "{options.outputFile}"
                      ],
                      "options": {
                        "lintFilePatterns": [
                          "libs/security/**/*.ts"
                        ]
                      },
                      "configurations": {},
                      "parallelism": true,
                      "cache": true,
                      "inputs": [
                        "default",
                        "{workspaceRoot}/.eslintrc.json",
                        "{workspaceRoot}/tools/eslint-rules/**/*"
                      ]
                    },
                    "test": {
                      "executor": "@nx/jest:jest",
                      "outputs": [
                        "{workspaceRoot}/coverage/{projectRoot}"
                      ],
                      "options": {
                        "jestConfig": "libs/security/jest.config.ts",
                        "passWithNoTests": true
                      },
                      "configurations": {},
                      "parallelism": true,
                      "cache": true,
                      "inputs": [
                        "default",
                        "^default",
                        "{workspaceRoot}/jest.preset.js"
                      ]
                    }
                  },
                  "name": "security",
                  "projectType": "library",
                  "tags": [
                    "npm:public",
                    "type:util",
                    "scope:security"
                  ],
                  "metadata": {
                    "targetGroups": {},
                    "js": {
                      "packageName": "@dulce-de-saigon/security",
                      "packageMain": "./dist/main.js",
                      "isInPackageManagerWorkspaces": true
                    }
                  },
                  "$schema": "../../node_modules/nx/schemas/project-schema.json",
                  "sourceRoot": "libs/security/src",
                  "implicitDependencies": [
                    "gcp-auth"
                  ]
                }
              },
              "agents": {
                "name": "agents",
                "type": "app",
                "data": {
                  "root": "apps/agents",
                  "targets": {
                    "eslint:lint": {
                      "cache": true,
                      "options": {
                        "cwd": "apps/agents",
                        "env": {
                          "ESLINT_USE_FLAT_CONFIG": "false"
                        },
                        "command": "eslint ."
                      },
                      "inputs": [
                        "default",
                        "^default"
                      ],
                      "outputs": [
                        "{workspaceRoot}/dist/{projectRoot}"
                      ],
                      "metadata": {
                        "technologies": [
                          "eslint"
                        ],
                        "description": "Runs ESLint on project",
                        "help": {
                          "command": "pnpm exec eslint --help",
                          "example": {
                            "options": {
                              "max-warnings": 0
                            }
                          }
                        }
                      },
                      "executor": "nx:run-commands",
                      "configurations": {},
                      "parallelism": true
                    },
                    "nx-release-publish": {
                      "executor": "@nx/js:release-publish",
                      "dependsOn": [
                        "^nx-release-publish"
                      ],
                      "options": {},
                      "configurations": {},
                      "parallelism": true
                    },
                    "dev": {
                      "executor": "nx:run-commands",
                      "options": {
                        "command": "node --loader ts-node/esm apps/agents/src/main.ts"
                      },
                      "configurations": {},
                      "parallelism": true,
                      "cache": true,
                      "inputs": [
                        "default",
                        "^default"
                      ],
                      "outputs": [
                        "{workspaceRoot}/dist/{projectRoot}"
                      ]
                    },
                    "build": {
                      "executor": "@nx/js:tsc",
                      "outputs": [
                        "{options.outputPath}"
                      ],
                      "options": {
                        "outputPath": "dist/apps/agents",
                        "main": "apps/agents/src/main.ts",
                        "tsConfig": "apps/agents/tsconfig.app.json",
                        "assets": [
                          "apps/agents/src/assets"
                        ]
                      },
                      "configurations": {
                        "production": {
                          "optimization": true,
                          "extractLicenses": true,
                          "generatePackageJson": true,
                          "sourceMap": false
                        }
                      },
                      "defaultConfiguration": "production",
                      "parallelism": true,
                      "cache": true,
                      "dependsOn": [
                        "^build"
                      ],
                      "inputs": [
                        "default",
                        "^default"
                      ]
                    },
                    "lint": {
                      "executor": "@nx/eslint:lint",
                      "options": {
                        "lintFilePatterns": [
                          "apps/agents/**/*.{ts,tsx,js,jsx}"
                        ]
                      },
                      "inputs": [
                        "default",
                        "{workspaceRoot}/.eslintrc.json"
                      ],
                      "cache": true,
                      "configurations": {},
                      "parallelism": true,
                      "outputs": [
                        "{options.outputFile}"
                      ]
                    }
                  },
                  "name": "agents",
                  "projectType": "application",
                  "tags": [
                    "npm:public",
                    "domain:agents",
                    "type:application",
                    "scope:server"
                  ],
                  "metadata": {
                    "targetGroups": {},
                    "js": {
                      "isInPackageManagerWorkspaces": true
                    }
                  },
                  "sourceRoot": "apps/agents/src",
                  "implicitDependencies": [
                    "gemini-orchestrator",
                    "monitoring",
                    "gcp"
                  ],
                  "namedInputs": {
                    "default": [
                      "{projectRoot}/**/*",
                      "sharedGlobals"
                    ],
                    "production": [
                      "default",
                      "!{projectRoot}/**/?(*.)+(spec|test).[jt]s?(x)?(.snap)",
                      "!{projectRoot}/tsconfig.spec.json",
                      "!{projectRoot}/jest.config.[jt]s",
                      "!{projectRoot}/.eslintrc.json"
                    ],
                    "sharedGlobals": []
                  }
                }
              },
              "agents-lib": {
                "name": "agents-lib",
                "type": "lib",
                "data": {
                  "root": "libs/agents",
                  "targets": {
                    "eslint:lint": {
                      "cache": true,
                      "options": {
                        "cwd": "libs/agents",
                        "env": {
                          "ESLINT_USE_FLAT_CONFIG": "false"
                        },
                        "command": "eslint ."
                      },
                      "inputs": [
                        "default",
                        "^default"
                      ],
                      "outputs": [
                        "{workspaceRoot}/dist/{projectRoot}"
                      ],
                      "metadata": {
                        "technologies": [
                          "eslint"
                        ],
                        "description": "Runs ESLint on project",
                        "help": {
                          "command": "pnpm exec eslint --help",
                          "example": {
                            "options": {
                              "max-warnings": 0
                            }
                          }
                        }
                      },
                      "executor": "nx:run-commands",
                      "configurations": {},
                      "parallelism": true
                    },
                    "build": {
                      "executor": "@nx/js:tsc",
                      "outputs": [
                        "{options.outputPath}"
                      ],
                      "options": {
                        "outputPath": "dist/libs/agents",
                        "main": "libs/agents/src/index.ts",
                        "tsConfig": "libs/agents/tsconfig.lib.json",
                        "assets": [
                          "libs/agents/*.md"
                        ]
                      },
                      "configurations": {
                        "production": {
                          "optimization": true,
                          "extractLicenses": true,
                          "generatePackageJson": true,
                          "sourceMap": false
                        },
                        "development": {
                          "optimization": false,
                          "sourceMap": true
                        }
                      },
                      "defaultConfiguration": "production",
                      "cache": true,
                      "dependsOn": [
                        "^build"
                      ],
                      "inputs": [
                        "production",
                        "^production"
                      ],
                      "parallelism": true
                    },
                    "lint": {
                      "executor": "@nx/eslint:lint",
                      "options": {
                        "lintFilePatterns": [
                          "libs/agents/**/*.{ts,tsx,js,jsx}"
                        ]
                      },
                      "inputs": [
                        "default",
                        "{workspaceRoot}/.eslintrc.json"
                      ],
                      "cache": true,
                      "configurations": {},
                      "parallelism": true,
                      "outputs": [
                        "{options.outputFile}"
                      ]
                    }
                  },
                  "name": "agents-lib",
                  "$schema": "../../node_modules/nx/schemas/project-schema.json",
                  "sourceRoot": "libs/agents/src",
                  "projectType": "library",
                  "tags": [
                    "domain:agents",
                    "type:library"
                  ],
                  "implicitDependencies": [
                    "gcp"
                  ],
                  "namedInputs": {
                    "default": [
                      "{projectRoot}/**/*",
                      "sharedGlobals"
                    ],
                    "production": [
                      "default",
                      "!{projectRoot}/**/?(*.)+(spec|test).[jt]s?(x)?(.snap)",
                      "!{projectRoot}/tsconfig.spec.json",
                      "!{projectRoot}/jest.config.[jt]s",
                      "!{projectRoot}/.eslintrc.json"
                    ],
                    "sharedGlobals": []
                  }
                }
              },
              "adk": {
                "name": "adk",
                "type": "lib",
                "data": {
                  "root": "libs/adk",
                  "targets": {
                    "eslint:lint": {
                      "cache": true,
                      "options": {
                        "cwd": "libs/adk",
                        "env": {
                          "ESLINT_USE_FLAT_CONFIG": "false"
                        },
                        "command": "eslint ."
                      },
                      "inputs": [
                        "default",
                        "^default"
                      ],
                      "outputs": [
                        "{workspaceRoot}/dist/{projectRoot}"
                      ],
                      "metadata": {
                        "technologies": [
                          "eslint"
                        ],
                        "description": "Runs ESLint on project",
                        "help": {
                          "command": "pnpm exec eslint --help",
                          "example": {
                            "options": {
                              "max-warnings": 0
                            }
                          }
                        }
                      },
                      "executor": "nx:run-commands",
                      "configurations": {},
                      "parallelism": true
                    },
                    "jest:test": {
                      "options": {
                        "cwd": "libs/adk",
                        "env": {
                          "TS_NODE_COMPILER_OPTIONS": "{\"moduleResolution\":\"node10\",\"module\":\"commonjs\",\"customConditions\":null}"
                        },
                        "command": "jest"
                      },
                      "metadata": {
                        "technologies": [
                          "jest"
                        ],
                        "description": "Run Jest Tests",
                        "help": {
                          "command": "pnpm exec jest --help",
                          "example": {
                            "options": {
                              "coverage": true
                            }
                          }
                        }
                      },
                      "cache": true,
                      "inputs": [
                        "default",
                        "^default"
                      ],
                      "outputs": [
                        "{workspaceRoot}/dist/{projectRoot}"
                      ],
                      "executor": "nx:run-commands",
                      "configurations": {},
                      "parallelism": true
                    },
                    "build": {
                      "executor": "@nx/js:tsc",
                      "outputs": [
                        "{options.outputPath}"
                      ],
                      "options": {
                        "outputPath": "dist/libs/adk",
                        "main": "libs/adk/src/index.ts",
                        "tsConfig": "libs/adk/tsconfig.lib.json",
                        "assets": [
                          "libs/adk/*.md"
                        ]
                      },
                      "configurations": {
                        "production": {
                          "optimization": true,
                          "extractLicenses": true,
                          "generatePackageJson": true,
                          "sourceMap": false
                        },
                        "development": {
                          "optimization": false,
                          "sourceMap": true
                        }
                      },
                      "defaultConfiguration": "production",
                      "cache": true,
                      "dependsOn": [
                        "^build"
                      ],
                      "inputs": [
                        "production",
                        "^production"
                      ],
                      "parallelism": true
                    },
                    "test": {
                      "executor": "@nx/jest:jest",
                      "outputs": [
                        "{workspaceRoot}/coverage/{projectRoot}"
                      ],
                      "options": {
                        "jestConfig": "libs/adk/jest.config.ts"
                      },
                      "configurations": {},
                      "parallelism": true,
                      "cache": true,
                      "inputs": [
                        "default",
                        "^default",
                        "{workspaceRoot}/jest.preset.js"
                      ]
                    },
                    "lint": {
                      "executor": "@nx/eslint:lint",
                      "options": {
                        "lintFilePatterns": [
                          "libs/adk/**/*.{ts,tsx,js,jsx}"
                        ]
                      },
                      "inputs": [
                        "default",
                        "{workspaceRoot}/.eslintrc.json"
                      ],
                      "cache": true,
                      "configurations": {},
                      "parallelism": true,
                      "outputs": [
                        "{options.outputFile}"
                      ]
                    }
                  },
                  "name": "adk",
                  "$schema": "../../node_modules/nx/schemas/project-schema.json",
                  "sourceRoot": "libs/adk/src",
                  "projectType": "library",
                  "tags": [
                    "domain:adk",
                    "type:library"
                  ],
                  "implicitDependencies": [
                    "gcp-auth"
                  ],
                  "namedInputs": {
                    "default": [
                      "{projectRoot}/**/*",
                      "sharedGlobals"
                    ],
                    "production": [
                      "default",
                      "!{projectRoot}/**/?(*.)+(spec|test).[jt]s?(x)?(.snap)",
                      "!{projectRoot}/tsconfig.spec.json",
                      "!{projectRoot}/jest.config.[jt]s",
                      "!{projectRoot}/.eslintrc.json"
                    ],
                    "sharedGlobals": []
                  }
                }
              },
              "api": {
                "name": "api",
                "type": "app",
                "data": {
                  "root": "apps/api",
                  "targets": {
                    "eslint:lint": {
                      "cache": true,
                      "options": {
                        "cwd": "apps/api",
                        "env": {
                          "ESLINT_USE_FLAT_CONFIG": "false"
                        },
                        "command": "eslint ."
                      },
                      "inputs": [
                        "default",
                        "^default"
                      ],
                      "outputs": [
                        "{workspaceRoot}/dist/{projectRoot}"
                      ],
                      "metadata": {
                        "technologies": [
                          "eslint"
                        ],
                        "description": "Runs ESLint on project",
                        "help": {
                          "command": "pnpm exec eslint --help",
                          "example": {
                            "options": {
                              "max-warnings": 0
                            }
                          }
                        }
                      },
                      "executor": "nx:run-commands",
                      "configurations": {},
                      "parallelism": true
                    },
                    "nx-release-publish": {
                      "executor": "@nx/js:release-publish",
                      "dependsOn": [
                        "^nx-release-publish"
                      ],
                      "options": {},
                      "configurations": {},
                      "parallelism": true
                    },
                    "serve": {
                      "executor": "nx:run-commands",
                      "options": {
                        "command": "node dist/apps/api/main.js",
                        "dependsOn": [
                          "build"
                        ]
                      },
                      "configurations": {},
                      "parallelism": true,
                      "cache": true,
                      "inputs": [
                        "default",
                        "^default"
                      ],
                      "outputs": [
                        "{workspaceRoot}/dist/{projectRoot}"
                      ]
                    },
                    "build": {
                      "executor": "@nx/js:tsc",
                      "outputs": [
                        "{options.outputPath}"
                      ],
                      "options": {
                        "outputPath": "dist/apps/api",
                        "main": "apps/api/src/main.ts",
                        "tsConfig": "apps/api/tsconfig.app.json",
                        "assets": [
                          "apps/api/src/routes"
                        ]
                      },
                      "configurations": {
                        "production": {
                          "optimization": true,
                          "extractLicenses": true,
                          "generatePackageJson": true,
                          "sourceMap": false
                        }
                      },
                      "defaultConfiguration": "production",
                      "parallelism": true,
                      "cache": true,
                      "dependsOn": [
                        "^build"
                      ],
                      "inputs": [
                        "default",
                        "^default"
                      ]
                    },
                    "lint": {
                      "executor": "@nx/eslint:lint",
                      "options": {
                        "args": [
                          "**/*.{ts,tsx,js,jsx}"
                        ]
                      },
                      "inputs": [
                        "default",
                        "{workspaceRoot}/.eslintrc.json"
                      ],
                      "cache": true,
                      "configurations": {},
                      "parallelism": true,
                      "outputs": [
                        "{options.outputFile}"
                      ]
                    },
                    "test": {
                      "executor": "nx:run-commands",
                      "options": {
                        "command": "echo 'test placeholder'"
                      },
                      "configurations": {
                        "ci": {
                          "ci": true,
                          "codeCoverage": true
                        }
                      },
                      "inputs": [
                        "default",
                        "^default",
                        "{workspaceRoot}/jest.preset.js"
                      ],
                      "cache": true,
                      "parallelism": true,
                      "outputs": [
                        "{workspaceRoot}/dist/{projectRoot}"
                      ]
                    },
                    "build-all": {
                      "executor": "nx:run-commands",
                      "outputs": [],
                      "options": {
                        "command": "echo 'Building all dependencies' && nx build mcp && nx build gcp"
                      },
                      "configurations": {},
                      "parallelism": true,
                      "cache": true,
                      "inputs": [
                        "default",
                        "^default"
                      ]
                    }
                  },
                  "name": "api",
                  "projectType": "application",
                  "tags": [
                    "npm:public",
                    "domain:api",
                    "type:application",
                    "scope:server"
                  ],
                  "metadata": {
                    "targetGroups": {},
                    "js": {
                      "isInPackageManagerWorkspaces": true
                    }
                  },
                  "$schema": "../../node_modules/nx/schemas/project-schema.json",
                  "sourceRoot": "apps/api/src",
                  "implicitDependencies": [
                    "gcp-auth"
                  ],
                  "namedInputs": {
                    "default": [
                      "{projectRoot}/**/*",
                      "sharedGlobals"
                    ],
                    "production": [
                      "default",
                      "!{projectRoot}/**/?(*.)+(spec|test).[jt]s?(x)?(.snap)",
                      "!{projectRoot}/tsconfig.spec.json",
                      "!{projectRoot}/jest.config.[jt]s",
                      "!{projectRoot}/.eslintrc.json"
                    ],
                    "sharedGlobals": []
                  }
                }
              },
              "gcp": {
                "name": "gcp",
                "type": "lib",
                "data": {
                  "root": "libs/gcp",
                  "targets": {
                    "eslint:lint": {
                      "cache": true,
                      "options": {
                        "cwd": "libs/gcp",
                        "env": {
                          "ESLINT_USE_FLAT_CONFIG": "false"
                        },
                        "command": "eslint ."
                      },
                      "inputs": [
                        "default",
                        "^default"
                      ],
                      "outputs": [
                        "{workspaceRoot}/dist/{projectRoot}"
                      ],
                      "metadata": {
                        "technologies": [
                          "eslint"
                        ],
                        "description": "Runs ESLint on project",
                        "help": {
                          "command": "pnpm exec eslint --help",
                          "example": {
                            "options": {
                              "max-warnings": 0
                            }
                          }
                        }
                      },
                      "executor": "nx:run-commands",
                      "configurations": {},
                      "parallelism": true
                    },
                    "build": {
                      "executor": "@nx/js:tsc",
                      "outputs": [
                        "{options.outputPath}"
                      ],
                      "options": {
                        "outputPath": "dist/libs/gcp",
                        "main": "libs/gcp/src/index.ts",
                        "tsConfig": "libs/gcp/tsconfig.lib.json",
                        "assets": [
                          "libs/gcp/*.md"
                        ]
                      },
                      "configurations": {
                        "production": {
                          "optimization": true,
                          "extractLicenses": true,
                          "generatePackageJson": true,
                          "sourceMap": false
                        },
                        "development": {
                          "optimization": false,
                          "sourceMap": true
                        }
                      },
                      "defaultConfiguration": "production",
                      "cache": true,
                      "dependsOn": [
                        "^build"
                      ],
                      "inputs": [
                        "production",
                        "^production"
                      ],
                      "parallelism": true
                    },
                    "lint": {
                      "executor": "@nx/eslint:lint",
                      "options": {
                        "lintFilePatterns": [
                          "libs/gcp/**/*.{ts,tsx,js,jsx}"
                        ]
                      },
                      "inputs": [
                        "default",
                        "{workspaceRoot}/.eslintrc.json"
                      ],
                      "cache": true,
                      "configurations": {},
                      "parallelism": true,
                      "outputs": [
                        "{options.outputFile}"
                      ]
                    }
                  },
                  "name": "gcp",
                  "projectType": "library",
                  "tags": [
                    "npm:private",
                    "domain:gcp",
                    "type:library"
                  ],
                  "metadata": {
                    "targetGroups": {},
                    "js": {
                      "packageName": "gcp",
                      "packageMain": "./src/index.js",
                      "isInPackageManagerWorkspaces": true
                    }
                  },
                  "$schema": "../../node_modules/nx/schemas/project-schema.json",
                  "sourceRoot": "libs/gcp/src",
                  "implicitDependencies": [
                    "gcp-auth"
                  ],
                  "namedInputs": {
                    "default": [
                      "{projectRoot}/**/*",
                      "sharedGlobals"
                    ],
                    "production": [
                      "default",
                      "!{projectRoot}/**/?(*.)+(spec|test).[jt]s?(x)?(.snap)",
                      "!{projectRoot}/tsconfig.spec.json",
                      "!{projectRoot}/jest.config.[jt]s",
                      "!{projectRoot}/.eslintrc.json"
                    ],
                    "sharedGlobals": []
                  }
                }
              },
              "mcp": {
                "name": "mcp",
                "type": "lib",
                "data": {
                  "root": "libs/mcp",
                  "targets": {
                    "eslint:lint": {
                      "cache": true,
                      "options": {
                        "cwd": "libs/mcp",
                        "env": {
                          "ESLINT_USE_FLAT_CONFIG": "false"
                        },
                        "command": "eslint ."
                      },
                      "inputs": [
                        "default",
                        "^default"
                      ],
                      "outputs": [
                        "{workspaceRoot}/dist/{projectRoot}"
                      ],
                      "metadata": {
                        "technologies": [
                          "eslint"
                        ],
                        "description": "Runs ESLint on project",
                        "help": {
                          "command": "pnpm exec eslint --help",
                          "example": {
                            "options": {
                              "max-warnings": 0
                            }
                          }
                        }
                      },
                      "executor": "nx:run-commands",
                      "configurations": {},
                      "parallelism": true
                    },
                    "jest:test": {
                      "options": {
                        "cwd": "libs/mcp",
                        "env": {
                          "TS_NODE_COMPILER_OPTIONS": "{\"moduleResolution\":\"node10\",\"module\":\"commonjs\",\"customConditions\":null}"
                        },
                        "command": "jest"
                      },
                      "metadata": {
                        "technologies": [
                          "jest"
                        ],
                        "description": "Run Jest Tests",
                        "help": {
                          "command": "pnpm exec jest --help",
                          "example": {
                            "options": {
                              "coverage": true
                            }
                          }
                        }
                      },
                      "cache": true,
                      "inputs": [
                        "default",
                        "^default"
                      ],
                      "outputs": [
                        "{workspaceRoot}/dist/{projectRoot}"
                      ],
                      "executor": "nx:run-commands",
                      "configurations": {},
                      "parallelism": true
                    },
                    "build": {
                      "executor": "@nx/js:tsc",
                      "outputs": [
                        "{options.outputPath}"
                      ],
                      "options": {
                        "outputPath": "dist/libs/mcp",
                        "main": "libs/mcp/src/index.ts",
                        "tsConfig": "libs/mcp/tsconfig.lib.json",
                        "assets": [
                          "libs/mcp/*.md"
                        ]
                      },
                      "configurations": {
                        "production": {
                          "optimization": true,
                          "extractLicenses": true,
                          "generatePackageJson": true,
                          "sourceMap": false
                        },
                        "development": {
                          "optimization": false,
                          "sourceMap": true
                        }
                      },
                      "defaultConfiguration": "production",
                      "cache": true,
                      "dependsOn": [
                        "^build"
                      ],
                      "inputs": [
                        "production",
                        "^production"
                      ],
                      "parallelism": true
                    },
                    "lint": {
                      "executor": "@nx/eslint:lint",
                      "outputs": [
                        "{options.outputFile}"
                      ],
                      "options": {
                        "lintFilePatterns": [
                          "libs/mcp/**/*.ts"
                        ]
                      },
                      "inputs": [
                        "default",
                        "{workspaceRoot}/.eslintrc.json"
                      ],
                      "cache": true,
                      "configurations": {},
                      "parallelism": true
                    },
                    "test": {
                      "executor": "@nx/jest:jest",
                      "outputs": [
                        "{workspaceRoot}/coverage/{projectRoot}"
                      ],
                      "options": {
                        "jestConfig": "libs/mcp/jest.config.ts",
                        "passWithNoTests": true
                      },
                      "configurations": {
                        "ci": {
                          "ci": true,
                          "codeCoverage": true
                        }
                      },
                      "inputs": [
                        "default",
                        "^default",
                        "{workspaceRoot}/jest.preset.js"
                      ],
                      "cache": true,
                      "parallelism": true
                    }
                  },
                  "name": "mcp",
                  "$schema": "../../node_modules/nx/schemas/project-schema.json",
                  "sourceRoot": "libs/mcp/src",
                  "projectType": "library",
                  "tags": [
                    "domain:mcp",
                    "type:library"
                  ],
                  "namedInputs": {
                    "default": [
                      "{projectRoot}/**/*",
                      "sharedGlobals"
                    ],
                    "production": [
                      "default",
                      "!{projectRoot}/**/?(*.)+(spec|test).[jt]s?(x)?(.snap)",
                      "!{projectRoot}/tsconfig.spec.json",
                      "!{projectRoot}/jest.config.[jt]s",
                      "!{projectRoot}/.eslintrc.json"
                    ],
                    "sharedGlobals": []
                  },
                  "implicitDependencies": []
                }
              },
              "nx-monorepo": {
                "name": "nx-monorepo",
                "type": "app",
                "data": {
                  "root": ".",
                  "name": "nx-monorepo",
                  "includedScripts": [],
                  "tags": [
                    "npm:private"
                  ],
                  "metadata": {
                    "targetGroups": {},
                    "js": {
                      "packageName": "nx-monorepo",
                      "isInPackageManagerWorkspaces": true
                    }
                  },
                  "targets": {
                    "local-registry": {
                      "executor": "@nx/js:verdaccio",
                      "options": {
                        "port": 4873,
                        "config": ".verdaccio/config.yml",
                        "storage": "tmp/local-registry/storage"
                      },
                      "configurations": {},
                      "parallelism": true,
                      "continuous": true
                    },
                    "lint": {
                      "executor": "@nx/eslint:lint",
                      "outputs": [
                        "{options.outputFile}"
                      ],
                      "options": {
                        "lintFilePatterns": [
                          "./**/*.{js,ts,mjs,cjs}"
                        ]
                      },
                      "configurations": {},
                      "parallelism": true,
                      "cache": true,
                      "inputs": [
                        "default",
                        "{workspaceRoot}/.eslintrc.json",
                        "{workspaceRoot}/tools/eslint-rules/**/*"
                      ]
                    }
                  },
                  "$schema": "node_modules/nx/schemas/project-schema.json",
                  "implicitDependencies": []
                }
              }
            },
            "dependencies": {
              "rag-document-processor": [],
              "pubsub-workflows": [],
              "reviews-api": [],
              "cloud-workflows": [],
              "gemini-orchestrator": [
                {
                  "source": "gemini-orchestrator",
                  "target": "gcp",
                  "type": "implicit"
                },
                {
                  "source": "gemini-orchestrator",
                  "target": "gcp-auth",
                  "type": "implicit"
                },
                {
                  "source": "gemini-orchestrator",
                  "target": "adk",
                  "type": "static"
                },
                {
                  "source": "gemini-orchestrator",
                  "target": "monitoring",
                  "type": "static"
                },
                {
                  "source": "gemini-orchestrator",
                  "target": "gcp",
                  "type": "static"
                }
              ],
              "social-api": [],
              "cms-api": [],
              "crm-api": [],
              "dbt-models": [],
              "utils-secrets-manager": [],
              "content-agent": [
                {
                  "source": "content-agent",
                  "target": "adk",
                  "type": "static"
                }
              ],
              "reviews-agent": [],
              "looker-agent": [],
              "schemas": [],
              "common-types": [],
              "api-clients": [
                {
                  "source": "api-clients",
                  "target": "gemini-orchestrator",
                  "type": "static"
                }
              ],
              "looker-dashboards": [],
              "crm-agent": [
                {
                  "source": "crm-agent",
                  "target": "adk",
                  "type": "static"
                }
              ],
              "monitoring": [],
              "bq-agent": [],
              "frontend-agents": [
                {
                  "source": "frontend-agents",
                  "target": "bq-agent",
                  "type": "static"
                },
                {
                  "source": "frontend-agents",
                  "target": "content-agent",
                  "type": "static"
                },
                {
                  "source": "frontend-agents",
                  "target": "crm-agent",
                  "type": "static"
                },
                {
                  "source": "frontend-agents",
                  "target": "gemini-orchestrator",
                  "type": "static"
                },
                {
                  "source": "frontend-agents",
                  "target": "looker-agent",
                  "type": "static"
                },
                {
                  "source": "frontend-agents",
                  "target": "reviews-agent",
                  "type": "static"
                },
                {
                  "source": "frontend-agents",
                  "target": "gcp",
                  "type": "static"
                }
              ],
              "gcp-auth": [],
              "signals": [],
              "ui-components": [],
              "event-parser": [
                {
                  "source": "event-parser",
                  "target": "monitoring",
                  "type": "static"
                }
              ],
              "build-tools": [],
              "agents-sdk": [],
              "agent-frontend": [
                {
                  "source": "agent-frontend",
                  "target": "signals",
                  "type": "static"
                }
              ],
              "gcp-core": [],
              "security": [
                {
                  "source": "security",
                  "target": "gcp-auth",
                  "type": "implicit"
                }
              ],
              "agents": [
                {
                  "source": "agents",
                  "target": "gemini-orchestrator",
                  "type": "implicit"
                },
                {
                  "source": "agents",
                  "target": "monitoring",
                  "type": "implicit"
                },
                {
                  "source": "agents",
                  "target": "gcp",
                  "type": "implicit"
                },
                {
                  "source": "agents",
                  "target": "security",
                  "type": "static"
                },
                {
                  "source": "agents",
                  "target": "adk",
                  "type": "static"
                },
                {
                  "source": "agents",
                  "target": "mcp",
                  "type": "static"
                },
                {
                  "source": "agents",
                  "target": "monitoring",
                  "type": "static"
                }
              ],
              "agents-lib": [
                {
                  "source": "agents-lib",
                  "target": "gcp",
                  "type": "implicit"
                }
              ],
              "adk": [
                {
                  "source": "adk",
                  "target": "gcp-auth",
                  "type": "implicit"
                },
                {
                  "source": "adk",
                  "target": "gcp",
                  "type": "static"
                }
              ],
              "api": [
                {
                  "source": "api",
                  "target": "gcp-auth",
                  "type": "implicit"
                },
                {
                  "source": "api",
                  "target": "security",
                  "type": "static"
                },
                {
                  "source": "api",
                  "target": "mcp",
                  "type": "dynamic"
                }
              ],
              "gcp": [
                {
                  "source": "gcp",
                  "target": "gcp-auth",
                  "type": "implicit"
                },
                {
                  "source": "gcp",
                  "target": "gcp-core",
                  "type": "static"
                }
              ],
              "mcp": [],
              "nx-monorepo": [
                {
                  "source": "nx-monorepo",
                  "target": "gcp-auth",
                  "type": "static"
                },
                {
                  "source": "nx-monorepo",
                  "target": "mcp",
                  "type": "static"
                },
                {
                  "source": "nx-monorepo",
                  "target": "monitoring",
                  "type": "static"
                },
                {
                  "source": "nx-monorepo",
                  "target": "looker-dashboards",
                  "type": "static"
                }
              ]
            }
          }
        }
      },
      "recommendations": [
        {
          "type": "integrate-isolated-projects",
          "priority": "low",
          "title": "Integrate Isolated Projects",
          "description": "14 projects have no dependencies. Consider integration opportunities.",
          "actions": [
            "Review if these projects should be integrated with others",
            "Consider if they represent reusable utilities that could be shared",
            "Evaluate if they should be removed if no longer needed"
          ],
          "affectedProjects": [
            "rag-document-processor",
            "pubsub-workflows",
            "reviews-api",
            "cloud-workflows",
            "social-api",
            "cms-api",
            "crm-api",
            "dbt-models",
            "utils-secrets-manager",
            "schemas",
            "common-types",
            "ui-components",
            "build-tools",
            "agents-sdk"
          ]
        }
      ],
      "fixes": []
    },
    "testCoverage": {
      "timestamp": "2025-09-01T04-17-49-265Z",
      "analysis": {
        "totalProjects": 33,
        "projectsWithTests": [
          {
            "name": "looker-dashboards",
            "type": "app",
            "testFiles": [
              "apps/looker-dashboards/src/lib/looker-dashboards.spec.ts",
              "apps/looker-dashboards/src/lib/looker-dashboards.spec.ts",
              "apps/looker-dashboards/src/lib/looker-dashboards.spec.ts"
            ],
            "testConfig": {
              "executor": "@nx/jest:jest",
              "outputs": [
                "{workspaceRoot}/coverage/{projectRoot}"
              ],
              "options": {
                "jestConfig": "apps/looker-dashboards/jest.config.ts"
              },
              "configurations": {
                "ci": {
                  "ci": true,
                  "codeCoverage": true
                }
              },
              "inputs": [
                "default",
                "^default",
                "{workspaceRoot}/jest.preset.js"
              ],
              "cache": true
            },
            "coverage": "partial"
          },
          {
            "name": "agents",
            "type": "app",
            "testFiles": [
              "apps/agents/src/main.spec.ts",
              "apps/agents/src/main.spec.ts",
              "apps/agents/src/main.spec.ts"
            ],
            "testConfig": null,
            "coverage": "partial"
          },
          {
            "name": "event-parser",
            "type": "app",
            "testFiles": [],
            "testConfig": {
              "executor": "nx:run-commands",
              "options": {
                "command": "echo 'No tests defined for event-parser'"
              },
              "configurations": {
                "ci": {
                  "ci": true,
                  "codeCoverage": true
                }
              },
              "inputs": [
                "default",
                "^default",
                "{workspaceRoot}/jest.preset.js"
              ],
              "cache": true
            },
            "coverage": "none"
          },
          {
            "name": "api",
            "type": "app",
            "testFiles": [
              "apps/api/src/routes/agents.spec.ts",
              "apps/api/src/integration/agents-flow.spec.ts",
              "apps/api/src/routes/agents.spec.ts",
              "apps/api/src/integration/agents-flow.spec.ts",
              "apps/api/src/routes/agents.spec.ts",
              "apps/api/src/integration/agents-flow.spec.ts"
            ],
            "testConfig": {
              "executor": "nx:run-commands",
              "options": {
                "command": "echo 'test placeholder'"
              },
              "configurations": {
                "ci": {
                  "ci": true,
                  "codeCoverage": true
                }
              },
              "inputs": [
                "default",
                "^default",
                "{workspaceRoot}/jest.preset.js"
              ],
              "cache": true
            },
            "coverage": "partial"
          },
          {
            "name": "ui-components",
            "type": "lib",
            "testFiles": [],
            "testConfig": {
              "executor": "@nx/jest:jest",
              "outputs": [
                "{workspaceRoot}/coverage/{projectRoot}"
              ],
              "options": {
                "jestConfig": "libs/ui/components/jest.config.ts"
              },
              "configurations": {
                "ci": {
                  "ci": true,
                  "codeCoverage": true
                }
              },
              "inputs": [
                "default",
                "^default",
                "{workspaceRoot}/jest.preset.js"
              ],
              "cache": true
            },
            "coverage": "none"
          },
          {
            "name": "adk",
            "type": "lib",
            "testFiles": [
              "libs/adk/src/services/vertex.spec.ts",
              "libs/adk/src/agents/base-agent.spec.ts",
              "libs/adk/src/services/vertex.spec.ts",
              "libs/adk/src/agents/base-agent.spec.ts",
              "libs/adk/src/services/vertex.spec.ts",
              "libs/adk/src/agents/base-agent.spec.ts"
            ],
            "testConfig": {
              "executor": "@nx/jest:jest",
              "outputs": [
                "{workspaceRoot}/coverage/{projectRoot}"
              ],
              "options": {
                "jestConfig": "libs/adk/jest.config.ts"
              }
            },
            "coverage": "partial"
          },
          {
            "name": "agents-sdk",
            "type": "lib",
            "testFiles": [
              "libs/agents-sdk/src/lib/main-agent.spec.ts",
              "libs/agents-sdk/src/lib/agents-sdk.spec.ts",
              "libs/agents-sdk/src/lib/main-agent.spec.ts",
              "libs/agents-sdk/src/lib/agents-sdk.spec.ts",
              "libs/agents-sdk/src/lib/main-agent.spec.ts",
              "libs/agents-sdk/src/lib/agents-sdk.spec.ts"
            ],
            "testConfig": {
              "executor": "@nx/jest:jest",
              "outputs": [
                "{workspaceRoot}/coverage/{projectRoot}"
              ],
              "options": {
                "jestConfig": "libs/agents-sdk/jest.config.ts"
              },
              "configurations": {
                "ci": {
                  "ci": true,
                  "codeCoverage": true
                }
              },
              "inputs": [
                "default",
                "^default",
                "{workspaceRoot}/jest.preset.js"
              ],
              "cache": true
            },
            "coverage": "partial"
          },
          {
            "name": "bq-agent",
            "type": "lib",
            "testFiles": [
              "libs/agents/bq-agent/src/lib/bq-agent.spec.ts",
              "libs/agents/bq-agent/src/lib/bq-agent.spec.ts",
              "libs/agents/bq-agent/src/lib/bq-agent.spec.ts"
            ],
            "testConfig": {
              "executor": "@nx/jest:jest",
              "outputs": [
                "{workspaceRoot}/coverage/{projectRoot}"
              ],
              "options": {
                "jestConfig": "libs/agents/bq-agent/jest.config.ts"
              },
              "configurations": {
                "ci": {
                  "ci": true,
                  "codeCoverage": true
                }
              },
              "inputs": [
                "default",
                "^default",
                "{workspaceRoot}/jest.preset.js"
              ],
              "cache": true
            },
            "coverage": "partial"
          },
          {
            "name": "looker-agent",
            "type": "lib",
            "testFiles": [
              "libs/agents/looker-agent/src/lib/looker-agent.spec.ts",
              "libs/agents/looker-agent/src/lib/looker-agent.spec.ts",
              "libs/agents/looker-agent/src/lib/looker-agent.spec.ts"
            ],
            "testConfig": {
              "executor": "@nx/jest:jest",
              "outputs": [
                "{workspaceRoot}/coverage/{projectRoot}"
              ],
              "options": {
                "jestConfig": "libs/agents/looker-agent/jest.config.ts"
              },
              "configurations": {
                "ci": {
                  "ci": true,
                  "codeCoverage": true
                }
              },
              "inputs": [
                "default",
                "^default",
                "{workspaceRoot}/jest.preset.js"
              ],
              "cache": true
            },
            "coverage": "partial"
          },
          {
            "name": "agents-lib",
            "type": "lib",
            "testFiles": [
              "libs/agents/bq-agent/src/lib/bq-agent.spec.ts",
              "libs/agents/looker-agent/src/lib/looker-agent.spec.ts",
              "libs/agents/gemini-orchestrator/src/lib/gemini-orchestrator.spec.ts",
              "libs/agents/crm-agent/src/lib/crm-agent.spec.ts",
              "libs/agents/reviews-agent/src/lib/reviews-agent.spec.ts",
              "libs/agents/content-agent/src/lib/content-agent.spec.ts",
              "libs/agents/bq-agent/src/lib/bq-agent.spec.ts",
              "libs/agents/looker-agent/src/lib/looker-agent.spec.ts",
              "libs/agents/gemini-orchestrator/src/lib/gemini-orchestrator.spec.ts",
              "libs/agents/crm-agent/src/lib/crm-agent.spec.ts",
              "libs/agents/reviews-agent/src/lib/reviews-agent.spec.ts",
              "libs/agents/content-agent/src/lib/content-agent.spec.ts",
              "libs/agents/bq-agent/src/lib/bq-agent.spec.ts",
              "libs/agents/looker-agent/src/lib/looker-agent.spec.ts",
              "libs/agents/gemini-orchestrator/src/lib/gemini-orchestrator.spec.ts",
              "libs/agents/crm-agent/src/lib/crm-agent.spec.ts",
              "libs/agents/reviews-agent/src/lib/reviews-agent.spec.ts",
              "libs/agents/content-agent/src/lib/content-agent.spec.ts"
            ],
            "testConfig": null,
            "coverage": "partial"
          },
          {
            "name": "gemini-orchestrator",
            "type": "lib",
            "testFiles": [
              "libs/agents/gemini-orchestrator/src/lib/gemini-orchestrator.spec.ts",
              "libs/agents/gemini-orchestrator/src/lib/gemini-orchestrator.spec.ts",
              "libs/agents/gemini-orchestrator/src/lib/gemini-orchestrator.spec.ts"
            ],
            "testConfig": {
              "executor": "@nx/jest:jest",
              "outputs": [
                "{workspaceRoot}/coverage/{projectRoot}"
              ],
              "options": {
                "jestConfig": "libs/agents/gemini-orchestrator/jest.config.ts"
              },
              "configurations": {
                "ci": {
                  "ci": true,
                  "codeCoverage": true
                }
              },
              "inputs": [
                "default",
                "^default",
                "{workspaceRoot}/jest.preset.js"
              ],
              "cache": true
            },
            "coverage": "partial"
          },
          {
            "name": "crm-agent",
            "type": "lib",
            "testFiles": [
              "libs/agents/crm-agent/src/lib/crm-agent.spec.ts",
              "libs/agents/crm-agent/src/lib/crm-agent.spec.ts",
              "libs/agents/crm-agent/src/lib/crm-agent.spec.ts"
            ],
            "testConfig": {
              "executor": "@nx/jest:jest",
              "outputs": [
                "{workspaceRoot}/coverage/{projectRoot}"
              ],
              "options": {
                "jestConfig": "libs/agents/crm-agent/jest.config.ts"
              },
              "configurations": {
                "ci": {
                  "ci": true,
                  "codeCoverage": true
                }
              },
              "inputs": [
                "default",
                "^default",
                "{workspaceRoot}/jest.preset.js"
              ],
              "cache": true
            },
            "coverage": "partial"
          },
          {
            "name": "reviews-agent",
            "type": "lib",
            "testFiles": [
              "libs/agents/reviews-agent/src/lib/reviews-agent.spec.ts",
              "libs/agents/reviews-agent/src/lib/reviews-agent.spec.ts",
              "libs/agents/reviews-agent/src/lib/reviews-agent.spec.ts"
            ],
            "testConfig": {
              "executor": "@nx/jest:jest",
              "outputs": [
                "{workspaceRoot}/coverage/{projectRoot}"
              ],
              "options": {
                "jestConfig": "libs/agents/reviews-agent/jest.config.ts"
              },
              "configurations": {
                "ci": {
                  "ci": true,
                  "codeCoverage": true
                }
              },
              "inputs": [
                "default",
                "^default",
                "{workspaceRoot}/jest.preset.js"
              ],
              "cache": true
            },
            "coverage": "partial"
          },
          {
            "name": "content-agent",
            "type": "lib",
            "testFiles": [
              "libs/agents/content-agent/src/lib/content-agent.spec.ts",
              "libs/agents/content-agent/src/lib/content-agent.spec.ts",
              "libs/agents/content-agent/src/lib/content-agent.spec.ts"
            ],
            "testConfig": {
              "executor": "@nx/jest:jest",
              "outputs": [
                "{workspaceRoot}/coverage/{projectRoot}"
              ],
              "options": {
                "jestConfig": "libs/agents/content-agent/jest.config.ts"
              },
              "configurations": {
                "ci": {
                  "ci": true,
                  "codeCoverage": true
                }
              },
              "inputs": [
                "default",
                "^default",
                "{workspaceRoot}/jest.preset.js"
              ],
              "cache": true
            },
            "coverage": "partial"
          },
          {
            "name": "utils-secrets-manager",
            "type": "lib",
            "testFiles": [],
            "testConfig": {
              "executor": "@nx/jest:jest",
              "outputs": [
                "{workspaceRoot}/coverage/{projectRoot}"
              ],
              "options": {
                "jestConfig": "libs/utils/secrets-manager/jest.config.ts",
                "passWithNoTests": true
              },
              "configurations": {
                "ci": {
                  "ci": true,
                  "coverage": true
                }
              }
            },
            "coverage": "none"
          },
          {
            "name": "api-clients",
            "type": "lib",
            "testFiles": [
              "libs/utils/api-clients/src/lib/api-clients.spec.ts",
              "libs/utils/api-clients/src/lib/api-clients.spec.ts",
              "libs/utils/api-clients/src/lib/api-clients.spec.ts"
            ],
            "testConfig": {
              "executor": "@nx/jest:jest",
              "outputs": [
                "{workspaceRoot}/coverage/{projectRoot}"
              ],
              "options": {
                "jestConfig": "libs/utils/api-clients/jest.config.ts"
              },
              "configurations": {
                "ci": {
                  "ci": true,
                  "codeCoverage": true
                }
              },
              "inputs": [
                "default",
                "^default",
                "{workspaceRoot}/jest.preset.js"
              ],
              "cache": true
            },
            "coverage": "partial"
          },
          {
            "name": "gcp-auth",
            "type": "lib",
            "testFiles": [
              "libs/utils/gcp-auth/src/lib/gcp-auth.spec.ts",
              "libs/utils/gcp-auth/src/lib/gcp-auth.spec.ts",
              "libs/utils/gcp-auth/src/lib/gcp-auth.spec.ts"
            ],
            "testConfig": {
              "executor": "@nx/jest:jest",
              "outputs": [
                "{workspaceRoot}/coverage/{projectRoot}"
              ],
              "options": {
                "jestConfig": "libs/utils/gcp-auth/jest.config.ts"
              },
              "configurations": {
                "ci": {
                  "ci": true,
                  "codeCoverage": true
                }
              },
              "inputs": [
                "default",
                "^default",
                "{workspaceRoot}/jest.preset.js"
              ],
              "cache": true
            },
            "coverage": "partial"
          },
          {
            "name": "monitoring",
            "type": "lib",
            "testFiles": [
              "libs/utils/monitoring/src/lib/monitoring.spec.ts",
              "libs/utils/monitoring/src/lib/monitoring.spec.ts",
              "libs/utils/monitoring/src/lib/monitoring.spec.ts"
            ],
            "testConfig": {
              "executor": "@nx/jest:jest",
              "outputs": [
                "{workspaceRoot}/coverage/{projectRoot}"
              ],
              "options": {
                "jestConfig": "libs/utils/monitoring/jest.config.ts"
              },
              "configurations": {
                "ci": {
                  "ci": true,
                  "codeCoverage": true
                }
              },
              "inputs": [
                "default",
                "^default",
                "{workspaceRoot}/jest.preset.js"
              ],
              "cache": true
            },
            "coverage": "partial"
          },
          {
            "name": "signals",
            "type": "lib",
            "testFiles": [
              "libs/utils/signals/src/signals.spec.ts",
              "libs/utils/signals/src/signals.spec.ts",
              "libs/utils/signals/src/signals.spec.ts"
            ],
            "testConfig": {
              "executor": "@nx/jest:jest",
              "outputs": [
                "{workspaceRoot}/coverage/{projectRoot}"
              ],
              "options": {
                "jestConfig": "libs/utils/signals/jest.config.ts",
                "passWithNoTests": true
              },
              "configurations": {
                "ci": {
                  "ci": true,
                  "codeCoverage": true
                }
              },
              "inputs": [
                "default",
                "^default",
                "{workspaceRoot}/jest.preset.js"
              ],
              "cache": true
            },
            "coverage": "partial"
          },
          {
            "name": "common-types",
            "type": "lib",
            "testFiles": [],
            "testConfig": {
              "executor": "@nx/jest:jest",
              "outputs": [
                "{workspaceRoot}/coverage/{projectRoot}"
              ],
              "options": {
                "jestConfig": "libs/utils/common-types/jest.config.ts"
              }
            },
            "coverage": "none"
          },
          {
            "name": "security",
            "type": "lib",
            "testFiles": [
              "libs/security/src/e2e-security.test.ts",
              "libs/security/src/security.test.ts",
              "libs/security/src/e2e-security.test.ts",
              "libs/security/src/security.test.ts",
              "libs/security/src/e2e-security.test.ts",
              "libs/security/src/security.test.ts"
            ],
            "testConfig": {
              "executor": "@nx/jest:jest",
              "outputs": [
                "{workspaceRoot}/coverage/{projectRoot}"
              ],
              "options": {
                "jestConfig": "libs/security/jest.config.ts",
                "passWithNoTests": true
              }
            },
            "coverage": "partial"
          },
          {
            "name": "build-tools",
            "type": "lib",
            "testFiles": [
              "libs/build-tools/src/lib/build-tools.spec.ts",
              "libs/build-tools/src/lib/build-tools.spec.ts",
              "libs/build-tools/src/lib/build-tools.spec.ts"
            ],
            "testConfig": {
              "executor": "@nx/jest:jest",
              "outputs": [
                "{workspaceRoot}/coverage/{projectRoot}"
              ],
              "options": {
                "jestConfig": "libs/build-tools/jest.config.ts"
              },
              "configurations": {
                "ci": {
                  "ci": true,
                  "codeCoverage": true
                }
              },
              "inputs": [
                "default",
                "^default",
                "{workspaceRoot}/jest.preset.js"
              ],
              "cache": true
            },
            "coverage": "partial"
          },
          {
            "name": "dbt-models",
            "type": "lib",
            "testFiles": [
              "libs/data-models/dbt-models/src/lib/dbt-models.spec.ts",
              "libs/data-models/dbt-models/src/lib/dbt-models.spec.ts",
              "libs/data-models/dbt-models/src/lib/dbt-models.spec.ts"
            ],
            "testConfig": {
              "executor": "@nx/jest:jest",
              "outputs": [
                "{workspaceRoot}/coverage/{projectRoot}"
              ],
              "options": {
                "jestConfig": "libs/data-models/dbt-models/jest.config.ts"
              },
              "configurations": {
                "ci": {
                  "ci": true,
                  "codeCoverage": true
                }
              },
              "inputs": [
                "default",
                "^default",
                "{workspaceRoot}/jest.preset.js"
              ],
              "cache": true
            },
            "coverage": "partial"
          },
          {
            "name": "schemas",
            "type": "lib",
            "testFiles": [
              "libs/data-models/schemas/src/lib/schemas.spec.ts",
              "libs/data-models/schemas/src/lib/schemas.spec.ts",
              "libs/data-models/schemas/src/lib/schemas.spec.ts"
            ],
            "testConfig": {
              "executor": "@nx/jest:jest",
              "outputs": [
                "{workspaceRoot}/coverage/{projectRoot}"
              ],
              "options": {
                "jestConfig": "libs/data-models/schemas/jest.config.ts"
              },
              "configurations": {
                "ci": {
                  "ci": true,
                  "codeCoverage": true
                }
              },
              "inputs": [
                "default",
                "^default",
                "{workspaceRoot}/jest.preset.js"
              ],
              "cache": true
            },
            "coverage": "partial"
          },
          {
            "name": "env",
            "type": "lib",
            "testFiles": [
              "libs/env/src/env.spec.ts",
              "libs/env/src/env.spec.ts",
              "libs/env/src/env.spec.ts"
            ],
            "testConfig": {
              "executor": "@nx/jest:jest",
              "outputs": [
                "{workspaceRoot}/coverage/{projectRoot}"
              ],
              "options": {
                "jestConfig": "libs/env/jest.config.ts"
              }
            },
            "coverage": "partial"
          },
          {
            "name": "mcp",
            "type": "lib",
            "testFiles": [
              "libs/mcp/src/lib/performance-optimization.spec.ts",
              "libs/mcp/src/lib/test-suite-validation.spec.ts",
              "libs/mcp/src/lib/mcp.service.spec.ts",
              "libs/mcp/src/lib/completed-implementations.spec.ts",
              "libs/mcp/src/lib/utils/mcp-utils.spec.ts",
              "libs/mcp/src/lib/error-handling.spec.ts",
              "libs/mcp/src/lib/vietnamese-functionality.spec.ts",
              "libs/mcp/src/lib/mcp-integration.spec.ts",
              "libs/mcp/src/lib/performance-optimization.spec.ts",
              "libs/mcp/src/lib/test-suite-validation.spec.ts",
              "libs/mcp/src/lib/mcp.service.spec.ts",
              "libs/mcp/src/lib/completed-implementations.spec.ts",
              "libs/mcp/src/lib/utils/mcp-utils.spec.ts",
              "libs/mcp/src/lib/error-handling.spec.ts",
              "libs/mcp/src/lib/vietnamese-functionality.spec.ts",
              "libs/mcp/src/lib/mcp-integration.spec.ts",
              "libs/mcp/src/lib/performance-optimization.spec.ts",
              "libs/mcp/src/lib/test-suite-validation.spec.ts",
              "libs/mcp/src/lib/mcp.service.spec.ts",
              "libs/mcp/src/lib/completed-implementations.spec.ts",
              "libs/mcp/src/lib/utils/mcp-utils.spec.ts",
              "libs/mcp/src/lib/error-handling.spec.ts",
              "libs/mcp/src/lib/vietnamese-functionality.spec.ts",
              "libs/mcp/src/lib/mcp-integration.spec.ts"
            ],
            "testConfig": {
              "executor": "@nx/jest:jest",
              "outputs": [
                "{workspaceRoot}/coverage/{projectRoot}"
              ],
              "options": {
                "jestConfig": "libs/mcp/jest.config.ts",
                "passWithNoTests": true
              },
              "configurations": {
                "ci": {
                  "ci": true,
                  "codeCoverage": true
                }
              },
              "inputs": [
                "default",
                "^default",
                "{workspaceRoot}/jest.preset.js"
              ],
              "cache": true
            },
            "coverage": "partial"
          }
        ],
        "projectsWithoutTests": [
          {
            "name": "frontend-agents",
            "type": "app",
            "root": "apps/frontend-agents",
            "reason": "No test configuration or test files found"
          },
          {
            "name": "cms-api",
            "type": "app",
            "root": "apps/cloud-functions/cms-api",
            "reason": "No test configuration or test files found"
          },
          {
            "name": "reviews-api",
            "type": "app",
            "root": "apps/cloud-functions/reviews-api",
            "reason": "No test configuration or test files found"
          },
          {
            "name": "crm-api",
            "type": "app",
            "root": "apps/cloud-functions/crm-api",
            "reason": "No test configuration or test files found"
          },
          {
            "name": "social-api",
            "type": "app",
            "root": "apps/cloud-functions/social-api",
            "reason": "No test configuration or test files found"
          },
          {
            "name": "gcp-core",
            "type": "lib",
            "root": "libs/gcp-core",
            "reason": "No test configuration or test files found"
          },
          {
            "name": "gcp",
            "type": "lib",
            "root": "libs/gcp",
            "reason": "No test configuration or test files found"
          }
        ],
        "testConfigurations": [
          {
            "project": "looker-dashboards",
            "config": {
              "executor": "@nx/jest:jest",
              "outputs": [
                "{workspaceRoot}/coverage/{projectRoot}"
              ],
              "options": {
                "jestConfig": "apps/looker-dashboards/jest.config.ts"
              },
              "configurations": {
                "ci": {
                  "ci": true,
                  "codeCoverage": true
                }
              },
              "inputs": [
                "default",
                "^default",
                "{workspaceRoot}/jest.preset.js"
              ],
              "cache": true
            }
          },
          {
            "project": "event-parser",
            "config": {
              "executor": "nx:run-commands",
              "options": {
                "command": "echo 'No tests defined for event-parser'"
              },
              "configurations": {
                "ci": {
                  "ci": true,
                  "codeCoverage": true
                }
              },
              "inputs": [
                "default",
                "^default",
                "{workspaceRoot}/jest.preset.js"
              ],
              "cache": true
            }
          },
          {
            "project": "api",
            "config": {
              "executor": "nx:run-commands",
              "options": {
                "command": "echo 'test placeholder'"
              },
              "configurations": {
                "ci": {
                  "ci": true,
                  "codeCoverage": true
                }
              },
              "inputs": [
                "default",
                "^default",
                "{workspaceRoot}/jest.preset.js"
              ],
              "cache": true
            }
          },
          {
            "project": "ui-components",
            "config": {
              "executor": "@nx/jest:jest",
              "outputs": [
                "{workspaceRoot}/coverage/{projectRoot}"
              ],
              "options": {
                "jestConfig": "libs/ui/components/jest.config.ts"
              },
              "configurations": {
                "ci": {
                  "ci": true,
                  "codeCoverage": true
                }
              },
              "inputs": [
                "default",
                "^default",
                "{workspaceRoot}/jest.preset.js"
              ],
              "cache": true
            }
          },
          {
            "project": "adk",
            "config": {
              "executor": "@nx/jest:jest",
              "outputs": [
                "{workspaceRoot}/coverage/{projectRoot}"
              ],
              "options": {
                "jestConfig": "libs/adk/jest.config.ts"
              }
            }
          },
          {
            "project": "agents-sdk",
            "config": {
              "executor": "@nx/jest:jest",
              "outputs": [
                "{workspaceRoot}/coverage/{projectRoot}"
              ],
              "options": {
                "jestConfig": "libs/agents-sdk/jest.config.ts"
              },
              "configurations": {
                "ci": {
                  "ci": true,
                  "codeCoverage": true
                }
              },
              "inputs": [
                "default",
                "^default",
                "{workspaceRoot}/jest.preset.js"
              ],
              "cache": true
            }
          },
          {
            "project": "bq-agent",
            "config": {
              "executor": "@nx/jest:jest",
              "outputs": [
                "{workspaceRoot}/coverage/{projectRoot}"
              ],
              "options": {
                "jestConfig": "libs/agents/bq-agent/jest.config.ts"
              },
              "configurations": {
                "ci": {
                  "ci": true,
                  "codeCoverage": true
                }
              },
              "inputs": [
                "default",
                "^default",
                "{workspaceRoot}/jest.preset.js"
              ],
              "cache": true
            }
          },
          {
            "project": "looker-agent",
            "config": {
              "executor": "@nx/jest:jest",
              "outputs": [
                "{workspaceRoot}/coverage/{projectRoot}"
              ],
              "options": {
                "jestConfig": "libs/agents/looker-agent/jest.config.ts"
              },
              "configurations": {
                "ci": {
                  "ci": true,
                  "codeCoverage": true
                }
              },
              "inputs": [
                "default",
                "^default",
                "{workspaceRoot}/jest.preset.js"
              ],
              "cache": true
            }
          },
          {
            "project": "gemini-orchestrator",
            "config": {
              "executor": "@nx/jest:jest",
              "outputs": [
                "{workspaceRoot}/coverage/{projectRoot}"
              ],
              "options": {
                "jestConfig": "libs/agents/gemini-orchestrator/jest.config.ts"
              },
              "configurations": {
                "ci": {
                  "ci": true,
                  "codeCoverage": true
                }
              },
              "inputs": [
                "default",
                "^default",
                "{workspaceRoot}/jest.preset.js"
              ],
              "cache": true
            }
          },
          {
            "project": "crm-agent",
            "config": {
              "executor": "@nx/jest:jest",
              "outputs": [
                "{workspaceRoot}/coverage/{projectRoot}"
              ],
              "options": {
                "jestConfig": "libs/agents/crm-agent/jest.config.ts"
              },
              "configurations": {
                "ci": {
                  "ci": true,
                  "codeCoverage": true
                }
              },
              "inputs": [
                "default",
                "^default",
                "{workspaceRoot}/jest.preset.js"
              ],
              "cache": true
            }
          },
          {
            "project": "reviews-agent",
            "config": {
              "executor": "@nx/jest:jest",
              "outputs": [
                "{workspaceRoot}/coverage/{projectRoot}"
              ],
              "options": {
                "jestConfig": "libs/agents/reviews-agent/jest.config.ts"
              },
              "configurations": {
                "ci": {
                  "ci": true,
                  "codeCoverage": true
                }
              },
              "inputs": [
                "default",
                "^default",
                "{workspaceRoot}/jest.preset.js"
              ],
              "cache": true
            }
          },
          {
            "project": "content-agent",
            "config": {
              "executor": "@nx/jest:jest",
              "outputs": [
                "{workspaceRoot}/coverage/{projectRoot}"
              ],
              "options": {
                "jestConfig": "libs/agents/content-agent/jest.config.ts"
              },
              "configurations": {
                "ci": {
                  "ci": true,
                  "codeCoverage": true
                }
              },
              "inputs": [
                "default",
                "^default",
                "{workspaceRoot}/jest.preset.js"
              ],
              "cache": true
            }
          },
          {
            "project": "utils-secrets-manager",
            "config": {
              "executor": "@nx/jest:jest",
              "outputs": [
                "{workspaceRoot}/coverage/{projectRoot}"
              ],
              "options": {
                "jestConfig": "libs/utils/secrets-manager/jest.config.ts",
                "passWithNoTests": true
              },
              "configurations": {
                "ci": {
                  "ci": true,
                  "coverage": true
                }
              }
            }
          },
          {
            "project": "api-clients",
            "config": {
              "executor": "@nx/jest:jest",
              "outputs": [
                "{workspaceRoot}/coverage/{projectRoot}"
              ],
              "options": {
                "jestConfig": "libs/utils/api-clients/jest.config.ts"
              },
              "configurations": {
                "ci": {
                  "ci": true,
                  "codeCoverage": true
                }
              },
              "inputs": [
                "default",
                "^default",
                "{workspaceRoot}/jest.preset.js"
              ],
              "cache": true
            }
          },
          {
            "project": "gcp-auth",
            "config": {
              "executor": "@nx/jest:jest",
              "outputs": [
                "{workspaceRoot}/coverage/{projectRoot}"
              ],
              "options": {
                "jestConfig": "libs/utils/gcp-auth/jest.config.ts"
              },
              "configurations": {
                "ci": {
                  "ci": true,
                  "codeCoverage": true
                }
              },
              "inputs": [
                "default",
                "^default",
                "{workspaceRoot}/jest.preset.js"
              ],
              "cache": true
            }
          },
          {
            "project": "monitoring",
            "config": {
              "executor": "@nx/jest:jest",
              "outputs": [
                "{workspaceRoot}/coverage/{projectRoot}"
              ],
              "options": {
                "jestConfig": "libs/utils/monitoring/jest.config.ts"
              },
              "configurations": {
                "ci": {
                  "ci": true,
                  "codeCoverage": true
                }
              },
              "inputs": [
                "default",
                "^default",
                "{workspaceRoot}/jest.preset.js"
              ],
              "cache": true
            }
          },
          {
            "project": "signals",
            "config": {
              "executor": "@nx/jest:jest",
              "outputs": [
                "{workspaceRoot}/coverage/{projectRoot}"
              ],
              "options": {
                "jestConfig": "libs/utils/signals/jest.config.ts",
                "passWithNoTests": true
              },
              "configurations": {
                "ci": {
                  "ci": true,
                  "codeCoverage": true
                }
              },
              "inputs": [
                "default",
                "^default",
                "{workspaceRoot}/jest.preset.js"
              ],
              "cache": true
            }
          },
          {
            "project": "common-types",
            "config": {
              "executor": "@nx/jest:jest",
              "outputs": [
                "{workspaceRoot}/coverage/{projectRoot}"
              ],
              "options": {
                "jestConfig": "libs/utils/common-types/jest.config.ts"
              }
            }
          },
          {
            "project": "security",
            "config": {
              "executor": "@nx/jest:jest",
              "outputs": [
                "{workspaceRoot}/coverage/{projectRoot}"
              ],
              "options": {
                "jestConfig": "libs/security/jest.config.ts",
                "passWithNoTests": true
              }
            }
          },
          {
            "project": "build-tools",
            "config": {
              "executor": "@nx/jest:jest",
              "outputs": [
                "{workspaceRoot}/coverage/{projectRoot}"
              ],
              "options": {
                "jestConfig": "libs/build-tools/jest.config.ts"
              },
              "configurations": {
                "ci": {
                  "ci": true,
                  "codeCoverage": true
                }
              },
              "inputs": [
                "default",
                "^default",
                "{workspaceRoot}/jest.preset.js"
              ],
              "cache": true
            }
          },
          {
            "project": "dbt-models",
            "config": {
              "executor": "@nx/jest:jest",
              "outputs": [
                "{workspaceRoot}/coverage/{projectRoot}"
              ],
              "options": {
                "jestConfig": "libs/data-models/dbt-models/jest.config.ts"
              },
              "configurations": {
                "ci": {
                  "ci": true,
                  "codeCoverage": true
                }
              },
              "inputs": [
                "default",
                "^default",
                "{workspaceRoot}/jest.preset.js"
              ],
              "cache": true
            }
          },
          {
            "project": "schemas",
            "config": {
              "executor": "@nx/jest:jest",
              "outputs": [
                "{workspaceRoot}/coverage/{projectRoot}"
              ],
              "options": {
                "jestConfig": "libs/data-models/schemas/jest.config.ts"
              },
              "configurations": {
                "ci": {
                  "ci": true,
                  "codeCoverage": true
                }
              },
              "inputs": [
                "default",
                "^default",
                "{workspaceRoot}/jest.preset.js"
              ],
              "cache": true
            }
          },
          {
            "project": "env",
            "config": {
              "executor": "@nx/jest:jest",
              "outputs": [
                "{workspaceRoot}/coverage/{projectRoot}"
              ],
              "options": {
                "jestConfig": "libs/env/jest.config.ts"
              }
            }
          },
          {
            "project": "mcp",
            "config": {
              "executor": "@nx/jest:jest",
              "outputs": [
                "{workspaceRoot}/coverage/{projectRoot}"
              ],
              "options": {
                "jestConfig": "libs/mcp/jest.config.ts",
                "passWithNoTests": true
              },
              "configurations": {
                "ci": {
                  "ci": true,
                  "codeCoverage": true
                }
              },
              "inputs": [
                "default",
                "^default",
                "{workspaceRoot}/jest.preset.js"
              ],
              "cache": true
            }
          }
        ],
        "coverage": {
          "totalTestedProjects": 26,
          "fullCoverage": 0,
          "partialCoverage": 22,
          "noneCoverage": 0,
          "coveragePercentage": "84.6"
        }
      },
      "recommendations": [
        {
          "type": "add-tests-high-priority",
          "priority": "high",
          "title": "Add Unit Tests for Applications (5 projects)",
          "description": "Critical applications are missing unit tests. Applications should have comprehensive test coverage.",
          "actions": [
            "Generate Jest/Vitest configuration for each application",
            "Create basic test files for main functionality",
            "Set up test runners in project.json targets",
            "Add test scripts to package.json"
          ],
          "affectedProjects": [
            "frontend-agents",
            "cms-api",
            "reviews-api",
            "crm-api",
            "social-api"
          ],
          "fixScript": "nx-diagnostics/scripts/fixes/add-tests-apps.sh"
        },
        {
          "type": "add-tests-medium-priority",
          "priority": "medium",
          "title": "Add Unit Tests for Libraries (2 projects)",
          "description": "Shared libraries should have unit tests to ensure reliability and prevent regressions.",
          "actions": [
            "Generate Jest/Vitest configuration for each library",
            "Create unit tests for exported functions and classes",
            "Set up test coverage reporting",
            "Add test targets to project.json"
          ],
          "affectedProjects": [
            "gcp-core",
            "gcp"
          ],
          "fixScript": "nx-diagnostics/scripts/fixes/add-tests-libs.sh"
        }
      ],
      "fixes": [
        {
          "type": "add-tests-high-priority",
          "title": "Add Unit Tests for Applications (5 projects)",
          "script": "nx-diagnostics/scripts/fixes/add-tests-apps.sh",
          "priority": "high",
          "affectedProjects": [
            "frontend-agents",
            "cms-api",
            "reviews-api",
            "crm-api",
            "social-api"
          ]
        },
        {
          "type": "add-tests-medium-priority",
          "title": "Add Unit Tests for Libraries (2 projects)",
          "script": "nx-diagnostics/scripts/fixes/add-tests-libs.sh",
          "priority": "medium",
          "affectedProjects": [
            "gcp-core",
            "gcp"
          ]
        }
      ]
    },
    "buildConfig": {
      "timestamp": "2025-09-01T04-17-49-946Z",
      "analysis": {
        "totalProjects": 33,
        "issues": [
          {
            "type": "missing-test-target",
            "severity": "high",
            "message": "Missing test target in project.json",
            "suggestion": "Add test target for unit testing",
            "project": "frontend-agents"
          },
          {
            "type": "missing-cache-inputs",
            "severity": "low",
            "message": "Build target could benefit from explicit cache inputs",
            "suggestion": "Add inputs array for better caching",
            "project": "agents"
          },
          {
            "type": "missing-test-target",
            "severity": "high",
            "message": "Missing test target in project.json",
            "suggestion": "Add test target for unit testing",
            "project": "agents"
          },
          {
            "type": "invalid-executor",
            "severity": "medium",
            "message": "Unknown build executor: nx:run-commands",
            "suggestion": "Use a standard Nx executor or custom executor",
            "project": "event-parser"
          },
          {
            "type": "missing-outputs",
            "severity": "medium",
            "message": "Build target missing output configuration",
            "suggestion": "Add outputs array to specify build artifacts",
            "project": "event-parser"
          },
          {
            "type": "invalid-test-executor",
            "severity": "medium",
            "message": "Unknown test executor: nx:run-commands",
            "suggestion": "Use @nx/jest:jest or @nx/vite:test",
            "project": "event-parser"
          },
          {
            "type": "missing-lint-target",
            "severity": "medium",
            "message": "Missing lint target in project.json",
            "suggestion": "Add ESLint target for code quality",
            "project": "cms-api"
          },
          {
            "type": "missing-test-target",
            "severity": "high",
            "message": "Missing test target in project.json",
            "suggestion": "Add test target for unit testing",
            "project": "cms-api"
          },
          {
            "type": "missing-lint-target",
            "severity": "medium",
            "message": "Missing lint target in project.json",
            "suggestion": "Add ESLint target for code quality",
            "project": "reviews-api"
          },
          {
            "type": "missing-test-target",
            "severity": "high",
            "message": "Missing test target in project.json",
            "suggestion": "Add test target for unit testing",
            "project": "reviews-api"
          },
          {
            "type": "missing-lint-target",
            "severity": "medium",
            "message": "Missing lint target in project.json",
            "suggestion": "Add ESLint target for code quality",
            "project": "crm-api"
          },
          {
            "type": "missing-test-target",
            "severity": "high",
            "message": "Missing test target in project.json",
            "suggestion": "Add test target for unit testing",
            "project": "crm-api"
          },
          {
            "type": "missing-lint-target",
            "severity": "medium",
            "message": "Missing lint target in project.json",
            "suggestion": "Add ESLint target for code quality",
            "project": "social-api"
          },
          {
            "type": "missing-test-target",
            "severity": "high",
            "message": "Missing test target in project.json",
            "suggestion": "Add test target for unit testing",
            "project": "social-api"
          },
          {
            "type": "missing-cache-inputs",
            "severity": "low",
            "message": "Build target could benefit from explicit cache inputs",
            "suggestion": "Add inputs array for better caching",
            "project": "api"
          },
          {
            "type": "invalid-test-executor",
            "severity": "medium",
            "message": "Unknown test executor: nx:run-commands",
            "suggestion": "Use @nx/jest:jest or @nx/vite:test",
            "project": "api"
          },
          {
            "type": "missing-test-target",
            "severity": "high",
            "message": "Missing test target in project.json",
            "suggestion": "Add test target for unit testing",
            "project": "gcp-core"
          },
          {
            "type": "missing-build-target",
            "severity": "high",
            "message": "Missing build target in project.json",
            "suggestion": "Add a build target with appropriate executor",
            "project": "agents-sdk"
          },
          {
            "type": "missing-lint-target",
            "severity": "medium",
            "message": "Missing lint target in project.json",
            "suggestion": "Add ESLint target for code quality",
            "project": "bq-agent"
          },
          {
            "type": "missing-lint-target",
            "severity": "medium",
            "message": "Missing lint target in project.json",
            "suggestion": "Add ESLint target for code quality",
            "project": "looker-agent"
          },
          {
            "type": "missing-test-target",
            "severity": "high",
            "message": "Missing test target in project.json",
            "suggestion": "Add test target for unit testing",
            "project": "agents-lib"
          },
          {
            "type": "missing-lint-target",
            "severity": "medium",
            "message": "Missing lint target in project.json",
            "suggestion": "Add ESLint target for code quality",
            "project": "gemini-orchestrator"
          },
          {
            "type": "missing-lint-target",
            "severity": "medium",
            "message": "Missing lint target in project.json",
            "suggestion": "Add ESLint target for code quality",
            "project": "crm-agent"
          },
          {
            "type": "missing-lint-target",
            "severity": "medium",
            "message": "Missing lint target in project.json",
            "suggestion": "Add ESLint target for code quality",
            "project": "reviews-agent"
          },
          {
            "type": "missing-lint-target",
            "severity": "medium",
            "message": "Missing lint target in project.json",
            "suggestion": "Add ESLint target for code quality",
            "project": "content-agent"
          },
          {
            "type": "missing-cache-inputs",
            "severity": "low",
            "message": "Build target could benefit from explicit cache inputs",
            "suggestion": "Add inputs array for better caching",
            "project": "utils-secrets-manager"
          },
          {
            "type": "missing-lint-target",
            "severity": "medium",
            "message": "Missing lint target in project.json",
            "suggestion": "Add ESLint target for code quality",
            "project": "api-clients"
          },
          {
            "type": "missing-lint-target",
            "severity": "medium",
            "message": "Missing lint target in project.json",
            "suggestion": "Add ESLint target for code quality",
            "project": "gcp-auth"
          },
          {
            "type": "missing-cache-inputs",
            "severity": "low",
            "message": "Build target could benefit from explicit cache inputs",
            "suggestion": "Add inputs array for better caching",
            "project": "common-types"
          },
          {
            "type": "missing-cache-inputs",
            "severity": "low",
            "message": "Build target could benefit from explicit cache inputs",
            "suggestion": "Add inputs array for better caching",
            "project": "security"
          },
          {
            "type": "missing-build-target",
            "severity": "high",
            "message": "Missing build target in project.json",
            "suggestion": "Add a build target with appropriate executor",
            "project": "build-tools"
          },
          {
            "type": "missing-lint-target",
            "severity": "medium",
            "message": "Missing lint target in project.json",
            "suggestion": "Add ESLint target for code quality",
            "project": "build-tools"
          },
          {
            "type": "missing-lint-target",
            "severity": "medium",
            "message": "Missing lint target in project.json",
            "suggestion": "Add ESLint target for code quality",
            "project": "dbt-models"
          },
          {
            "type": "missing-lint-target",
            "severity": "medium",
            "message": "Missing lint target in project.json",
            "suggestion": "Add ESLint target for code quality",
            "project": "schemas"
          },
          {
            "type": "missing-cache-inputs",
            "severity": "low",
            "message": "Build target could benefit from explicit cache inputs",
            "suggestion": "Add inputs array for better caching",
            "project": "env"
          },
          {
            "type": "missing-lint-target",
            "severity": "medium",
            "message": "Missing lint target in project.json",
            "suggestion": "Add ESLint target for code quality",
            "project": "env"
          },
          {
            "type": "missing-test-target",
            "severity": "high",
            "message": "Missing test target in project.json",
            "suggestion": "Add test target for unit testing",
            "project": "gcp"
          },
          {
            "type": "inconsistent-build-executors",
            "severity": "low",
            "message": "Multiple build executors used: @nx/js:tsc, @nx/next:build, nx:run-commands, @nx/esbuild:esbuild, @nx/rollup:rollup",
            "suggestion": "Consider standardizing build executors across similar projects",
            "affectedProjects": [
              "looker-dashboards",
              "agents",
              "api",
              "gcp-core",
              "ui-components",
              "adk",
              "bq-agent",
              "looker-agent",
              "agents-lib",
              "gemini-orchestrator",
              "crm-agent",
              "reviews-agent",
              "content-agent",
              "api-clients",
              "gcp-auth",
              "monitoring",
              "common-types",
              "security",
              "dbt-models",
              "schemas",
              "env",
              "mcp",
              "gcp",
              "frontend-agents",
              "event-parser",
              "cms-api",
              "reviews-api",
              "crm-api",
              "social-api",
              "signals",
              "utils-secrets-manager"
            ]
          },
          {
            "type": "missing-lint-configs",
            "severity": "medium",
            "message": "15 projects missing lint configuration",
            "suggestion": "Add ESLint configuration to all projects",
            "affectedProjects": [
              "cms-api",
              "reviews-api",
              "crm-api",
              "social-api",
              "bq-agent",
              "looker-agent",
              "gemini-orchestrator",
              "crm-agent",
              "reviews-agent",
              "content-agent",
              "api-clients",
              "gcp-auth",
              "dbt-models",
              "schemas",
              "env"
            ]
          },
          {
            "type": "missing-test-configs",
            "severity": "high",
            "message": "9 projects missing test configuration",
            "suggestion": "Add test configuration to all projects",
            "affectedProjects": [
              "frontend-agents",
              "agents",
              "cms-api",
              "reviews-api",
              "crm-api",
              "social-api",
              "gcp-core",
              "agents-lib",
              "gcp"
            ]
          }
        ],
        "buildConfigs": [
          {
            "project": "looker-dashboards",
            "config": {
              "executor": "@nx/js:tsc",
              "outputs": [
                "{options.outputPath}"
              ],
              "options": {
                "outputPath": "dist/apps/looker-dashboards",
                "main": "apps/looker-dashboards/src/index.ts",
                "tsConfig": "apps/looker-dashboards/tsconfig.lib.json",
                "assets": [
                  "apps/looker-dashboards/*.md"
                ]
              },
              "configurations": {
                "production": {
                  "optimization": true,
                  "extractLicenses": true,
                  "generatePackageJson": true,
                  "sourceMap": false
                },
                "development": {
                  "optimization": false,
                  "sourceMap": true
                }
              },
              "defaultConfiguration": "production",
              "cache": true,
              "dependsOn": [
                "^build"
              ],
              "inputs": [
                "production",
                "^production"
              ]
            }
          },
          {
            "project": "frontend-agents",
            "config": {
              "executor": "@nx/next:build",
              "outputs": [
                "{projectRoot}/dist"
              ],
              "defaultConfiguration": "production",
              "options": {},
              "configurations": {
                "production": {
                  "optimization": true,
                  "extractLicenses": true,
                  "generatePackageJson": true,
                  "sourceMap": false
                },
                "development": {
                  "optimization": false,
                  "sourceMap": true
                }
              },
              "cache": true,
              "dependsOn": [
                "^build"
              ],
              "inputs": [
                "production",
                "^production"
              ]
            }
          },
          {
            "project": "agents",
            "config": {
              "executor": "@nx/js:tsc",
              "outputs": [
                "{options.outputPath}"
              ],
              "options": {
                "outputPath": "dist/apps/agents",
                "main": "apps/agents/src/main.ts",
                "tsConfig": "apps/agents/tsconfig.app.json",
                "assets": [
                  "apps/agents/src/assets"
                ]
              },
              "configurations": {
                "production": {
                  "optimization": true,
                  "extractLicenses": true,
                  "generatePackageJson": true,
                  "sourceMap": false
                }
              },
              "defaultConfiguration": "production"
            }
          },
          {
            "project": "event-parser",
            "config": {
              "executor": "nx:run-commands",
              "options": {
                "command": "echo 'No build step for event-parser (Node.js Cloud Function)'"
              },
              "configurations": {
                "production": {
                  "optimization": true,
                  "extractLicenses": true,
                  "generatePackageJson": true,
                  "sourceMap": false
                },
                "development": {
                  "optimization": false,
                  "sourceMap": true
                }
              },
              "defaultConfiguration": "production",
              "cache": true,
              "dependsOn": [
                "^build"
              ],
              "inputs": [
                "production",
                "^production"
              ]
            }
          },
          {
            "project": "cms-api",
            "config": {
              "executor": "@nx/esbuild:esbuild",
              "outputs": [
                "{options.outputPath}"
              ],
              "defaultConfiguration": "production",
              "options": {
                "platform": "node",
                "outputPath": "dist/apps/cloud-functions/cms-api",
                "format": [
                  "cjs"
                ],
                "bundle": false,
                "main": "apps/cloud-functions/cms-api/src/main.ts",
                "tsConfig": "apps/cloud-functions/cms-api/tsconfig.app.json",
                "assets": [
                  "apps/cloud-functions/cms-api/src/assets"
                ],
                "generatePackageJson": true,
                "esbuildOptions": {
                  "sourcemap": true,
                  "outExtension": {
                    ".js": ".js"
                  }
                }
              },
              "configurations": {
                "production": {
                  "optimization": true,
                  "extractLicenses": true,
                  "generatePackageJson": true,
                  "sourceMap": false
                },
                "development": {
                  "optimization": false,
                  "sourceMap": true
                }
              },
              "cache": true,
              "dependsOn": [
                "^build"
              ],
              "inputs": [
                "production",
                "^production"
              ]
            }
          },
          {
            "project": "reviews-api",
            "config": {
              "executor": "@nx/esbuild:esbuild",
              "outputs": [
                "{options.outputPath}"
              ],
              "defaultConfiguration": "production",
              "options": {
                "platform": "node",
                "outputPath": "dist/apps/cloud-functions/reviews-api",
                "format": [
                  "cjs"
                ],
                "bundle": false,
                "main": "apps/cloud-functions/reviews-api/src/main.ts",
                "tsConfig": "apps/cloud-functions/reviews-api/tsconfig.app.json",
                "assets": [
                  "apps/cloud-functions/reviews-api/src/assets"
                ],
                "generatePackageJson": true,
                "esbuildOptions": {
                  "sourcemap": true,
                  "outExtension": {
                    ".js": ".js"
                  }
                }
              },
              "configurations": {
                "production": {
                  "optimization": true,
                  "extractLicenses": true,
                  "generatePackageJson": true,
                  "sourceMap": false
                },
                "development": {
                  "optimization": false,
                  "sourceMap": true
                }
              },
              "cache": true,
              "dependsOn": [
                "^build"
              ],
              "inputs": [
                "production",
                "^production"
              ]
            }
          },
          {
            "project": "crm-api",
            "config": {
              "executor": "@nx/esbuild:esbuild",
              "outputs": [
                "{options.outputPath}"
              ],
              "defaultConfiguration": "production",
              "options": {
                "platform": "node",
                "outputPath": "dist/apps/cloud-functions/crm-api",
                "format": [
                  "cjs"
                ],
                "bundle": false,
                "main": "apps/cloud-functions/crm-api/src/main.ts",
                "tsConfig": "apps/cloud-functions/crm-api/tsconfig.app.json",
                "assets": [
                  "apps/cloud-functions/crm-api/src/assets"
                ],
                "generatePackageJson": true,
                "esbuildOptions": {
                  "sourcemap": true,
                  "outExtension": {
                    ".js": ".js"
                  }
                }
              },
              "configurations": {
                "production": {
                  "optimization": true,
                  "extractLicenses": true,
                  "generatePackageJson": true,
                  "sourceMap": false
                },
                "development": {
                  "optimization": false,
                  "sourceMap": true
                }
              },
              "cache": true,
              "dependsOn": [
                "^build"
              ],
              "inputs": [
                "production",
                "^production"
              ]
            }
          },
          {
            "project": "social-api",
            "config": {
              "executor": "@nx/esbuild:esbuild",
              "outputs": [
                "{options.outputPath}"
              ],
              "defaultConfiguration": "production",
              "options": {
                "platform": "node",
                "outputPath": "dist/apps/cloud-functions/social-api",
                "format": [
                  "cjs"
                ],
                "bundle": false,
                "main": "apps/cloud-functions/social-api/src/main.ts",
                "tsConfig": "apps/cloud-functions/social-api/tsconfig.app.json",
                "assets": [
                  "apps/cloud-functions/social-api/src/assets"
                ],
                "generatePackageJson": true,
                "esbuildOptions": {
                  "sourcemap": true,
                  "outExtension": {
                    ".js": ".js"
                  }
                }
              },
              "configurations": {
                "production": {
                  "optimization": true,
                  "extractLicenses": true,
                  "generatePackageJson": true,
                  "sourceMap": false
                },
                "development": {
                  "optimization": false,
                  "sourceMap": true
                }
              },
              "cache": true,
              "dependsOn": [
                "^build"
              ],
              "inputs": [
                "production",
                "^production"
              ]
            }
          },
          {
            "project": "api",
            "config": {
              "executor": "@nx/js:tsc",
              "outputs": [
                "{options.outputPath}"
              ],
              "options": {
                "outputPath": "dist/apps/api",
                "main": "apps/api/src/main.ts",
                "tsConfig": "apps/api/tsconfig.app.json",
                "assets": [
                  "apps/api/src/routes"
                ]
              },
              "configurations": {
                "production": {
                  "optimization": true,
                  "extractLicenses": true,
                  "generatePackageJson": true,
                  "sourceMap": false
                }
              },
              "defaultConfiguration": "production"
            }
          },
          {
            "project": "gcp-core",
            "config": {
              "executor": "@nx/js:tsc",
              "outputs": [
                "{options.outputPath}"
              ],
              "options": {
                "outputPath": "dist/libs/gcp-core",
                "main": "libs/gcp-core/src/index.ts",
                "tsConfig": "libs/gcp-core/tsconfig.lib.json",
                "assets": [
                  "libs/gcp-core/*.md"
                ]
              },
              "configurations": {
                "production": {
                  "optimization": true,
                  "extractLicenses": true,
                  "generatePackageJson": true,
                  "sourceMap": false
                },
                "development": {
                  "optimization": false,
                  "sourceMap": true
                }
              },
              "defaultConfiguration": "production",
              "cache": true,
              "dependsOn": [
                "^build"
              ],
              "inputs": [
                "production",
                "^production"
              ]
            }
          },
          {
            "project": "ui-components",
            "config": {
              "executor": "@nx/js:tsc",
              "outputs": [
                "{options.outputPath}"
              ],
              "options": {
                "outputPath": "dist/libs/ui/components",
                "main": "libs/ui/components/src/index.ts",
                "tsConfig": "libs/ui/components/tsconfig.lib.json",
                "assets": [
                  "libs/ui/components/*.md"
                ]
              },
              "configurations": {
                "production": {
                  "optimization": true,
                  "extractLicenses": true,
                  "generatePackageJson": true,
                  "sourceMap": false
                },
                "development": {
                  "optimization": false,
                  "sourceMap": true
                }
              },
              "defaultConfiguration": "production",
              "cache": true,
              "dependsOn": [
                "^build"
              ],
              "inputs": [
                "production",
                "^production"
              ]
            }
          },
          {
            "project": "adk",
            "config": {
              "executor": "@nx/js:tsc",
              "outputs": [
                "{options.outputPath}"
              ],
              "options": {
                "outputPath": "dist/libs/adk",
                "main": "libs/adk/src/index.ts",
                "tsConfig": "libs/adk/tsconfig.lib.json",
                "assets": [
                  "libs/adk/*.md"
                ]
              },
              "configurations": {
                "production": {
                  "optimization": true,
                  "extractLicenses": true,
                  "generatePackageJson": true,
                  "sourceMap": false
                },
                "development": {
                  "optimization": false,
                  "sourceMap": true
                }
              },
              "defaultConfiguration": "production",
              "cache": true,
              "dependsOn": [
                "^build"
              ],
              "inputs": [
                "production",
                "^production"
              ]
            }
          },
          {
            "project": "bq-agent",
            "config": {
              "executor": "@nx/js:tsc",
              "outputs": [
                "{options.outputPath}"
              ],
              "options": {
                "outputPath": "dist/libs/agents/bq-agent",
                "main": "libs/agents/bq-agent/src/index.ts",
                "tsConfig": "libs/agents/bq-agent/tsconfig.lib.json",
                "assets": [
                  "libs/agents/bq-agent/*.md"
                ]
              },
              "configurations": {
                "production": {
                  "optimization": true,
                  "extractLicenses": true,
                  "generatePackageJson": true,
                  "sourceMap": false
                },
                "development": {
                  "optimization": false,
                  "sourceMap": true
                }
              },
              "defaultConfiguration": "production",
              "cache": true,
              "dependsOn": [
                "^build"
              ],
              "inputs": [
                "production",
                "^production"
              ]
            }
          },
          {
            "project": "looker-agent",
            "config": {
              "executor": "@nx/js:tsc",
              "outputs": [
                "{options.outputPath}"
              ],
              "options": {
                "outputPath": "dist/libs/agents/looker-agent",
                "main": "libs/agents/looker-agent/src/index.ts",
                "tsConfig": "libs/agents/looker-agent/tsconfig.lib.json",
                "assets": [
                  "libs/agents/looker-agent/*.md"
                ]
              },
              "configurations": {
                "production": {
                  "optimization": true,
                  "extractLicenses": true,
                  "generatePackageJson": true,
                  "sourceMap": false
                },
                "development": {
                  "optimization": false,
                  "sourceMap": true
                }
              },
              "defaultConfiguration": "production",
              "cache": true,
              "dependsOn": [
                "^build"
              ],
              "inputs": [
                "production",
                "^production"
              ]
            }
          },
          {
            "project": "agents-lib",
            "config": {
              "executor": "@nx/js:tsc",
              "outputs": [
                "{options.outputPath}"
              ],
              "options": {
                "outputPath": "dist/libs/agents",
                "main": "libs/agents/src/index.ts",
                "tsConfig": "libs/agents/tsconfig.lib.json",
                "assets": [
                  "libs/agents/*.md"
                ]
              },
              "configurations": {
                "production": {
                  "optimization": true,
                  "extractLicenses": true,
                  "generatePackageJson": true,
                  "sourceMap": false
                },
                "development": {
                  "optimization": false,
                  "sourceMap": true
                }
              },
              "defaultConfiguration": "production",
              "cache": true,
              "dependsOn": [
                "^build"
              ],
              "inputs": [
                "production",
                "^production"
              ]
            }
          },
          {
            "project": "gemini-orchestrator",
            "config": {
              "executor": "@nx/js:tsc",
              "outputs": [
                "{options.outputPath}"
              ],
              "options": {
                "outputPath": "dist/libs/agents/gemini-orchestrator",
                "main": "libs/agents/gemini-orchestrator/src/index.ts",
                "tsConfig": "libs/agents/gemini-orchestrator/tsconfig.lib.json",
                "assets": [
                  "libs/agents/gemini-orchestrator/*.md"
                ]
              },
              "configurations": {
                "production": {
                  "optimization": true,
                  "extractLicenses": true,
                  "generatePackageJson": true,
                  "sourceMap": false
                },
                "development": {
                  "optimization": false,
                  "sourceMap": true
                }
              },
              "defaultConfiguration": "production",
              "cache": true,
              "dependsOn": [
                "^build"
              ],
              "inputs": [
                "production",
                "^production"
              ]
            }
          },
          {
            "project": "crm-agent",
            "config": {
              "executor": "@nx/js:tsc",
              "outputs": [
                "{options.outputPath}"
              ],
              "options": {
                "outputPath": "dist/libs/agents/crm-agent",
                "main": "libs/agents/crm-agent/src/index.ts",
                "tsConfig": "libs/agents/crm-agent/tsconfig.lib.json",
                "assets": [
                  "libs/agents/crm-agent/*.md"
                ]
              },
              "configurations": {
                "production": {
                  "optimization": true,
                  "extractLicenses": true,
                  "generatePackageJson": true,
                  "sourceMap": false
                },
                "development": {
                  "optimization": false,
                  "sourceMap": true
                }
              },
              "defaultConfiguration": "production",
              "cache": true,
              "dependsOn": [
                "^build"
              ],
              "inputs": [
                "production",
                "^production"
              ]
            }
          },
          {
            "project": "reviews-agent",
            "config": {
              "executor": "@nx/js:tsc",
              "outputs": [
                "{options.outputPath}"
              ],
              "options": {
                "outputPath": "dist/libs/agents/reviews-agent",
                "main": "libs/agents/reviews-agent/src/index.ts",
                "tsConfig": "libs/agents/reviews-agent/tsconfig.lib.json",
                "assets": [
                  "libs/agents/reviews-agent/*.md"
                ]
              },
              "configurations": {
                "production": {
                  "optimization": true,
                  "extractLicenses": true,
                  "generatePackageJson": true,
                  "sourceMap": false
                },
                "development": {
                  "optimization": false,
                  "sourceMap": true
                }
              },
              "defaultConfiguration": "production",
              "cache": true,
              "dependsOn": [
                "^build"
              ],
              "inputs": [
                "production",
                "^production"
              ]
            }
          },
          {
            "project": "content-agent",
            "config": {
              "executor": "@nx/js:tsc",
              "outputs": [
                "{options.outputPath}"
              ],
              "options": {
                "outputPath": "dist/libs/agents/content-agent",
                "main": "libs/agents/content-agent/src/index.ts",
                "tsConfig": "libs/agents/content-agent/tsconfig.lib.json",
                "assets": [
                  "libs/agents/content-agent/*.md"
                ]
              },
              "configurations": {
                "production": {
                  "optimization": true,
                  "extractLicenses": true,
                  "generatePackageJson": true,
                  "sourceMap": false
                },
                "development": {
                  "optimization": false,
                  "sourceMap": true
                }
              },
              "defaultConfiguration": "production",
              "cache": true,
              "dependsOn": [
                "^build"
              ],
              "inputs": [
                "production",
                "^production"
              ]
            }
          },
          {
            "project": "utils-secrets-manager",
            "config": {
              "executor": "@nx/rollup:rollup",
              "outputs": [
                "{options.outputPath}"
              ],
              "options": {
                "outputPath": "dist/libs/utils/secrets-manager",
                "tsConfig": "libs/utils/secrets-manager/tsconfig.lib.json",
                "project": "libs/utils/secrets-manager/package.json",
                "entryFile": "libs/utils/secrets-manager/src/index.ts",
                "external": [
                  "rxjs",
                  "@google-cloud/secret-manager"
                ],
                "rollupConfig": "@nx/react/plugins/bundle-rollup"
              }
            }
          },
          {
            "project": "api-clients",
            "config": {
              "executor": "@nx/js:tsc",
              "outputs": [
                "{options.outputPath}"
              ],
              "options": {
                "outputPath": "dist/libs/utils/api-clients",
                "main": "libs/utils/api-clients/src/index.ts",
                "tsConfig": "libs/utils/api-clients/tsconfig.lib.json",
                "assets": [
                  "libs/utils/api-clients/*.md"
                ]
              },
              "configurations": {
                "production": {
                  "optimization": true,
                  "extractLicenses": true,
                  "generatePackageJson": true,
                  "sourceMap": false
                },
                "development": {
                  "optimization": false,
                  "sourceMap": true
                }
              },
              "defaultConfiguration": "production",
              "cache": true,
              "dependsOn": [
                "^build"
              ],
              "inputs": [
                "production",
                "^production"
              ]
            }
          },
          {
            "project": "gcp-auth",
            "config": {
              "executor": "@nx/js:tsc",
              "outputs": [
                "{options.outputPath}"
              ],
              "options": {
                "outputPath": "dist/libs/utils/gcp-auth",
                "main": "libs/utils/gcp-auth/src/index.ts",
                "tsConfig": "libs/utils/gcp-auth/tsconfig.lib.json",
                "assets": [
                  "libs/utils/gcp-auth/*.md"
                ]
              },
              "configurations": {
                "production": {
                  "optimization": true,
                  "extractLicenses": true,
                  "generatePackageJson": true,
                  "sourceMap": false
                },
                "development": {
                  "optimization": false,
                  "sourceMap": true
                }
              },
              "defaultConfiguration": "production",
              "cache": true,
              "dependsOn": [
                "^build"
              ],
              "inputs": [
                "production",
                "^production"
              ]
            }
          },
          {
            "project": "monitoring",
            "config": {
              "executor": "@nx/js:tsc",
              "outputs": [
                "{options.outputPath}"
              ],
              "options": {
                "outputPath": "dist/libs/utils/monitoring",
                "main": "libs/utils/monitoring/src/index.ts",
                "tsConfig": "libs/utils/monitoring/tsconfig.lib.json",
                "assets": [
                  "libs/utils/monitoring/*.md"
                ]
              },
              "configurations": {
                "production": {
                  "optimization": true,
                  "extractLicenses": true,
                  "generatePackageJson": true,
                  "sourceMap": false
                },
                "development": {
                  "optimization": false,
                  "sourceMap": true
                }
              },
              "defaultConfiguration": "production",
              "cache": true,
              "dependsOn": [
                "^build"
              ],
              "inputs": [
                "production",
                "^production"
              ]
            }
          },
          {
            "project": "signals",
            "config": {
              "executor": "@nx/esbuild:esbuild",
              "outputs": [
                "{options.outputPath}"
              ],
              "options": {
                "outputPath": "dist/libs/utils/signals",
                "main": "libs/utils/signals/index.ts",
                "tsConfig": "libs/utils/signals/tsconfig.json",
                "assets": [
                  "libs/utils/signals/*.md"
                ],
                "generatePackageJson": true
              },
              "configurations": {
                "production": {
                  "optimization": true,
                  "extractLicenses": true,
                  "generatePackageJson": true,
                  "sourceMap": false
                },
                "development": {
                  "optimization": false,
                  "sourceMap": true
                }
              },
              "defaultConfiguration": "production",
              "cache": true,
              "dependsOn": [
                "^build"
              ],
              "inputs": [
                "production",
                "^production"
              ]
            }
          },
          {
            "project": "common-types",
            "config": {
              "executor": "@nx/js:tsc",
              "outputs": [
                "{options.outputPath}"
              ],
              "options": {
                "outputPath": "dist/libs/utils/common-types",
                "main": "libs/utils/common-types/src/index.ts",
                "tsConfig": "libs/utils/common-types/tsconfig.lib.json",
                "assets": [
                  "libs/utils/common-types/*.md"
                ]
              }
            }
          },
          {
            "project": "security",
            "config": {
              "executor": "@nx/js:tsc",
              "outputs": [
                "{options.outputPath}"
              ],
              "options": {
                "outputPath": "dist/libs/security",
                "tsConfig": "libs/security/tsconfig.lib.json",
                "packageJson": "libs/security/package.json"
              }
            }
          },
          {
            "project": "dbt-models",
            "config": {
              "executor": "@nx/js:tsc",
              "outputs": [
                "{options.outputPath}"
              ],
              "options": {
                "outputPath": "dist/libs/data-models/dbt-models",
                "main": "libs/data-models/dbt-models/src/index.ts",
                "tsConfig": "libs/data-models/dbt-models/tsconfig.lib.json",
                "assets": [
                  "libs/data-models/dbt-models/*.md"
                ]
              },
              "configurations": {
                "production": {
                  "optimization": true,
                  "extractLicenses": true,
                  "generatePackageJson": true,
                  "sourceMap": false
                },
                "development": {
                  "optimization": false,
                  "sourceMap": true
                }
              },
              "defaultConfiguration": "production",
              "cache": true,
              "dependsOn": [
                "^build"
              ],
              "inputs": [
                "production",
                "^production"
              ]
            }
          },
          {
            "project": "schemas",
            "config": {
              "executor": "@nx/js:tsc",
              "outputs": [
                "{options.outputPath}"
              ],
              "options": {
                "outputPath": "dist/libs/data-models/schemas",
                "main": "libs/data-models/schemas/src/index.ts",
                "tsConfig": "libs/data-models/schemas/tsconfig.lib.json",
                "assets": [
                  "libs/data-models/schemas/*.md"
                ]
              },
              "configurations": {
                "production": {
                  "optimization": true,
                  "extractLicenses": true,
                  "generatePackageJson": true,
                  "sourceMap": false
                },
                "development": {
                  "optimization": false,
                  "sourceMap": true
                }
              },
              "defaultConfiguration": "production",
              "cache": true,
              "dependsOn": [
                "^build"
              ],
              "inputs": [
                "production",
                "^production"
              ]
            }
          },
          {
            "project": "env",
            "config": {
              "executor": "@nx/js:tsc",
              "outputs": [
                "{options.outputPath}"
              ],
              "options": {
                "outputPath": "dist/libs/env",
                "main": "libs/env/src/index.ts",
                "tsConfig": "libs/env/tsconfig.lib.json",
                "assets": [
                  "libs/env/*.md"
                ]
              }
            }
          },
          {
            "project": "mcp",
            "config": {
              "executor": "@nx/js:tsc",
              "outputs": [
                "{options.outputPath}"
              ],
              "options": {
                "outputPath": "dist/libs/mcp",
                "main": "libs/mcp/src/index.ts",
                "tsConfig": "libs/mcp/tsconfig.lib.json",
                "assets": [
                  "libs/mcp/*.md"
                ]
              },
              "configurations": {
                "production": {
                  "optimization": true,
                  "extractLicenses": true,
                  "generatePackageJson": true,
                  "sourceMap": false
                },
                "development": {
                  "optimization": false,
                  "sourceMap": true
                }
              },
              "defaultConfiguration": "production",
              "cache": true,
              "dependsOn": [
                "^build"
              ],
              "inputs": [
                "production",
                "^production"
              ]
            }
          },
          {
            "project": "gcp",
            "config": {
              "executor": "@nx/js:tsc",
              "outputs": [
                "{options.outputPath}"
              ],
              "options": {
                "outputPath": "dist/libs/gcp",
                "main": "libs/gcp/src/index.ts",
                "tsConfig": "libs/gcp/tsconfig.lib.json",
                "assets": [
                  "libs/gcp/*.md"
                ]
              },
              "configurations": {
                "production": {
                  "optimization": true,
                  "extractLicenses": true,
                  "generatePackageJson": true,
                  "sourceMap": false
                },
                "development": {
                  "optimization": false,
                  "sourceMap": true
                }
              },
              "defaultConfiguration": "production",
              "cache": true,
              "dependsOn": [
                "^build"
              ],
              "inputs": [
                "production",
                "^production"
              ]
            }
          }
        ],
        "lintConfigs": [
          {
            "project": "looker-dashboards",
            "config": {
              "executor": "@nx/eslint:lint",
              "options": {
                "lintFilePatterns": [
                  "apps/looker-dashboards/**/*.{ts,tsx,js,jsx}"
                ]
              },
              "inputs": [
                "default",
                "{workspaceRoot}/.eslintrc.json"
              ],
              "cache": true
            }
          },
          {
            "project": "frontend-agents",
            "config": {
              "executor": "@nx/eslint:lint",
              "options": {
                "lintFilePatterns": [
                  "apps/frontend-agents/**/*.{ts,tsx,js,jsx}"
                ]
              },
              "inputs": [
                "default",
                "{workspaceRoot}/.eslintrc.json"
              ],
              "cache": true
            }
          },
          {
            "project": "agents",
            "config": {
              "executor": "@nx/eslint:lint",
              "options": {
                "lintFilePatterns": [
                  "apps/agents/**/*.{ts,tsx,js,jsx}"
                ]
              },
              "inputs": [
                "default",
                "{workspaceRoot}/.eslintrc.json"
              ],
              "cache": true
            }
          },
          {
            "project": "event-parser",
            "config": {
              "executor": "@nx/eslint:lint",
              "options": {
                "lintFilePatterns": [
                  "apps/event-parser/**/*.{ts,tsx,js,jsx}"
                ]
              },
              "inputs": [
                "default",
                "{workspaceRoot}/.eslintrc.json"
              ],
              "cache": true
            }
          },
          {
            "project": "api",
            "config": {
              "executor": "@nx/eslint:lint",
              "options": {
                "args": [
                  "**/*.{ts,tsx,js,jsx}"
                ]
              },
              "inputs": [
                "default",
                "{workspaceRoot}/.eslintrc.json"
              ],
              "cache": true
            }
          },
          {
            "project": "gcp-core",
            "config": {
              "executor": "@nx/eslint:lint",
              "options": {
                "lintFilePatterns": [
                  "libs/gcp-core/**/*.ts"
                ]
              }
            }
          },
          {
            "project": "ui-components",
            "config": {
              "executor": "@nx/eslint:lint",
              "options": {
                "lintFilePatterns": [
                  "libs/ui/components/**/*.{ts,tsx,js,jsx}"
                ]
              },
              "inputs": [
                "default",
                "{workspaceRoot}/.eslintrc.json"
              ],
              "cache": true
            }
          },
          {
            "project": "adk",
            "config": {
              "executor": "@nx/eslint:lint",
              "options": {
                "lintFilePatterns": [
                  "libs/adk/**/*.{ts,tsx,js,jsx}"
                ]
              },
              "inputs": [
                "default",
                "{workspaceRoot}/.eslintrc.json"
              ],
              "cache": true
            }
          },
          {
            "project": "agents-sdk",
            "config": {
              "executor": "@nx/eslint:lint",
              "options": {
                "lintFilePatterns": [
                  "libs/agents-sdk/**/*.{ts,tsx,js,jsx}"
                ]
              },
              "inputs": [
                "default",
                "{workspaceRoot}/.eslintrc.json"
              ],
              "cache": true
            }
          },
          {
            "project": "agents-lib",
            "config": {
              "executor": "@nx/eslint:lint",
              "options": {
                "lintFilePatterns": [
                  "libs/agents/**/*.{ts,tsx,js,jsx}"
                ]
              },
              "inputs": [
                "default",
                "{workspaceRoot}/.eslintrc.json"
              ],
              "cache": true
            }
          },
          {
            "project": "utils-secrets-manager",
            "config": {
              "executor": "@nx/eslint:lint",
              "outputs": [
                "{options.outputFile}"
              ],
              "options": {
                "lintFilePatterns": [
                  "libs/utils/secrets-manager/**/*.ts"
                ]
              }
            }
          },
          {
            "project": "monitoring",
            "config": {
              "executor": "@nx/eslint:lint",
              "outputs": [
                "{options.outputFile}"
              ],
              "options": {
                "lintFilePatterns": [
                  "libs/utils/monitoring/**/*.ts",
                  "libs/utils/monitoring/**/*.tsx",
                  "libs/utils/monitoring/**/*.js",
                  "libs/utils/monitoring/**/*.jsx"
                ]
              },
              "inputs": [
                "default",
                "{workspaceRoot}/.eslintrc.json"
              ],
              "cache": true
            }
          },
          {
            "project": "signals",
            "config": {
              "executor": "@nx/eslint:lint",
              "outputs": [
                "{options.outputFile}"
              ],
              "options": {
                "lintFilePatterns": [
                  "libs/utils/signals/**/*.ts"
                ]
              },
              "inputs": [
                "default",
                "{workspaceRoot}/.eslintrc.json"
              ],
              "cache": true
            }
          },
          {
            "project": "common-types",
            "config": {
              "executor": "@nx/eslint:lint",
              "outputs": [
                "{options.outputFile}"
              ]
            }
          },
          {
            "project": "security",
            "config": {
              "executor": "@nx/eslint:lint",
              "outputs": [
                "{options.outputFile}"
              ],
              "options": {
                "lintFilePatterns": [
                  "libs/security/**/*.ts"
                ]
              }
            }
          },
          {
            "project": "mcp",
            "config": {
              "executor": "@nx/eslint:lint",
              "outputs": [
                "{options.outputFile}"
              ],
              "options": {
                "lintFilePatterns": [
                  "libs/mcp/**/*.ts"
                ]
              },
              "inputs": [
                "default",
                "{workspaceRoot}/.eslintrc.json"
              ],
              "cache": true
            }
          },
          {
            "project": "gcp",
            "config": {
              "executor": "@nx/eslint:lint",
              "options": {
                "lintFilePatterns": [
                  "libs/gcp/**/*.{ts,tsx,js,jsx}"
                ]
              },
              "inputs": [
                "default",
                "{workspaceRoot}/.eslintrc.json"
              ],
              "cache": true
            }
          }
        ],
        "testConfigs": [
          {
            "project": "looker-dashboards",
            "config": {
              "executor": "@nx/jest:jest",
              "outputs": [
                "{workspaceRoot}/coverage/{projectRoot}"
              ],
              "options": {
                "jestConfig": "apps/looker-dashboards/jest.config.ts"
              },
              "configurations": {
                "ci": {
                  "ci": true,
                  "codeCoverage": true
                }
              },
              "inputs": [
                "default",
                "^default",
                "{workspaceRoot}/jest.preset.js"
              ],
              "cache": true
            }
          },
          {
            "project": "event-parser",
            "config": {
              "executor": "nx:run-commands",
              "options": {
                "command": "echo 'No tests defined for event-parser'"
              },
              "configurations": {
                "ci": {
                  "ci": true,
                  "codeCoverage": true
                }
              },
              "inputs": [
                "default",
                "^default",
                "{workspaceRoot}/jest.preset.js"
              ],
              "cache": true
            }
          },
          {
            "project": "api",
            "config": {
              "executor": "nx:run-commands",
              "options": {
                "command": "echo 'test placeholder'"
              },
              "configurations": {
                "ci": {
                  "ci": true,
                  "codeCoverage": true
                }
              },
              "inputs": [
                "default",
                "^default",
                "{workspaceRoot}/jest.preset.js"
              ],
              "cache": true
            }
          },
          {
            "project": "ui-components",
            "config": {
              "executor": "@nx/jest:jest",
              "outputs": [
                "{workspaceRoot}/coverage/{projectRoot}"
              ],
              "options": {
                "jestConfig": "libs/ui/components/jest.config.ts"
              },
              "configurations": {
                "ci": {
                  "ci": true,
                  "codeCoverage": true
                }
              },
              "inputs": [
                "default",
                "^default",
                "{workspaceRoot}/jest.preset.js"
              ],
              "cache": true
            }
          },
          {
            "project": "adk",
            "config": {
              "executor": "@nx/jest:jest",
              "outputs": [
                "{workspaceRoot}/coverage/{projectRoot}"
              ],
              "options": {
                "jestConfig": "libs/adk/jest.config.ts"
              }
            }
          },
          {
            "project": "agents-sdk",
            "config": {
              "executor": "@nx/jest:jest",
              "outputs": [
                "{workspaceRoot}/coverage/{projectRoot}"
              ],
              "options": {
                "jestConfig": "libs/agents-sdk/jest.config.ts"
              },
              "configurations": {
                "ci": {
                  "ci": true,
                  "codeCoverage": true
                }
              },
              "inputs": [
                "default",
                "^default",
                "{workspaceRoot}/jest.preset.js"
              ],
              "cache": true
            }
          },
          {
            "project": "bq-agent",
            "config": {
              "executor": "@nx/jest:jest",
              "outputs": [
                "{workspaceRoot}/coverage/{projectRoot}"
              ],
              "options": {
                "jestConfig": "libs/agents/bq-agent/jest.config.ts"
              },
              "configurations": {
                "ci": {
                  "ci": true,
                  "codeCoverage": true
                }
              },
              "inputs": [
                "default",
                "^default",
                "{workspaceRoot}/jest.preset.js"
              ],
              "cache": true
            }
          },
          {
            "project": "looker-agent",
            "config": {
              "executor": "@nx/jest:jest",
              "outputs": [
                "{workspaceRoot}/coverage/{projectRoot}"
              ],
              "options": {
                "jestConfig": "libs/agents/looker-agent/jest.config.ts"
              },
              "configurations": {
                "ci": {
                  "ci": true,
                  "codeCoverage": true
                }
              },
              "inputs": [
                "default",
                "^default",
                "{workspaceRoot}/jest.preset.js"
              ],
              "cache": true
            }
          },
          {
            "project": "gemini-orchestrator",
            "config": {
              "executor": "@nx/jest:jest",
              "outputs": [
                "{workspaceRoot}/coverage/{projectRoot}"
              ],
              "options": {
                "jestConfig": "libs/agents/gemini-orchestrator/jest.config.ts"
              },
              "configurations": {
                "ci": {
                  "ci": true,
                  "codeCoverage": true
                }
              },
              "inputs": [
                "default",
                "^default",
                "{workspaceRoot}/jest.preset.js"
              ],
              "cache": true
            }
          },
          {
            "project": "crm-agent",
            "config": {
              "executor": "@nx/jest:jest",
              "outputs": [
                "{workspaceRoot}/coverage/{projectRoot}"
              ],
              "options": {
                "jestConfig": "libs/agents/crm-agent/jest.config.ts"
              },
              "configurations": {
                "ci": {
                  "ci": true,
                  "codeCoverage": true
                }
              },
              "inputs": [
                "default",
                "^default",
                "{workspaceRoot}/jest.preset.js"
              ],
              "cache": true
            }
          },
          {
            "project": "reviews-agent",
            "config": {
              "executor": "@nx/jest:jest",
              "outputs": [
                "{workspaceRoot}/coverage/{projectRoot}"
              ],
              "options": {
                "jestConfig": "libs/agents/reviews-agent/jest.config.ts"
              },
              "configurations": {
                "ci": {
                  "ci": true,
                  "codeCoverage": true
                }
              },
              "inputs": [
                "default",
                "^default",
                "{workspaceRoot}/jest.preset.js"
              ],
              "cache": true
            }
          },
          {
            "project": "content-agent",
            "config": {
              "executor": "@nx/jest:jest",
              "outputs": [
                "{workspaceRoot}/coverage/{projectRoot}"
              ],
              "options": {
                "jestConfig": "libs/agents/content-agent/jest.config.ts"
              },
              "configurations": {
                "ci": {
                  "ci": true,
                  "codeCoverage": true
                }
              },
              "inputs": [
                "default",
                "^default",
                "{workspaceRoot}/jest.preset.js"
              ],
              "cache": true
            }
          },
          {
            "project": "utils-secrets-manager",
            "config": {
              "executor": "@nx/jest:jest",
              "outputs": [
                "{workspaceRoot}/coverage/{projectRoot}"
              ],
              "options": {
                "jestConfig": "libs/utils/secrets-manager/jest.config.ts",
                "passWithNoTests": true
              },
              "configurations": {
                "ci": {
                  "ci": true,
                  "coverage": true
                }
              }
            }
          },
          {
            "project": "api-clients",
            "config": {
              "executor": "@nx/jest:jest",
              "outputs": [
                "{workspaceRoot}/coverage/{projectRoot}"
              ],
              "options": {
                "jestConfig": "libs/utils/api-clients/jest.config.ts"
              },
              "configurations": {
                "ci": {
                  "ci": true,
                  "codeCoverage": true
                }
              },
              "inputs": [
                "default",
                "^default",
                "{workspaceRoot}/jest.preset.js"
              ],
              "cache": true
            }
          },
          {
            "project": "gcp-auth",
            "config": {
              "executor": "@nx/jest:jest",
              "outputs": [
                "{workspaceRoot}/coverage/{projectRoot}"
              ],
              "options": {
                "jestConfig": "libs/utils/gcp-auth/jest.config.ts"
              },
              "configurations": {
                "ci": {
                  "ci": true,
                  "codeCoverage": true
                }
              },
              "inputs": [
                "default",
                "^default",
                "{workspaceRoot}/jest.preset.js"
              ],
              "cache": true
            }
          },
          {
            "project": "monitoring",
            "config": {
              "executor": "@nx/jest:jest",
              "outputs": [
                "{workspaceRoot}/coverage/{projectRoot}"
              ],
              "options": {
                "jestConfig": "libs/utils/monitoring/jest.config.ts"
              },
              "configurations": {
                "ci": {
                  "ci": true,
                  "codeCoverage": true
                }
              },
              "inputs": [
                "default",
                "^default",
                "{workspaceRoot}/jest.preset.js"
              ],
              "cache": true
            }
          },
          {
            "project": "signals",
            "config": {
              "executor": "@nx/jest:jest",
              "outputs": [
                "{workspaceRoot}/coverage/{projectRoot}"
              ],
              "options": {
                "jestConfig": "libs/utils/signals/jest.config.ts",
                "passWithNoTests": true
              },
              "configurations": {
                "ci": {
                  "ci": true,
                  "codeCoverage": true
                }
              },
              "inputs": [
                "default",
                "^default",
                "{workspaceRoot}/jest.preset.js"
              ],
              "cache": true
            }
          },
          {
            "project": "common-types",
            "config": {
              "executor": "@nx/jest:jest",
              "outputs": [
                "{workspaceRoot}/coverage/{projectRoot}"
              ],
              "options": {
                "jestConfig": "libs/utils/common-types/jest.config.ts"
              }
            }
          },
          {
            "project": "security",
            "config": {
              "executor": "@nx/jest:jest",
              "outputs": [
                "{workspaceRoot}/coverage/{projectRoot}"
              ],
              "options": {
                "jestConfig": "libs/security/jest.config.ts",
                "passWithNoTests": true
              }
            }
          },
          {
            "project": "build-tools",
            "config": {
              "executor": "@nx/jest:jest",
              "outputs": [
                "{workspaceRoot}/coverage/{projectRoot}"
              ],
              "options": {
                "jestConfig": "libs/build-tools/jest.config.ts"
              },
              "configurations": {
                "ci": {
                  "ci": true,
                  "codeCoverage": true
                }
              },
              "inputs": [
                "default",
                "^default",
                "{workspaceRoot}/jest.preset.js"
              ],
              "cache": true
            }
          },
          {
            "project": "dbt-models",
            "config": {
              "executor": "@nx/jest:jest",
              "outputs": [
                "{workspaceRoot}/coverage/{projectRoot}"
              ],
              "options": {
                "jestConfig": "libs/data-models/dbt-models/jest.config.ts"
              },
              "configurations": {
                "ci": {
                  "ci": true,
                  "codeCoverage": true
                }
              },
              "inputs": [
                "default",
                "^default",
                "{workspaceRoot}/jest.preset.js"
              ],
              "cache": true
            }
          },
          {
            "project": "schemas",
            "config": {
              "executor": "@nx/jest:jest",
              "outputs": [
                "{workspaceRoot}/coverage/{projectRoot}"
              ],
              "options": {
                "jestConfig": "libs/data-models/schemas/jest.config.ts"
              },
              "configurations": {
                "ci": {
                  "ci": true,
                  "codeCoverage": true
                }
              },
              "inputs": [
                "default",
                "^default",
                "{workspaceRoot}/jest.preset.js"
              ],
              "cache": true
            }
          },
          {
            "project": "env",
            "config": {
              "executor": "@nx/jest:jest",
              "outputs": [
                "{workspaceRoot}/coverage/{projectRoot}"
              ],
              "options": {
                "jestConfig": "libs/env/jest.config.ts"
              }
            }
          },
          {
            "project": "mcp",
            "config": {
              "executor": "@nx/jest:jest",
              "outputs": [
                "{workspaceRoot}/coverage/{projectRoot}"
              ],
              "options": {
                "jestConfig": "libs/mcp/jest.config.ts",
                "passWithNoTests": true
              },
              "configurations": {
                "ci": {
                  "ci": true,
                  "codeCoverage": true
                }
              },
              "inputs": [
                "default",
                "^default",
                "{workspaceRoot}/jest.preset.js"
              ],
              "cache": true
            }
          }
        ],
        "consistencyAnalysis": {
          "buildExecutorDistribution": {
            "@nx/js:tsc": 23,
            "@nx/next:build": 1,
            "nx:run-commands": 1,
            "@nx/esbuild:esbuild": 5,
            "@nx/rollup:rollup": 1
          },
          "lintExecutorDistribution": {
            "@nx/eslint:lint": 17
          },
          "testExecutorDistribution": {
            "@nx/jest:jest": 22,
            "nx:run-commands": 2
          },
          "configurationCompleteness": {
            "withBuild": 31,
            "withLint": 17,
            "withTest": 24
          }
        }
      },
      "recommendations": [
        {
          "type": "add-missing-build-targets",
          "priority": "high",
          "title": "Add Missing Build Targets (2 projects)",
          "description": "Several projects are missing build targets in their project.json files.",
          "actions": [
            "Add build targets with appropriate executors",
            "Configure output directories",
            "Set up proper caching and inputs",
            "Test build process for each project"
          ],
          "affectedProjects": [
            "agents-sdk",
            "build-tools"
          ],
          "fixScript": "nx-diagnostics/scripts/fixes/add-build-targets.sh"
        },
        {
          "type": "add-missing-test-configs",
          "priority": "high",
          "title": "Add Missing Test Configurations (9 projects)",
          "description": "Several projects are missing test configurations.",
          "actions": [
            "Add test targets to project.json files",
            "Choose appropriate test executor (Jest or Vitest)",
            "Configure test file patterns",
            "Set up test environment and dependencies"
          ],
          "affectedProjects": [
            "frontend-agents",
            "agents",
            "cms-api",
            "reviews-api",
            "crm-api",
            "social-api",
            "gcp-core",
            "agents-lib",
            "gcp"
          ],
          "fixScript": "nx-diagnostics/scripts/fixes/add-test-configs.sh"
        },
        {
          "type": "add-missing-lint-configs",
          "priority": "medium",
          "title": "Add Missing Lint Configurations (15 projects)",
          "description": "Several projects are missing ESLint configurations.",
          "actions": [
            "Add lint targets to project.json files",
            "Configure ESLint with appropriate rules",
            "Set up lint caching and inputs",
            "Integrate with Nx lint command"
          ],
          "affectedProjects": [
            "cms-api",
            "reviews-api",
            "crm-api",
            "social-api",
            "bq-agent",
            "looker-agent",
            "gemini-orchestrator",
            "crm-agent",
            "reviews-agent",
            "content-agent",
            "api-clients",
            "gcp-auth",
            "dbt-models",
            "schemas",
            "env"
          ],
          "fixScript": "nx-diagnostics/scripts/fixes/add-lint-configs.sh"
        },
        {
          "type": "standardize-executors",
          "priority": "low",
          "title": "Standardize Build Executors",
          "description": "Multiple build executors are being used across projects.",
          "actions": [
            "Choose a primary build executor for each project type",
            "Migrate projects to use consistent executors",
            "Update documentation and CI/CD configurations",
            "Ensure all executors are properly configured"
          ],
          "affectedProjects": [
            "looker-dashboards",
            "agents",
            "api",
            "gcp-core",
            "ui-components",
            "adk",
            "bq-agent",
            "looker-agent",
            "agents-lib",
            "gemini-orchestrator",
            "crm-agent",
            "reviews-agent",
            "content-agent",
            "api-clients",
            "gcp-auth",
            "monitoring",
            "common-types",
            "security",
            "dbt-models",
            "schemas",
            "env",
            "mcp",
            "gcp",
            "frontend-agents",
            "event-parser",
            "cms-api",
            "reviews-api",
            "crm-api",
            "social-api",
            "signals",
            "utils-secrets-manager"
          ],
          "fixScript": "nx-diagnostics/scripts/fixes/standardize-executors.sh"
        }
      ],
      "fixes": [
        {
          "type": "add-missing-build-targets",
          "title": "Add Missing Build Targets (2 projects)",
          "script": "nx-diagnostics/scripts/fixes/add-build-targets.sh",
          "priority": "high",
          "affectedProjects": [
            "agents-sdk",
            "build-tools"
          ]
        },
        {
          "type": "add-missing-test-configs",
          "title": "Add Missing Test Configurations (9 projects)",
          "script": "nx-diagnostics/scripts/fixes/add-test-configs.sh",
          "priority": "high",
          "affectedProjects": [
            "frontend-agents",
            "agents",
            "cms-api",
            "reviews-api",
            "crm-api",
            "social-api",
            "gcp-core",
            "agents-lib",
            "gcp"
          ]
        },
        {
          "type": "add-missing-lint-configs",
          "title": "Add Missing Lint Configurations (15 projects)",
          "script": "nx-diagnostics/scripts/fixes/add-lint-configs.sh",
          "priority": "medium",
          "affectedProjects": [
            "cms-api",
            "reviews-api",
            "crm-api",
            "social-api",
            "bq-agent",
            "looker-agent",
            "gemini-orchestrator",
            "crm-agent",
            "reviews-agent",
            "content-agent",
            "api-clients",
            "gcp-auth",
            "dbt-models",
            "schemas",
            "env"
          ]
        },
        {
          "type": "standardize-executors",
          "title": "Standardize Build Executors",
          "script": "nx-diagnostics/scripts/fixes/standardize-executors.sh",
          "priority": "low",
          "affectedProjects": [
            "looker-dashboards",
            "agents",
            "api",
            "gcp-core",
            "ui-components",
            "adk",
            "bq-agent",
            "looker-agent",
            "agents-lib",
            "gemini-orchestrator",
            "crm-agent",
            "reviews-agent",
            "content-agent",
            "api-clients",
            "gcp-auth",
            "monitoring",
            "common-types",
            "security",
            "dbt-models",
            "schemas",
            "env",
            "mcp",
            "gcp",
            "frontend-agents",
            "event-parser",
            "cms-api",
            "reviews-api",
            "crm-api",
            "social-api",
            "signals",
            "utils-secrets-manager"
          ]
        }
      ]
    }
  }
}