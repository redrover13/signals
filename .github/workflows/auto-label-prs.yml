name: Auto Label PRs

on:
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  auto-label:
    name: Auto-label PR
    runs-on: ubuntu-latest
    permissions:
      pull-requests: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup pnpm
        uses: pnpm/action-setup@v4.1.0
        with:
          version: 10.0.0
          run_install: false

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'pnpm'

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Get affected projects
        id: affected
        run: |
          AFFECTED_PROJECTS=$(pnpm nx print-affected --base=origin/main --head=HEAD --select=projects)
          echo "affected_projects=$AFFECTED_PROJECTS" >> $GITHUB_OUTPUT

      - name: Label based on affected projects
        uses: actions/github-script@60a0d83039c74a4aee543508d2ffb3087d91ff2b # v7.0.1
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const affectedProjects = process.env.AFFECTED_PROJECTS.split(',').map(p => p.trim());
            const labels = new Set();

            if (affectedProjects.includes('api')) {
              labels.add('api');
            }
            if (affectedProjects.some(p => p.startsWith('frontend-'))) {
              labels.add('frontend');
            }
            if (affectedProjects.some(p => p.startsWith('cloud-functions/'))) {
              labels.add('cloud-function');
            }
            if (affectedProjects.some(p => p.startsWith('libs/'))) {
              labels.add('library');
            }
            if (affectedProjects.some(p => p.startsWith('infra/'))) {
              labels.add('infrastructure');
            }

            if (labels.size > 0) {
              await github.rest.issues.addLabels({
                issue_number: context.issue.number,
                owner: context.repo.owner,
                repo: context.repo.repo,
                labels: Array.from(labels)
              });
            }
