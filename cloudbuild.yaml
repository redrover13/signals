# Cloud Build configuration for Dulce de Saigon Agent Ecosystem CI/CD
# This file defines the continuous integration and deployment pipeline.
#
# The pipeline includes the following stages:
# 1. Install Dependencies: Fetches all project dependencies using pnpm.
# 2. Run Unit Tests: Executes tests for projects affected by the latest changes.
# 3. Build Container: Builds the Docker image for the agent-runner service.
# 4. Push to Artifact Registry: Pushes the built image to Google Artifact Registry.
# 5. Deploy Cloud Function: Deploys the event-parser Cloud Function.
# 6. Deploy Cloud Run Service: Deploys the agent-runner service to Cloud Run.
#
# This pipeline is designed for a production environment and ensures that
# all code is tested and securely deployed. It adheres to the project's
# standards for security, compliance, and Vietnamese market requirements.

steps:
  # Step 1: Install project dependencies using pnpm
  # We use the official node image and install pnpm to ensure a consistent
  # and efficient installation process. The node version is pinned to 20
  # for compatibility. The pnpm version is managed by the corepack feature.
  - name: 'gcr.io/cloud-builders/npm'
    id: 'Install Dependencies'
    args: ['-pnpm', 'install']
    entrypoint: 'npx'

  # Step 2: Run unit tests for all affected projects
  # This step executes tests for any project that has been modified.
  # The build will fail if any of the tests do not pass, ensuring code quality.
  - name: 'gcr.io/cloud-builders/npm'
    id: 'Run Unit Tests'
    args: ['-pnpm', 'nx', 'affected', '--target=test', '--headless']
    entrypoint: 'npx'

  # Step 3: Build the Docker container for the agent-runner service
  # This step builds the Docker image for the agent-runner, which is responsible
  # for executing agent tasks. The image is tagged with the short commit SHA
  # for versioning and traceability.
  - name: 'gcr.io/cloud-builders/docker'
    id: 'Build Agent Container'
    args:
      - 'build'
      - '-t'
      - 'asia-southeast1-docker.pkg.dev/saigon-signals/agent-services/agent-runner:$SHORT_SHA'
      - '.'
      - '-f'
      - 'apps/agents/Dockerfile'

  # Step 4: Push the container image to Google Artifact Registry
  # The newly built Docker image is pushed to the specified Artifact Registry
  # repository. This makes the image available for deployment to Cloud Run.
  - name: 'gcr.io/cloud-builders/docker'
    id: 'Push Container Image'
    args: ['push', 'asia-southeast1-docker.pkg.dev/saigon-signals/agent-services/agent-runner:$SHORT_SHA']

  # Step 5: Deploy the event-parser Cloud Function
  # This step deploys the event-parser, a serverless function responsible for
  # parsing incoming events. It is deployed from the local source code in the
  # 'apps/event-parser' directory.
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    id: 'Deploy Cloud Function'
    args:
      - 'functions'
      - 'deploy'
      - 'event-parser'
      - '--project=saigon-signals'
      - '--region=asia-southeast1'
      - '--trigger-topic=dulce.agents'
      - '--runtime=nodejs20'
      - '--source=apps/event-parser'
      - '--entry-point=parseAgentEvent'
      - '--service-account=event-parser-sa@saigon-signals.iam.gserviceaccount.com'
    entrypoint: 'gcloud'

  # Step 6: Deploy the agent-runner service to Cloud Run
  # This step deploys the agent-runner service using the Docker image pushed
  # in the previous step. The service is configured to run in the 'asia-southeast1'
  # region and is set to allow unauthenticated access for simplicity.
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    id: 'Deploy Agent Service'
    args:
      - 'run'
      - 'deploy'
      - 'agent-runner'
      - '--project=saigon-signals'
      - '--region=asia-southeast1'
      - '--image=asia-southeast1-docker.pkg.dev/saigon-signals/agent-services/agent-runner:$SHORT_SHA'
      - '--platform=managed'
      - '--no-allow-unauthenticated'
      - '--service-account=agent-runner-sa@saigon-signals.iam.gserviceaccount.com'
      - '--set-env-vars=GCP_PROJECT_ID=saigon-signals,DULCE_AGENTS_TOPIC=dulce.agents,DULCE_AGENT_RUNS_TABLE=dulce.agent_runs'
    entrypoint: 'gcloud'

# Define the images to be pushed to the Artifact Registry. This is required
# by Cloud Build to keep track of the artifacts produced by the build.
images:
  - 'asia-southeast1-docker.pkg.dev/saigon-signals/agent-services/agent-runner:$SHORT_SHA'

# Configure the build to use a larger machine type to accommodate the
# installation and testing of a large monorepo. The default machine type
# may not have enough resources.
options:
  machineType: 'E2_HIGHCPU_8'