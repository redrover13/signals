{
  "graph": {
    "nodes": {
      "pubsub-workflows": {
        "name": "pubsub-workflows",
        "type": "lib",
        "data": {
          "root": "infra/workflows/pubsub-workflows",
          "targets": {
            "eslint:lint": {
              "cache": true,
              "options": {
                "cwd": "infra/workflows/pubsub-workflows",
                "command": "eslint ."
              },
              "inputs": ["default", "^default"],
              "outputs": ["{workspaceRoot}/dist/{projectRoot}"],
              "metadata": {
                "technologies": ["eslint"],
                "description": "Runs ESLint on project",
                "help": {
                  "command": "pnpm exec eslint --help",
                  "example": {
                    "options": {
                      "max-warnings": 0
                    }
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true
            },
            "jest:test": {
              "options": {
                "cwd": "infra/workflows/pubsub-workflows",
                "env": {
                  "TS_NODE_COMPILER_OPTIONS": "{\"moduleResolution\":\"node10\",\"module\":\"commonjs\",\"customConditions\":null}"
                },
                "command": "jest"
              },
              "metadata": {
                "technologies": ["jest"],
                "description": "Run Jest Tests",
                "help": {
                  "command": "pnpm exec jest --help",
                  "example": {
                    "options": {
                      "coverage": true
                    }
                  }
                }
              },
              "cache": true,
              "inputs": ["default", "^default"],
              "outputs": ["{workspaceRoot}/dist/{projectRoot}"],
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true
            },
            "build": {
              "executor": "@nx/js:tsc",
              "outputs": ["{options.outputPath}"],
              "options": {
                "outputPath": "dist/infra/workflows/pubsub-workflows",
                "main": "infra/workflows/pubsub-workflows/src/index.ts",
                "tsConfig": "infra/workflows/pubsub-workflows/tsconfig.lib.json",
                "assets": ["infra/workflows/pubsub-workflows/*.md"]
              },
              "configurations": {},
              "parallelism": true,
              "cache": true,
              "dependsOn": ["^build"],
              "inputs": ["default", "^default"]
            },
            "test": {
              "executor": "@nx/jest:jest",
              "outputs": ["{workspaceRoot}/coverage/{projectRoot}"],
              "options": {
                "jestConfig": "infra/workflows/pubsub-workflows/jest.config.ts"
              },
              "configurations": {},
              "parallelism": true,
              "cache": true,
              "inputs": ["default", "^default", "{workspaceRoot}/jest.preset.js"]
            }
          },
          "name": "pubsub-workflows",
          "tags": ["npm:private", "scope:infra", "type:workflow"],
          "metadata": {
            "targetGroups": {},
            "js": {
              "packageName": "pubsub-workflows",
              "packageMain": "./src/index.js",
              "isInPackageManagerWorkspaces": false
            }
          },
          "$schema": "../../../node_modules/nx/schemas/project-schema.json",
          "sourceRoot": "infra/workflows/pubsub-workflows/src",
          "projectType": "library",
          "implicitDependencies": []
        }
      },
      "reviews-api": {
        "name": "reviews-api",
        "type": "app",
        "data": {
          "root": "apps/cloud-functions/reviews-api",
          "targets": {
            "eslint:lint": {
              "cache": true,
              "options": {
                "cwd": "apps/cloud-functions/reviews-api",
                "env": {
                  "ESLINT_USE_FLAT_CONFIG": "false"
                },
                "command": "eslint ."
              },
              "inputs": ["default", "^default"],
              "outputs": ["{workspaceRoot}/dist/{projectRoot}"],
              "metadata": {
                "technologies": ["eslint"],
                "description": "Runs ESLint on project",
                "help": {
                  "command": "pnpm exec eslint --help",
                  "example": {
                    "options": {
                      "max-warnings": 0
                    }
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true
            },
            "build": {
              "executor": "@nx/esbuild:esbuild",
              "outputs": ["{options.outputPath}"],
              "defaultConfiguration": "production",
              "options": {
                "platform": "node",
                "outputPath": "dist/apps/cloud-functions/reviews-api",
                "format": ["cjs"],
                "bundle": false,
                "main": "apps/cloud-functions/reviews-api/src/main.ts",
                "tsConfig": "apps/cloud-functions/reviews-api/tsconfig.app.json",
                "assets": ["apps/cloud-functions/reviews-api/src/assets"],
                "generatePackageJson": true,
                "esbuildOptions": {
                  "sourcemap": true,
                  "outExtension": {
                    ".js": ".js"
                  }
                }
              },
              "configurations": {
                "development": {},
                "production": {
                  "esbuildOptions": {
                    "sourcemap": false,
                    "outExtension": {
                      ".js": ".js"
                    }
                  }
                }
              },
              "parallelism": true,
              "cache": true,
              "dependsOn": ["^build"],
              "inputs": ["default", "^default"]
            },
            "prune-lockfile": {
              "dependsOn": ["build"],
              "cache": true,
              "executor": "@nx/js:prune-lockfile",
              "outputs": [
                "{workspaceRoot}/dist/apps/cloud-functions/reviews-api/package.json",
                "{workspaceRoot}/dist/apps/cloud-functions/reviews-api/pnpm-lock.yaml"
              ],
              "options": {
                "buildTarget": "build"
              },
              "configurations": {},
              "parallelism": true
            },
            "copy-workspace-modules": {
              "dependsOn": ["build"],
              "cache": true,
              "outputs": [
                "{workspaceRoot}/dist/apps/cloud-functions/reviews-api/workspace_modules"
              ],
              "executor": "@nx/js:copy-workspace-modules",
              "options": {
                "buildTarget": "build"
              },
              "configurations": {},
              "parallelism": true
            },
            "prune": {
              "dependsOn": ["prune-lockfile", "copy-workspace-modules"],
              "executor": "nx:noop",
              "configurations": {},
              "options": {},
              "parallelism": true
            },
            "serve": {
              "continuous": true,
              "executor": "@nx/js:node",
              "defaultConfiguration": "development",
              "dependsOn": ["build"],
              "options": {
                "buildTarget": "reviews-api:build",
                "runBuildTargetDependencies": false
              },
              "configurations": {
                "development": {
                  "buildTarget": "reviews-api:build:development"
                },
                "production": {
                  "buildTarget": "reviews-api:build:production"
                }
              },
              "parallelism": true,
              "cache": false
            }
          },
          "name": "reviews-api",
          "$schema": "../../../node_modules/nx/schemas/project-schema.json",
          "sourceRoot": "apps/cloud-functions/reviews-api/src",
          "projectType": "application",
          "tags": ["scope:backend-app", "type:api"],
          "implicitDependencies": []
        }
      },
      "cloud-workflows": {
        "name": "cloud-workflows",
        "type": "lib",
        "data": {
          "root": "infra/workflows/cloud-workflows",
          "targets": {
            "eslint:lint": {
              "cache": true,
              "options": {
                "cwd": "infra/workflows/cloud-workflows",
                "command": "eslint ."
              },
              "inputs": ["default", "^default"],
              "outputs": ["{workspaceRoot}/dist/{projectRoot}"],
              "metadata": {
                "technologies": ["eslint"],
                "description": "Runs ESLint on project",
                "help": {
                  "command": "pnpm exec eslint --help",
                  "example": {
                    "options": {
                      "max-warnings": 0
                    }
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true
            },
            "jest:test": {
              "options": {
                "cwd": "infra/workflows/cloud-workflows",
                "env": {
                  "TS_NODE_COMPILER_OPTIONS": "{\"moduleResolution\":\"node10\",\"module\":\"commonjs\",\"customConditions\":null}"
                },
                "command": "jest"
              },
              "metadata": {
                "technologies": ["jest"],
                "description": "Run Jest Tests",
                "help": {
                  "command": "pnpm exec jest --help",
                  "example": {
                    "options": {
                      "coverage": true
                    }
                  }
                }
              },
              "cache": true,
              "inputs": ["default", "^default"],
              "outputs": ["{workspaceRoot}/dist/{projectRoot}"],
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true
            },
            "build": {
              "executor": "@nx/js:tsc",
              "outputs": ["{options.outputPath}"],
              "options": {
                "outputPath": "dist/infra/workflows/cloud-workflows",
                "main": "infra/workflows/cloud-workflows/src/index.ts",
                "tsConfig": "infra/workflows/cloud-workflows/tsconfig.lib.json",
                "assets": ["infra/workflows/cloud-workflows/*.md"]
              },
              "configurations": {},
              "parallelism": true,
              "cache": true,
              "dependsOn": ["^build"],
              "inputs": ["default", "^default"]
            },
            "test": {
              "executor": "@nx/jest:jest",
              "outputs": ["{workspaceRoot}/coverage/{projectRoot}"],
              "options": {
                "jestConfig": "infra/workflows/cloud-workflows/jest.config.ts"
              },
              "configurations": {},
              "parallelism": true,
              "cache": true,
              "inputs": ["default", "^default", "{workspaceRoot}/jest.preset.js"]
            }
          },
          "name": "cloud-workflows",
          "tags": ["npm:private", "scope:infra", "type:workflow"],
          "metadata": {
            "targetGroups": {},
            "js": {
              "packageName": "cloud-workflows",
              "packageMain": "./src/index.js",
              "isInPackageManagerWorkspaces": false
            }
          },
          "$schema": "../../../node_modules/nx/schemas/project-schema.json",
          "sourceRoot": "infra/workflows/cloud-workflows/src",
          "projectType": "library",
          "implicitDependencies": []
        }
      },
      "gemini-orchestrator": {
        "name": "gemini-orchestrator",
        "type": "lib",
        "data": {
          "root": "libs/agents/gemini-orchestrator",
          "targets": {
            "eslint:lint": {
              "cache": true,
              "options": {
                "cwd": "libs/agents/gemini-orchestrator",
                "command": "eslint ."
              },
              "inputs": ["default", "^default"],
              "outputs": ["{workspaceRoot}/dist/{projectRoot}"],
              "metadata": {
                "technologies": ["eslint"],
                "description": "Runs ESLint on project",
                "help": {
                  "command": "pnpm exec eslint --help",
                  "example": {
                    "options": {
                      "max-warnings": 0
                    }
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true
            },
            "jest:test": {
              "options": {
                "cwd": "libs/agents/gemini-orchestrator",
                "env": {
                  "TS_NODE_COMPILER_OPTIONS": "{\"moduleResolution\":\"node10\",\"module\":\"commonjs\",\"customConditions\":null}"
                },
                "command": "jest"
              },
              "metadata": {
                "technologies": ["jest"],
                "description": "Run Jest Tests",
                "help": {
                  "command": "pnpm exec jest --help",
                  "example": {
                    "options": {
                      "coverage": true
                    }
                  }
                }
              },
              "cache": true,
              "inputs": ["default", "^default"],
              "outputs": ["{workspaceRoot}/dist/{projectRoot}"],
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true
            },
            "build": {
              "executor": "@nx/js:tsc",
              "outputs": ["{options.outputPath}"],
              "options": {
                "outputPath": "dist/libs/agents/gemini-orchestrator",
                "main": "libs/agents/gemini-orchestrator/src/index.ts",
                "tsConfig": "libs/agents/gemini-orchestrator/tsconfig.lib.json",
                "assets": ["libs/agents/gemini-orchestrator/*.md"]
              },
              "configurations": {},
              "parallelism": true,
              "cache": true,
              "dependsOn": ["^build"],
              "inputs": ["default", "^default"]
            },
            "test": {
              "executor": "@nx/jest:jest",
              "outputs": ["{workspaceRoot}/coverage/{projectRoot}"],
              "options": {
                "jestConfig": "libs/agents/gemini-orchestrator/jest.config.ts"
              },
              "configurations": {},
              "parallelism": true,
              "cache": true,
              "inputs": ["default", "^default", "{workspaceRoot}/jest.preset.js"]
            }
          },
          "name": "gemini-orchestrator",
          "projectType": "library",
          "tags": ["npm:private", "scope:backend-lib", "type:agent"],
          "metadata": {
            "targetGroups": {},
            "js": {
              "packageName": "gemini-orchestrator",
              "packageMain": "./src/index.js",
              "isInPackageManagerWorkspaces": true
            }
          },
          "$schema": "../../../node_modules/nx/schemas/project-schema.json",
          "sourceRoot": "libs/agents/gemini-orchestrator/src",
          "implicitDependencies": ["gcp"]
        }
      },
      "social-api": {
        "name": "social-api",
        "type": "app",
        "data": {
          "root": "apps/cloud-functions/social-api",
          "targets": {
            "eslint:lint": {
              "cache": true,
              "options": {
                "cwd": "apps/cloud-functions/social-api",
                "env": {
                  "ESLINT_USE_FLAT_CONFIG": "false"
                },
                "command": "eslint ."
              },
              "inputs": ["default", "^default"],
              "outputs": ["{workspaceRoot}/dist/{projectRoot}"],
              "metadata": {
                "technologies": ["eslint"],
                "description": "Runs ESLint on project",
                "help": {
                  "command": "pnpm exec eslint --help",
                  "example": {
                    "options": {
                      "max-warnings": 0
                    }
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true
            },
            "build": {
              "executor": "@nx/esbuild:esbuild",
              "outputs": ["{options.outputPath}"],
              "defaultConfiguration": "production",
              "options": {
                "platform": "node",
                "outputPath": "dist/apps/cloud-functions/social-api",
                "format": ["cjs"],
                "bundle": false,
                "main": "apps/cloud-functions/social-api/src/main.ts",
                "tsConfig": "apps/cloud-functions/social-api/tsconfig.app.json",
                "assets": ["apps/cloud-functions/social-api/src/assets"],
                "generatePackageJson": true,
                "esbuildOptions": {
                  "sourcemap": true,
                  "outExtension": {
                    ".js": ".js"
                  }
                }
              },
              "configurations": {
                "development": {},
                "production": {
                  "esbuildOptions": {
                    "sourcemap": false,
                    "outExtension": {
                      ".js": ".js"
                    }
                  }
                }
              },
              "parallelism": true,
              "cache": true,
              "dependsOn": ["^build"],
              "inputs": ["default", "^default"]
            },
            "prune-lockfile": {
              "dependsOn": ["build"],
              "cache": true,
              "executor": "@nx/js:prune-lockfile",
              "outputs": [
                "{workspaceRoot}/dist/apps/cloud-functions/social-api/package.json",
                "{workspaceRoot}/dist/apps/cloud-functions/social-api/pnpm-lock.yaml"
              ],
              "options": {
                "buildTarget": "build"
              },
              "configurations": {},
              "parallelism": true
            },
            "copy-workspace-modules": {
              "dependsOn": ["build"],
              "cache": true,
              "outputs": ["{workspaceRoot}/dist/apps/cloud-functions/social-api/workspace_modules"],
              "executor": "@nx/js:copy-workspace-modules",
              "options": {
                "buildTarget": "build"
              },
              "configurations": {},
              "parallelism": true
            },
            "prune": {
              "dependsOn": ["prune-lockfile", "copy-workspace-modules"],
              "executor": "nx:noop",
              "configurations": {},
              "options": {},
              "parallelism": true
            },
            "serve": {
              "continuous": true,
              "executor": "@nx/js:node",
              "defaultConfiguration": "development",
              "dependsOn": ["build"],
              "options": {
                "buildTarget": "social-api:build",
                "runBuildTargetDependencies": false
              },
              "configurations": {
                "development": {
                  "buildTarget": "social-api:build:development"
                },
                "production": {
                  "buildTarget": "social-api:build:production"
                }
              },
              "parallelism": true,
              "cache": false
            }
          },
          "name": "social-api",
          "$schema": "../../../node_modules/nx/schemas/project-schema.json",
          "sourceRoot": "apps/cloud-functions/social-api/src",
          "projectType": "application",
          "tags": ["scope:backend-app", "type:api"],
          "implicitDependencies": []
        }
      },
      "cms-api": {
        "name": "cms-api",
        "type": "app",
        "data": {
          "root": "apps/cloud-functions/cms-api",
          "targets": {
            "eslint:lint": {
              "cache": true,
              "options": {
                "cwd": "apps/cloud-functions/cms-api",
                "env": {
                  "ESLINT_USE_FLAT_CONFIG": "false"
                },
                "command": "eslint ."
              },
              "inputs": ["default", "^default"],
              "outputs": ["{workspaceRoot}/dist/{projectRoot}"],
              "metadata": {
                "technologies": ["eslint"],
                "description": "Runs ESLint on project",
                "help": {
                  "command": "pnpm exec eslint --help",
                  "example": {
                    "options": {
                      "max-warnings": 0
                    }
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true
            },
            "build": {
              "executor": "@nx/esbuild:esbuild",
              "outputs": ["{options.outputPath}"],
              "defaultConfiguration": "production",
              "options": {
                "platform": "node",
                "outputPath": "dist/apps/cloud-functions/cms-api",
                "format": ["cjs"],
                "bundle": false,
                "main": "apps/cloud-functions/cms-api/src/main.ts",
                "tsConfig": "apps/cloud-functions/cms-api/tsconfig.app.json",
                "assets": ["apps/cloud-functions/cms-api/src/assets"],
                "generatePackageJson": true,
                "esbuildOptions": {
                  "sourcemap": true,
                  "outExtension": {
                    ".js": ".js"
                  }
                }
              },
              "configurations": {
                "development": {},
                "production": {
                  "esbuildOptions": {
                    "sourcemap": false,
                    "outExtension": {
                      ".js": ".js"
                    }
                  }
                }
              },
              "parallelism": true,
              "cache": true,
              "dependsOn": ["^build"],
              "inputs": ["default", "^default"]
            },
            "prune-lockfile": {
              "dependsOn": ["build"],
              "cache": true,
              "executor": "@nx/js:prune-lockfile",
              "outputs": [
                "{workspaceRoot}/dist/apps/cloud-functions/cms-api/package.json",
                "{workspaceRoot}/dist/apps/cloud-functions/cms-api/pnpm-lock.yaml"
              ],
              "options": {
                "buildTarget": "build"
              },
              "configurations": {},
              "parallelism": true
            },
            "copy-workspace-modules": {
              "dependsOn": ["build"],
              "cache": true,
              "outputs": ["{workspaceRoot}/dist/apps/cloud-functions/cms-api/workspace_modules"],
              "executor": "@nx/js:copy-workspace-modules",
              "options": {
                "buildTarget": "build"
              },
              "configurations": {},
              "parallelism": true
            },
            "prune": {
              "dependsOn": ["prune-lockfile", "copy-workspace-modules"],
              "executor": "nx:noop",
              "configurations": {},
              "options": {},
              "parallelism": true
            },
            "serve": {
              "continuous": true,
              "executor": "@nx/js:node",
              "defaultConfiguration": "development",
              "dependsOn": ["build"],
              "options": {
                "buildTarget": "cms-api:build",
                "runBuildTargetDependencies": false
              },
              "configurations": {
                "development": {
                  "buildTarget": "cms-api:build:development"
                },
                "production": {
                  "buildTarget": "cms-api:build:production"
                }
              },
              "parallelism": true,
              "cache": false
            }
          },
          "name": "cms-api",
          "$schema": "../../../node_modules/nx/schemas/project-schema.json",
          "sourceRoot": "apps/cloud-functions/cms-api/src",
          "projectType": "application",
          "tags": ["scope:backend-app", "type:api"],
          "implicitDependencies": []
        }
      },
      "crm-api": {
        "name": "crm-api",
        "type": "app",
        "data": {
          "root": "apps/cloud-functions/crm-api",
          "targets": {
            "eslint:lint": {
              "cache": true,
              "options": {
                "cwd": "apps/cloud-functions/crm-api",
                "env": {
                  "ESLINT_USE_FLAT_CONFIG": "false"
                },
                "command": "eslint ."
              },
              "inputs": ["default", "^default"],
              "outputs": ["{workspaceRoot}/dist/{projectRoot}"],
              "metadata": {
                "technologies": ["eslint"],
                "description": "Runs ESLint on project",
                "help": {
                  "command": "pnpm exec eslint --help",
                  "example": {
                    "options": {
                      "max-warnings": 0
                    }
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true
            },
            "build": {
              "executor": "@nx/esbuild:esbuild",
              "outputs": ["{options.outputPath}"],
              "defaultConfiguration": "production",
              "options": {
                "platform": "node",
                "outputPath": "dist/apps/cloud-functions/crm-api",
                "format": ["cjs"],
                "bundle": false,
                "main": "apps/cloud-functions/crm-api/src/main.ts",
                "tsConfig": "apps/cloud-functions/crm-api/tsconfig.app.json",
                "assets": ["apps/cloud-functions/crm-api/src/assets"],
                "generatePackageJson": true,
                "esbuildOptions": {
                  "sourcemap": true,
                  "outExtension": {
                    ".js": ".js"
                  }
                }
              },
              "configurations": {
                "development": {},
                "production": {
                  "esbuildOptions": {
                    "sourcemap": false,
                    "outExtension": {
                      ".js": ".js"
                    }
                  }
                }
              },
              "parallelism": true,
              "cache": true,
              "dependsOn": ["^build"],
              "inputs": ["default", "^default"]
            },
            "prune-lockfile": {
              "dependsOn": ["build"],
              "cache": true,
              "executor": "@nx/js:prune-lockfile",
              "outputs": [
                "{workspaceRoot}/dist/apps/cloud-functions/crm-api/package.json",
                "{workspaceRoot}/dist/apps/cloud-functions/crm-api/pnpm-lock.yaml"
              ],
              "options": {
                "buildTarget": "build"
              },
              "configurations": {},
              "parallelism": true
            },
            "copy-workspace-modules": {
              "dependsOn": ["build"],
              "cache": true,
              "outputs": ["{workspaceRoot}/dist/apps/cloud-functions/crm-api/workspace_modules"],
              "executor": "@nx/js:copy-workspace-modules",
              "options": {
                "buildTarget": "build"
              },
              "configurations": {},
              "parallelism": true
            },
            "prune": {
              "dependsOn": ["prune-lockfile", "copy-workspace-modules"],
              "executor": "nx:noop",
              "configurations": {},
              "options": {},
              "parallelism": true
            },
            "serve": {
              "continuous": true,
              "executor": "@nx/js:node",
              "defaultConfiguration": "development",
              "dependsOn": ["build"],
              "options": {
                "buildTarget": "crm-api:build",
                "runBuildTargetDependencies": false
              },
              "configurations": {
                "development": {
                  "buildTarget": "crm-api:build:development"
                },
                "production": {
                  "buildTarget": "crm-api:build:production"
                }
              },
              "parallelism": true,
              "cache": false
            }
          },
          "name": "crm-api",
          "$schema": "../../../node_modules/nx/schemas/project-schema.json",
          "sourceRoot": "apps/cloud-functions/crm-api/src",
          "projectType": "application",
          "tags": ["scope:backend-app", "type:api"],
          "implicitDependencies": []
        }
      },
      "dbt-models": {
        "name": "dbt-models",
        "type": "lib",
        "data": {
          "root": "libs/data-models/dbt-models",
          "targets": {
            "eslint:lint": {
              "cache": true,
              "options": {
                "cwd": "libs/data-models/dbt-models",
                "command": "eslint ."
              },
              "inputs": ["default", "^default"],
              "outputs": ["{workspaceRoot}/dist/{projectRoot}"],
              "metadata": {
                "technologies": ["eslint"],
                "description": "Runs ESLint on project",
                "help": {
                  "command": "pnpm exec eslint --help",
                  "example": {
                    "options": {
                      "max-warnings": 0
                    }
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true
            },
            "jest:test": {
              "options": {
                "cwd": "libs/data-models/dbt-models",
                "env": {
                  "TS_NODE_COMPILER_OPTIONS": "{\"moduleResolution\":\"node10\",\"module\":\"commonjs\",\"customConditions\":null}"
                },
                "command": "jest"
              },
              "metadata": {
                "technologies": ["jest"],
                "description": "Run Jest Tests",
                "help": {
                  "command": "pnpm exec jest --help",
                  "example": {
                    "options": {
                      "coverage": true
                    }
                  }
                }
              },
              "cache": true,
              "inputs": ["default", "^default"],
              "outputs": ["{workspaceRoot}/dist/{projectRoot}"],
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true
            },
            "build": {
              "executor": "@nx/js:tsc",
              "outputs": ["{options.outputPath}"],
              "options": {
                "outputPath": "dist/libs/data-models/dbt-models",
                "main": "libs/data-models/dbt-models/src/index.ts",
                "tsConfig": "libs/data-models/dbt-models/tsconfig.lib.json",
                "assets": ["libs/data-models/dbt-models/*.md"]
              },
              "configurations": {},
              "parallelism": true,
              "cache": true,
              "dependsOn": ["^build"],
              "inputs": ["default", "^default"]
            },
            "test": {
              "executor": "@nx/jest:jest",
              "outputs": ["{workspaceRoot}/coverage/{projectRoot}"],
              "options": {
                "jestConfig": "libs/data-models/dbt-models/jest.config.ts"
              },
              "configurations": {},
              "parallelism": true,
              "cache": true,
              "inputs": ["default", "^default", "{workspaceRoot}/jest.preset.js"]
            }
          },
          "name": "dbt-models",
          "projectType": "library",
          "tags": ["npm:private", "scope:data", "type:data"],
          "metadata": {
            "targetGroups": {},
            "js": {
              "packageName": "dbt-models",
              "packageMain": "./src/index.js",
              "isInPackageManagerWorkspaces": true
            }
          },
          "$schema": "../../../node_modules/nx/schemas/project-schema.json",
          "sourceRoot": "libs/data-models/dbt-models/src",
          "implicitDependencies": []
        }
      },
      "content-agent": {
        "name": "content-agent",
        "type": "lib",
        "data": {
          "root": "libs/agents/content-agent",
          "targets": {
            "eslint:lint": {
              "cache": true,
              "options": {
                "cwd": "libs/agents/content-agent",
                "command": "eslint ."
              },
              "inputs": ["default", "^default"],
              "outputs": ["{workspaceRoot}/dist/{projectRoot}"],
              "metadata": {
                "technologies": ["eslint"],
                "description": "Runs ESLint on project",
                "help": {
                  "command": "pnpm exec eslint --help",
                  "example": {
                    "options": {
                      "max-warnings": 0
                    }
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true
            },
            "jest:test": {
              "options": {
                "cwd": "libs/agents/content-agent",
                "env": {
                  "TS_NODE_COMPILER_OPTIONS": "{\"moduleResolution\":\"node10\",\"module\":\"commonjs\",\"customConditions\":null}"
                },
                "command": "jest"
              },
              "metadata": {
                "technologies": ["jest"],
                "description": "Run Jest Tests",
                "help": {
                  "command": "pnpm exec jest --help",
                  "example": {
                    "options": {
                      "coverage": true
                    }
                  }
                }
              },
              "cache": true,
              "inputs": ["default", "^default"],
              "outputs": ["{workspaceRoot}/dist/{projectRoot}"],
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true
            },
            "build": {
              "executor": "@nx/js:tsc",
              "outputs": ["{options.outputPath}"],
              "options": {
                "outputPath": "dist/libs/agents/content-agent",
                "main": "libs/agents/content-agent/src/index.ts",
                "tsConfig": "libs/agents/content-agent/tsconfig.lib.json",
                "assets": ["libs/agents/content-agent/*.md"]
              },
              "configurations": {},
              "parallelism": true,
              "cache": true,
              "dependsOn": ["^build"],
              "inputs": ["default", "^default"]
            },
            "test": {
              "executor": "@nx/jest:jest",
              "outputs": ["{workspaceRoot}/coverage/{projectRoot}"],
              "options": {
                "jestConfig": "libs/agents/content-agent/jest.config.ts"
              },
              "configurations": {},
              "parallelism": true,
              "cache": true,
              "inputs": ["default", "^default", "{workspaceRoot}/jest.preset.js"]
            }
          },
          "name": "content-agent",
          "projectType": "library",
          "tags": ["npm:private", "scope:backend-lib", "type:agent"],
          "metadata": {
            "targetGroups": {},
            "js": {
              "packageName": "content-agent",
              "packageMain": "./src/index.js",
              "isInPackageManagerWorkspaces": true
            }
          },
          "$schema": "../../../node_modules/nx/schemas/project-schema.json",
          "sourceRoot": "libs/agents/content-agent/src",
          "implicitDependencies": []
        }
      },
      "reviews-agent": {
        "name": "reviews-agent",
        "type": "lib",
        "data": {
          "root": "libs/agents/reviews-agent",
          "targets": {
            "eslint:lint": {
              "cache": true,
              "options": {
                "cwd": "libs/agents/reviews-agent",
                "command": "eslint ."
              },
              "inputs": ["default", "^default"],
              "outputs": ["{workspaceRoot}/dist/{projectRoot}"],
              "metadata": {
                "technologies": ["eslint"],
                "description": "Runs ESLint on project",
                "help": {
                  "command": "pnpm exec eslint --help",
                  "example": {
                    "options": {
                      "max-warnings": 0
                    }
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true
            },
            "jest:test": {
              "options": {
                "cwd": "libs/agents/reviews-agent",
                "env": {
                  "TS_NODE_COMPILER_OPTIONS": "{\"moduleResolution\":\"node10\",\"module\":\"commonjs\",\"customConditions\":null}"
                },
                "command": "jest"
              },
              "metadata": {
                "technologies": ["jest"],
                "description": "Run Jest Tests",
                "help": {
                  "command": "pnpm exec jest --help",
                  "example": {
                    "options": {
                      "coverage": true
                    }
                  }
                }
              },
              "cache": true,
              "inputs": ["default", "^default"],
              "outputs": ["{workspaceRoot}/dist/{projectRoot}"],
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true
            },
            "build": {
              "executor": "@nx/js:tsc",
              "outputs": ["{options.outputPath}"],
              "options": {
                "outputPath": "dist/libs/agents/reviews-agent",
                "main": "libs/agents/reviews-agent/src/index.ts",
                "tsConfig": "libs/agents/reviews-agent/tsconfig.lib.json",
                "assets": ["libs/agents/reviews-agent/*.md"]
              },
              "configurations": {},
              "parallelism": true,
              "cache": true,
              "dependsOn": ["^build"],
              "inputs": ["default", "^default"]
            },
            "test": {
              "executor": "@nx/jest:jest",
              "outputs": ["{workspaceRoot}/coverage/{projectRoot}"],
              "options": {
                "jestConfig": "libs/agents/reviews-agent/jest.config.ts"
              },
              "configurations": {},
              "parallelism": true,
              "cache": true,
              "inputs": ["default", "^default", "{workspaceRoot}/jest.preset.js"]
            }
          },
          "name": "reviews-agent",
          "projectType": "library",
          "tags": ["npm:private", "scope:backend-lib", "type:agent"],
          "metadata": {
            "targetGroups": {},
            "js": {
              "packageName": "reviews-agent",
              "packageMain": "./src/index.js",
              "isInPackageManagerWorkspaces": true
            }
          },
          "$schema": "../../../node_modules/nx/schemas/project-schema.json",
          "sourceRoot": "libs/agents/reviews-agent/src",
          "implicitDependencies": []
        }
      },
      "looker-agent": {
        "name": "looker-agent",
        "type": "lib",
        "data": {
          "root": "libs/agents/looker-agent",
          "targets": {
            "eslint:lint": {
              "cache": true,
              "options": {
                "cwd": "libs/agents/looker-agent",
                "command": "eslint ."
              },
              "inputs": ["default", "^default"],
              "outputs": ["{workspaceRoot}/dist/{projectRoot}"],
              "metadata": {
                "technologies": ["eslint"],
                "description": "Runs ESLint on project",
                "help": {
                  "command": "pnpm exec eslint --help",
                  "example": {
                    "options": {
                      "max-warnings": 0
                    }
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true
            },
            "jest:test": {
              "options": {
                "cwd": "libs/agents/looker-agent",
                "env": {
                  "TS_NODE_COMPILER_OPTIONS": "{\"moduleResolution\":\"node10\",\"module\":\"commonjs\",\"customConditions\":null}"
                },
                "command": "jest"
              },
              "metadata": {
                "technologies": ["jest"],
                "description": "Run Jest Tests",
                "help": {
                  "command": "pnpm exec jest --help",
                  "example": {
                    "options": {
                      "coverage": true
                    }
                  }
                }
              },
              "cache": true,
              "inputs": ["default", "^default"],
              "outputs": ["{workspaceRoot}/dist/{projectRoot}"],
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true
            },
            "build": {
              "executor": "@nx/js:tsc",
              "outputs": ["{options.outputPath}"],
              "options": {
                "outputPath": "dist/libs/agents/looker-agent",
                "main": "libs/agents/looker-agent/src/index.ts",
                "tsConfig": "libs/agents/looker-agent/tsconfig.lib.json",
                "assets": ["libs/agents/looker-agent/*.md"]
              },
              "configurations": {},
              "parallelism": true,
              "cache": true,
              "dependsOn": ["^build"],
              "inputs": ["default", "^default"]
            },
            "test": {
              "executor": "@nx/jest:jest",
              "outputs": ["{workspaceRoot}/coverage/{projectRoot}"],
              "options": {
                "jestConfig": "libs/agents/looker-agent/jest.config.ts"
              },
              "configurations": {},
              "parallelism": true,
              "cache": true,
              "inputs": ["default", "^default", "{workspaceRoot}/jest.preset.js"]
            }
          },
          "name": "looker-agent",
          "projectType": "library",
          "tags": ["npm:private", "scope:backend-lib", "type:agent"],
          "metadata": {
            "targetGroups": {},
            "js": {
              "packageName": "looker-agent",
              "packageMain": "./src/index.js",
              "isInPackageManagerWorkspaces": true
            }
          },
          "$schema": "../../../node_modules/nx/schemas/project-schema.json",
          "sourceRoot": "libs/agents/looker-agent/src",
          "implicitDependencies": []
        }
      },
      "schemas": {
        "name": "schemas",
        "type": "lib",
        "data": {
          "root": "libs/data-models/schemas",
          "targets": {
            "eslint:lint": {
              "cache": true,
              "options": {
                "cwd": "libs/data-models/schemas",
                "command": "eslint ."
              },
              "inputs": ["default", "^default"],
              "outputs": ["{workspaceRoot}/dist/{projectRoot}"],
              "metadata": {
                "technologies": ["eslint"],
                "description": "Runs ESLint on project",
                "help": {
                  "command": "pnpm exec eslint --help",
                  "example": {
                    "options": {
                      "max-warnings": 0
                    }
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true
            },
            "jest:test": {
              "options": {
                "cwd": "libs/data-models/schemas",
                "env": {
                  "TS_NODE_COMPILER_OPTIONS": "{\"moduleResolution\":\"node10\",\"module\":\"commonjs\",\"customConditions\":null}"
                },
                "command": "jest"
              },
              "metadata": {
                "technologies": ["jest"],
                "description": "Run Jest Tests",
                "help": {
                  "command": "pnpm exec jest --help",
                  "example": {
                    "options": {
                      "coverage": true
                    }
                  }
                }
              },
              "cache": true,
              "inputs": ["default", "^default"],
              "outputs": ["{workspaceRoot}/dist/{projectRoot}"],
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true
            },
            "build": {
              "executor": "@nx/js:tsc",
              "outputs": ["{options.outputPath}"],
              "options": {
                "outputPath": "dist/libs/data-models/schemas",
                "main": "libs/data-models/schemas/src/index.ts",
                "tsConfig": "libs/data-models/schemas/tsconfig.lib.json",
                "assets": ["libs/data-models/schemas/*.md"]
              },
              "configurations": {},
              "parallelism": true,
              "cache": true,
              "dependsOn": ["^build"],
              "inputs": ["default", "^default"]
            },
            "test": {
              "executor": "@nx/jest:jest",
              "outputs": ["{workspaceRoot}/coverage/{projectRoot}"],
              "options": {
                "jestConfig": "libs/data-models/schemas/jest.config.ts"
              },
              "configurations": {},
              "parallelism": true,
              "cache": true,
              "inputs": ["default", "^default", "{workspaceRoot}/jest.preset.js"]
            }
          },
          "name": "schemas",
          "projectType": "library",
          "tags": ["npm:private", "scope:data", "type:data"],
          "metadata": {
            "targetGroups": {},
            "js": {
              "packageName": "schemas",
              "packageMain": "./src/index.js",
              "isInPackageManagerWorkspaces": true
            }
          },
          "$schema": "../../../node_modules/nx/schemas/project-schema.json",
          "sourceRoot": "libs/data-models/schemas/src",
          "implicitDependencies": []
        }
      },
      "api-clients": {
        "name": "api-clients",
        "type": "lib",
        "data": {
          "root": "libs/utils/api-clients",
          "targets": {
            "eslint:lint": {
              "cache": true,
              "options": {
                "cwd": "libs/utils/api-clients",
                "command": "eslint ."
              },
              "inputs": ["default", "^default"],
              "outputs": ["{workspaceRoot}/dist/{projectRoot}"],
              "metadata": {
                "technologies": ["eslint"],
                "description": "Runs ESLint on project",
                "help": {
                  "command": "pnpm exec eslint --help",
                  "example": {
                    "options": {
                      "max-warnings": 0
                    }
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true
            },
            "jest:test": {
              "options": {
                "cwd": "libs/utils/api-clients",
                "env": {
                  "TS_NODE_COMPILER_OPTIONS": "{\"moduleResolution\":\"node10\",\"module\":\"commonjs\",\"customConditions\":null}"
                },
                "command": "jest"
              },
              "metadata": {
                "technologies": ["jest"],
                "description": "Run Jest Tests",
                "help": {
                  "command": "pnpm exec jest --help",
                  "example": {
                    "options": {
                      "coverage": true
                    }
                  }
                }
              },
              "cache": true,
              "inputs": ["default", "^default"],
              "outputs": ["{workspaceRoot}/dist/{projectRoot}"],
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true
            },
            "build": {
              "executor": "@nx/js:tsc",
              "outputs": ["{options.outputPath}"],
              "options": {
                "outputPath": "dist/libs/utils/api-clients",
                "main": "libs/utils/api-clients/src/index.ts",
                "tsConfig": "libs/utils/api-clients/tsconfig.lib.json",
                "assets": ["libs/utils/api-clients/*.md"]
              },
              "configurations": {},
              "parallelism": true,
              "cache": true,
              "dependsOn": ["^build"],
              "inputs": ["default", "^default"]
            },
            "test": {
              "executor": "@nx/jest:jest",
              "outputs": ["{workspaceRoot}/coverage/{projectRoot}"],
              "options": {
                "jestConfig": "libs/utils/api-clients/jest.config.ts"
              },
              "configurations": {},
              "parallelism": true,
              "cache": true,
              "inputs": ["default", "^default", "{workspaceRoot}/jest.preset.js"]
            }
          },
          "name": "api-clients",
          "projectType": "library",
          "tags": ["npm:private", "scope:backend-lib", "type:util"],
          "metadata": {
            "targetGroups": {},
            "js": {
              "packageName": "api-clients",
              "packageMain": "./src/index.js",
              "isInPackageManagerWorkspaces": true
            }
          },
          "$schema": "../../../node_modules/nx/schemas/project-schema.json",
          "sourceRoot": "libs/utils/api-clients/src",
          "implicitDependencies": []
        }
      },
      "looker-dashboards": {
        "name": "looker-dashboards",
        "type": "lib",
        "data": {
          "root": "apps/looker-dashboards",
          "targets": {
            "eslint:lint": {
              "cache": true,
              "options": {
                "cwd": "apps/looker-dashboards",
                "command": "eslint ."
              },
              "inputs": ["default", "^default"],
              "outputs": ["{workspaceRoot}/dist/{projectRoot}"],
              "metadata": {
                "technologies": ["eslint"],
                "description": "Runs ESLint on project",
                "help": {
                  "command": "pnpm exec eslint --help",
                  "example": {
                    "options": {
                      "max-warnings": 0
                    }
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true
            },
            "jest:test": {
              "options": {
                "cwd": "apps/looker-dashboards",
                "env": {
                  "TS_NODE_COMPILER_OPTIONS": "{\"moduleResolution\":\"node10\",\"module\":\"commonjs\",\"customConditions\":null}"
                },
                "command": "jest"
              },
              "metadata": {
                "technologies": ["jest"],
                "description": "Run Jest Tests",
                "help": {
                  "command": "pnpm exec jest --help",
                  "example": {
                    "options": {
                      "coverage": true
                    }
                  }
                }
              },
              "cache": true,
              "inputs": ["default", "^default"],
              "outputs": ["{workspaceRoot}/dist/{projectRoot}"],
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true
            },
            "build": {
              "executor": "@nx/js:tsc",
              "outputs": ["{options.outputPath}"],
              "options": {
                "outputPath": "dist/apps/looker-dashboards",
                "main": "apps/looker-dashboards/src/index.ts",
                "tsConfig": "apps/looker-dashboards/tsconfig.lib.json",
                "assets": ["apps/looker-dashboards/*.md"]
              },
              "configurations": {},
              "parallelism": true,
              "cache": true,
              "dependsOn": ["^build"],
              "inputs": ["default", "^default"]
            },
            "test": {
              "executor": "@nx/jest:jest",
              "outputs": ["{workspaceRoot}/coverage/{projectRoot}"],
              "options": {
                "jestConfig": "apps/looker-dashboards/jest.config.ts"
              },
              "configurations": {},
              "parallelism": true,
              "cache": true,
              "inputs": ["default", "^default", "{workspaceRoot}/jest.preset.js"]
            },
            "lint": {
              "executor": "@nx/eslint:lint",
              "options": {
                "lintFilePatterns": ["apps/looker-dashboards/**/*.{ts,tsx,js,jsx}"]
              },
              "configurations": {},
              "parallelism": true,
              "cache": true,
              "inputs": [
                "default",
                "{workspaceRoot}/.eslintrc.json",
                "{workspaceRoot}/tools/eslint-rules/**/*"
              ],
              "outputs": ["{options.outputFile}"]
            }
          },
          "name": "looker-dashboards",
          "projectType": "library",
          "tags": ["npm:private", "scope:frontend", "type:ui"],
          "metadata": {
            "targetGroups": {},
            "js": {
              "packageName": "looker-dashboards",
              "packageMain": "./src/index.js",
              "isInPackageManagerWorkspaces": true
            }
          },
          "$schema": "../../node_modules/nx/schemas/project-schema.json",
          "sourceRoot": "apps/looker-dashboards/src",
          "implicitDependencies": []
        }
      },
      "crm-agent": {
        "name": "crm-agent",
        "type": "lib",
        "data": {
          "root": "libs/agents/crm-agent",
          "targets": {
            "eslint:lint": {
              "cache": true,
              "options": {
                "cwd": "libs/agents/crm-agent",
                "command": "eslint ."
              },
              "inputs": ["default", "^default"],
              "outputs": ["{workspaceRoot}/dist/{projectRoot}"],
              "metadata": {
                "technologies": ["eslint"],
                "description": "Runs ESLint on project",
                "help": {
                  "command": "pnpm exec eslint --help",
                  "example": {
                    "options": {
                      "max-warnings": 0
                    }
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true
            },
            "jest:test": {
              "options": {
                "cwd": "libs/agents/crm-agent",
                "env": {
                  "TS_NODE_COMPILER_OPTIONS": "{\"moduleResolution\":\"node10\",\"module\":\"commonjs\",\"customConditions\":null}"
                },
                "command": "jest"
              },
              "metadata": {
                "technologies": ["jest"],
                "description": "Run Jest Tests",
                "help": {
                  "command": "pnpm exec jest --help",
                  "example": {
                    "options": {
                      "coverage": true
                    }
                  }
                }
              },
              "cache": true,
              "inputs": ["default", "^default"],
              "outputs": ["{workspaceRoot}/dist/{projectRoot}"],
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true
            },
            "build": {
              "executor": "@nx/js:tsc",
              "outputs": ["{options.outputPath}"],
              "options": {
                "outputPath": "dist/libs/agents/crm-agent",
                "main": "libs/agents/crm-agent/src/index.ts",
                "tsConfig": "libs/agents/crm-agent/tsconfig.lib.json",
                "assets": ["libs/agents/crm-agent/*.md"]
              },
              "configurations": {},
              "parallelism": true,
              "cache": true,
              "dependsOn": ["^build"],
              "inputs": ["default", "^default"]
            },
            "test": {
              "executor": "@nx/jest:jest",
              "outputs": ["{workspaceRoot}/coverage/{projectRoot}"],
              "options": {
                "jestConfig": "libs/agents/crm-agent/jest.config.ts"
              },
              "configurations": {},
              "parallelism": true,
              "cache": true,
              "inputs": ["default", "^default", "{workspaceRoot}/jest.preset.js"]
            }
          },
          "name": "crm-agent",
          "projectType": "library",
          "tags": ["npm:private", "scope:backend-lib", "type:agent"],
          "metadata": {
            "targetGroups": {},
            "js": {
              "packageName": "crm-agent",
              "packageMain": "./src/index.js",
              "isInPackageManagerWorkspaces": true
            }
          },
          "$schema": "../../../node_modules/nx/schemas/project-schema.json",
          "sourceRoot": "libs/agents/crm-agent/src",
          "implicitDependencies": []
        }
      },
      "monitoring": {
        "name": "monitoring",
        "type": "lib",
        "data": {
          "root": "libs/utils/monitoring",
          "targets": {
            "eslint:lint": {
              "cache": true,
              "options": {
                "cwd": "libs/utils/monitoring",
                "command": "eslint ."
              },
              "inputs": ["default", "^default"],
              "outputs": ["{workspaceRoot}/dist/{projectRoot}"],
              "metadata": {
                "technologies": ["eslint"],
                "description": "Runs ESLint on project",
                "help": {
                  "command": "pnpm exec eslint --help",
                  "example": {
                    "options": {
                      "max-warnings": 0
                    }
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true
            },
            "jest:test": {
              "options": {
                "cwd": "libs/utils/monitoring",
                "env": {
                  "TS_NODE_COMPILER_OPTIONS": "{\"moduleResolution\":\"node10\",\"module\":\"commonjs\",\"customConditions\":null}"
                },
                "command": "jest"
              },
              "metadata": {
                "technologies": ["jest"],
                "description": "Run Jest Tests",
                "help": {
                  "command": "pnpm exec jest --help",
                  "example": {
                    "options": {
                      "coverage": true
                    }
                  }
                }
              },
              "cache": true,
              "inputs": ["default", "^default"],
              "outputs": ["{workspaceRoot}/dist/{projectRoot}"],
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true
            },
            "build": {
              "executor": "@nx/js:tsc",
              "outputs": ["{options.outputPath}"],
              "options": {
                "outputPath": "dist/libs/utils/monitoring",
                "main": "libs/utils/monitoring/src/index.ts",
                "tsConfig": "libs/utils/monitoring/tsconfig.lib.json",
                "assets": ["libs/utils/monitoring/*.md"]
              },
              "configurations": {},
              "parallelism": true,
              "cache": true,
              "dependsOn": ["^build"],
              "inputs": ["default", "^default"]
            },
            "test": {
              "executor": "@nx/jest:jest",
              "outputs": ["{workspaceRoot}/coverage/{projectRoot}"],
              "options": {
                "jestConfig": "libs/utils/monitoring/jest.config.ts"
              },
              "configurations": {},
              "parallelism": true,
              "cache": true,
              "inputs": ["default", "^default", "{workspaceRoot}/jest.preset.js"]
            }
          },
          "name": "monitoring",
          "projectType": "library",
          "tags": ["npm:private", "scope:backend-lib", "type:util"],
          "metadata": {
            "targetGroups": {},
            "js": {
              "packageName": "monitoring",
              "packageMain": "./src/index.js",
              "isInPackageManagerWorkspaces": true
            }
          },
          "$schema": "../../../node_modules/nx/schemas/project-schema.json",
          "sourceRoot": "libs/utils/monitoring/src",
          "implicitDependencies": []
        }
      },
      "bq-agent": {
        "name": "bq-agent",
        "type": "lib",
        "data": {
          "root": "libs/agents/bq-agent",
          "targets": {
            "eslint:lint": {
              "cache": true,
              "options": {
                "cwd": "libs/agents/bq-agent",
                "command": "eslint ."
              },
              "inputs": ["default", "^default"],
              "outputs": ["{workspaceRoot}/dist/{projectRoot}"],
              "metadata": {
                "technologies": ["eslint"],
                "description": "Runs ESLint on project",
                "help": {
                  "command": "pnpm exec eslint --help",
                  "example": {
                    "options": {
                      "max-warnings": 0
                    }
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true
            },
            "jest:test": {
              "options": {
                "cwd": "libs/agents/bq-agent",
                "env": {
                  "TS_NODE_COMPILER_OPTIONS": "{\"moduleResolution\":\"node10\",\"module\":\"commonjs\",\"customConditions\":null}"
                },
                "command": "jest"
              },
              "metadata": {
                "technologies": ["jest"],
                "description": "Run Jest Tests",
                "help": {
                  "command": "pnpm exec jest --help",
                  "example": {
                    "options": {
                      "coverage": true
                    }
                  }
                }
              },
              "cache": true,
              "inputs": ["default", "^default"],
              "outputs": ["{workspaceRoot}/dist/{projectRoot}"],
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true
            },
            "build": {
              "executor": "@nx/js:tsc",
              "outputs": ["{options.outputPath}"],
              "options": {
                "outputPath": "dist/libs/agents/bq-agent",
                "main": "libs/agents/bq-agent/src/index.ts",
                "tsConfig": "libs/agents/bq-agent/tsconfig.lib.json",
                "assets": ["libs/agents/bq-agent/*.md"]
              },
              "configurations": {},
              "parallelism": true,
              "cache": true,
              "dependsOn": ["^build"],
              "inputs": ["default", "^default"]
            },
            "test": {
              "executor": "@nx/jest:jest",
              "outputs": ["{workspaceRoot}/coverage/{projectRoot}"],
              "options": {
                "jestConfig": "libs/agents/bq-agent/jest.config.ts"
              },
              "configurations": {},
              "parallelism": true,
              "cache": true,
              "inputs": ["default", "^default", "{workspaceRoot}/jest.preset.js"]
            }
          },
          "name": "bq-agent",
          "projectType": "library",
          "tags": ["npm:private", "scope:backend-lib", "type:agent"],
          "metadata": {
            "targetGroups": {},
            "js": {
              "packageName": "bq-agent",
              "packageMain": "./src/index.js",
              "isInPackageManagerWorkspaces": true
            }
          },
          "$schema": "../../../node_modules/nx/schemas/project-schema.json",
          "sourceRoot": "libs/agents/bq-agent/src",
          "implicitDependencies": []
        }
      },
      "frontend-agents": {
        "name": "frontend-agents",
        "type": "app",
        "data": {
          "root": "apps/frontend-agents",
          "targets": {
            "next:build": {
              "options": {
                "cwd": "apps/frontend-agents",
                "tty": false,
                "command": "next build"
              },
              "dependsOn": ["^build"],
              "cache": true,
              "inputs": ["default", "^default"],
              "outputs": ["{workspaceRoot}/dist/{projectRoot}"],
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true
            },
            "next:dev": {
              "continuous": true,
              "options": {
                "cwd": "apps/frontend-agents",
                "command": "next dev"
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true,
              "cache": true,
              "inputs": ["default", "^default"],
              "outputs": ["{workspaceRoot}/dist/{projectRoot}"]
            },
            "next:start": {
              "continuous": true,
              "options": {
                "cwd": "apps/frontend-agents",
                "command": "next start"
              },
              "dependsOn": ["next:build"],
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true,
              "cache": true,
              "inputs": ["default", "^default"],
              "outputs": ["{workspaceRoot}/dist/{projectRoot}"]
            },
            "serve-static": {
              "continuous": true,
              "options": {
                "cwd": "apps/frontend-agents",
                "command": "next start"
              },
              "dependsOn": ["next:build"],
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true,
              "cache": true,
              "inputs": ["default", "^default"],
              "outputs": ["{workspaceRoot}/dist/{projectRoot}"]
            },
            "build-deps": {
              "dependsOn": ["^build"],
              "configurations": {},
              "options": {},
              "parallelism": true,
              "executor": "nx:noop"
            },
            "watch-deps": {
              "continuous": true,
              "dependsOn": ["build-deps"],
              "executor": "nx:run-commands",
              "options": {
                "command": "pnpm exec nx watch --projects frontend-agents --includeDependentProjects -- pnpm exec nx build-deps frontend-agents"
              },
              "configurations": {},
              "parallelism": true,
              "cache": true,
              "inputs": ["default", "^default"],
              "outputs": ["{workspaceRoot}/dist/{projectRoot}"]
            },
            "eslint:lint": {
              "cache": true,
              "options": {
                "cwd": "apps/frontend-agents",
                "env": {
                  "ESLINT_USE_FLAT_CONFIG": "false"
                },
                "command": "eslint ."
              },
              "inputs": ["default", "^default"],
              "outputs": ["{workspaceRoot}/dist/{projectRoot}"],
              "metadata": {
                "technologies": ["eslint"],
                "description": "Runs ESLint on project",
                "help": {
                  "command": "pnpm exec eslint --help",
                  "example": {
                    "options": {
                      "max-warnings": 0
                    }
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true
            },
            "dev": {
              "executor": "nx:run-script",
              "options": {
                "script": "dev"
              },
              "metadata": {
                "scriptContent": "next dev",
                "runCommand": "pnpm run dev"
              },
              "configurations": {},
              "parallelism": true,
              "cache": false
            },
            "start": {
              "executor": "nx:run-script",
              "options": {
                "script": "start"
              },
              "metadata": {
                "scriptContent": "next start",
                "runCommand": "pnpm run start"
              },
              "configurations": {},
              "parallelism": true
            },
            "type-check": {
              "executor": "nx:run-script",
              "options": {
                "script": "type-check"
              },
              "metadata": {
                "scriptContent": "tsc --noEmit",
                "runCommand": "pnpm run type-check"
              },
              "configurations": {},
              "parallelism": true
            },
            "build": {
              "executor": "@nx/next:build",
              "outputs": ["{projectRoot}/dist"],
              "defaultConfiguration": "production",
              "options": {},
              "configurations": {
                "development": {
                  "outputPath": "apps/frontend-agents"
                },
                "production": {
                  "outputPath": "dist/apps/frontend-agents"
                }
              },
              "parallelism": true,
              "cache": true,
              "dependsOn": ["^build"],
              "inputs": ["default", "^default"]
            },
            "serve": {
              "executor": "@nx/next:server",
              "defaultConfiguration": "development",
              "options": {},
              "configurations": {
                "development": {
                  "buildTarget": "frontend-agents:build:development",
                  "dev": true
                },
                "production": {
                  "buildTarget": "frontend-agents:build:production",
                  "dev": false
                }
              },
              "parallelism": true,
              "continuous": true,
              "cache": false
            },
            "export": {
              "executor": "@nx/next:export",
              "options": {
                "buildTarget": "frontend-agents:build:production"
              },
              "configurations": {},
              "parallelism": true
            },
            "lint": {
              "executor": "@nx/eslint:lint",
              "options": {
                "lintFilePatterns": ["apps/frontend-agents/**/*.{ts,tsx,js,jsx}"]
              },
              "configurations": {},
              "parallelism": true,
              "cache": true,
              "inputs": [
                "default",
                "{workspaceRoot}/.eslintrc.json",
                "{workspaceRoot}/tools/eslint-rules/**/*"
              ],
              "outputs": ["{options.outputFile}"]
            }
          },
          "name": "frontend-agents",
          "projectType": "application",
          "tags": ["npm:private", "scope:frontend", "type:ui"],
          "metadata": {
            "targetGroups": {
              "NPM Scripts": ["dev", "start", "type-check"]
            },
            "js": {
              "packageName": "frontend-agents",
              "isInPackageManagerWorkspaces": true
            }
          },
          "$schema": "../../node_modules/nx/schemas/project-schema.json",
          "sourceRoot": "apps/frontend-agents/src",
          "implicitDependencies": []
        }
      },
      "gcp-auth": {
        "name": "gcp-auth",
        "type": "lib",
        "data": {
          "root": "libs/utils/gcp-auth",
          "targets": {
            "eslint:lint": {
              "cache": true,
              "options": {
                "cwd": "libs/utils/gcp-auth",
                "command": "eslint ."
              },
              "inputs": ["default", "^default"],
              "outputs": ["{workspaceRoot}/dist/{projectRoot}"],
              "metadata": {
                "technologies": ["eslint"],
                "description": "Runs ESLint on project",
                "help": {
                  "command": "pnpm exec eslint --help",
                  "example": {
                    "options": {
                      "max-warnings": 0
                    }
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true
            },
            "jest:test": {
              "options": {
                "cwd": "libs/utils/gcp-auth",
                "env": {
                  "TS_NODE_COMPILER_OPTIONS": "{\"moduleResolution\":\"node10\",\"module\":\"commonjs\",\"customConditions\":null}"
                },
                "command": "jest"
              },
              "metadata": {
                "technologies": ["jest"],
                "description": "Run Jest Tests",
                "help": {
                  "command": "pnpm exec jest --help",
                  "example": {
                    "options": {
                      "coverage": true
                    }
                  }
                }
              },
              "cache": true,
              "inputs": ["default", "^default"],
              "outputs": ["{workspaceRoot}/dist/{projectRoot}"],
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true
            },
            "build": {
              "executor": "@nx/js:tsc",
              "outputs": ["{options.outputPath}"],
              "options": {
                "outputPath": "dist/libs/utils/gcp-auth",
                "main": "libs/utils/gcp-auth/src/index.ts",
                "tsConfig": "libs/utils/gcp-auth/tsconfig.lib.json",
                "assets": ["libs/utils/gcp-auth/*.md"]
              },
              "configurations": {},
              "parallelism": true,
              "cache": true,
              "dependsOn": ["^build"],
              "inputs": ["default", "^default"]
            },
            "test": {
              "executor": "@nx/jest:jest",
              "outputs": ["{workspaceRoot}/coverage/{projectRoot}"],
              "options": {
                "jestConfig": "libs/utils/gcp-auth/jest.config.ts"
              },
              "configurations": {},
              "parallelism": true,
              "cache": true,
              "inputs": ["default", "^default", "{workspaceRoot}/jest.preset.js"]
            }
          },
          "name": "gcp-auth",
          "projectType": "library",
          "tags": ["npm:private", "scope:backend-lib", "type:util"],
          "metadata": {
            "targetGroups": {},
            "js": {
              "packageName": "gcp-auth",
              "packageMain": "./src/index.js",
              "isInPackageManagerWorkspaces": true
            }
          },
          "$schema": "../../../node_modules/nx/schemas/project-schema.json",
          "sourceRoot": "libs/utils/gcp-auth/src",
          "implicitDependencies": []
        }
      },
      "signals": {
        "name": "signals",
        "type": "lib",
        "data": {
          "root": "libs/utils/signals",
          "targets": {
            "eslint:lint": {
              "cache": true,
              "options": {
                "cwd": "libs/utils/signals",
                "env": {
                  "ESLINT_USE_FLAT_CONFIG": "false"
                },
                "command": "eslint ."
              },
              "inputs": ["default", "^default"],
              "outputs": ["{workspaceRoot}/dist/{projectRoot}"],
              "metadata": {
                "technologies": ["eslint"],
                "description": "Runs ESLint on project",
                "help": {
                  "command": "pnpm exec eslint --help",
                  "example": {
                    "options": {
                      "max-warnings": 0
                    }
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true
            },
            "jest:test": {
              "options": {
                "cwd": "libs/utils/signals",
                "env": {
                  "TS_NODE_COMPILER_OPTIONS": "{\"moduleResolution\":\"node10\",\"module\":\"commonjs\",\"customConditions\":null}"
                },
                "command": "jest"
              },
              "metadata": {
                "technologies": ["jest"],
                "description": "Run Jest Tests",
                "help": {
                  "command": "pnpm exec jest --help",
                  "example": {
                    "options": {
                      "coverage": true
                    }
                  }
                }
              },
              "cache": true,
              "inputs": ["default", "^default"],
              "outputs": ["{workspaceRoot}/dist/{projectRoot}"],
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true
            },
            "build": {
              "executor": "@nx/esbuild:esbuild",
              "outputs": ["{options.outputPath}"],
              "options": {
                "outputPath": "dist/libs/utils/signals",
                "main": "libs/utils/signals/index.ts",
                "tsConfig": "libs/utils/signals/tsconfig.json",
                "assets": ["libs/utils/signals/*.md"],
                "generatePackageJson": true
              },
              "configurations": {},
              "parallelism": true,
              "cache": true,
              "dependsOn": ["^build"],
              "inputs": ["default", "^default"]
            },
            "lint": {
              "executor": "@nx/eslint:lint",
              "outputs": ["{options.outputFile}"],
              "options": {
                "lintFilePatterns": ["libs/utils/signals/**/*.ts"]
              },
              "configurations": {},
              "parallelism": true,
              "cache": true,
              "inputs": [
                "default",
                "{workspaceRoot}/.eslintrc.json",
                "{workspaceRoot}/tools/eslint-rules/**/*"
              ]
            },
            "test": {
              "executor": "@nx/jest:jest",
              "outputs": ["{workspaceRoot}/coverage/{projectRoot}"],
              "options": {
                "jestConfig": "libs/utils/signals/jest.config.ts",
                "passWithNoTests": true
              },
              "configurations": {
                "ci": {
                  "ci": true,
                  "codeCoverage": true
                }
              },
              "parallelism": true,
              "cache": true,
              "inputs": ["default", "^default", "{workspaceRoot}/jest.preset.js"]
            }
          },
          "name": "signals",
          "$schema": "../../../node_modules/nx/schemas/project-schema.json",
          "sourceRoot": "libs/utils/signals/src",
          "projectType": "library",
          "tags": ["npm:private", "scope:backend-lib", "type:util"],
          "implicitDependencies": []
        }
      },
      "event-parser": {
        "name": "event-parser",
        "type": "app",
        "data": {
          "root": "apps/event-parser",
          "targets": {
            "eslint:lint": {
              "cache": true,
              "options": {
                "cwd": "apps/event-parser",
                "env": {
                  "ESLINT_USE_FLAT_CONFIG": "false"
                },
                "command": "eslint ."
              },
              "inputs": ["default", "^default"],
              "outputs": ["{workspaceRoot}/dist/{projectRoot}"],
              "metadata": {
                "technologies": ["eslint"],
                "description": "Runs ESLint on project",
                "help": {
                  "command": "pnpm exec eslint --help",
                  "example": {
                    "options": {
                      "max-warnings": 0
                    }
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true
            },
            "build": {
              "executor": "nx:run-commands",
              "options": {
                "command": "echo 'No build step for event-parser (Node.js Cloud Function)'"
              },
              "configurations": {},
              "parallelism": true,
              "cache": true,
              "inputs": ["default", "^default"],
              "outputs": ["{workspaceRoot}/dist/{projectRoot}"]
            },
            "deploy": {
              "executor": "nx:run-commands",
              "options": {
                "command": "gcloud functions deploy parseAgentEvent --region=asia-southeast1 --runtime=nodejs18 --trigger-topic=agent-events --entry-point=parseAgentEvent --project=chimera-prod-392817 --source=apps/event-parser --set-env-vars=NODE_ENV=production"
              },
              "configurations": {},
              "parallelism": true,
              "cache": true,
              "inputs": ["default", "^default"],
              "outputs": ["{workspaceRoot}/dist/{projectRoot}"]
            },
            "test": {
              "executor": "nx:run-commands",
              "options": {
                "command": "echo 'No tests defined for event-parser'"
              },
              "configurations": {},
              "parallelism": true,
              "cache": true,
              "inputs": ["default", "^default"],
              "outputs": ["{workspaceRoot}/dist/{projectRoot}"]
            },
            "lint": {
              "executor": "@nx/eslint:lint",
              "options": {
                "lintFilePatterns": ["apps/event-parser/**/*.{ts,tsx,js,jsx}"]
              },
              "configurations": {},
              "parallelism": true,
              "cache": true,
              "inputs": [
                "default",
                "{workspaceRoot}/.eslintrc.json",
                "{workspaceRoot}/tools/eslint-rules/**/*"
              ],
              "outputs": ["{options.outputFile}"]
            }
          },
          "name": "event-parser",
          "projectType": "application",
          "tags": ["npm:private", "gcp", "cloud-function", "event-parser"],
          "metadata": {
            "targetGroups": {},
            "description": "Cloud Function to parse raw agent events, stage them, and load into BigQuery.",
            "js": {
              "packageName": "@dulce-de-saigon/event-parser",
              "packageMain": "index.js",
              "isInPackageManagerWorkspaces": true
            }
          },
          "sourceRoot": "apps/event-parser",
          "implicitDependencies": []
        }
      },
      "build-tools": {
        "name": "build-tools",
        "type": "lib",
        "data": {
          "root": "libs/build-tools",
          "targets": {
            "eslint:lint": {
              "cache": true,
              "options": {
                "cwd": "libs/build-tools",
                "command": "eslint ."
              },
              "inputs": ["default", "^default"],
              "outputs": ["{workspaceRoot}/dist/{projectRoot}"],
              "metadata": {
                "technologies": ["eslint"],
                "description": "Runs ESLint on project",
                "help": {
                  "command": "pnpm exec eslint --help",
                  "example": {
                    "options": {
                      "max-warnings": 0
                    }
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true
            },
            "jest:test": {
              "options": {
                "cwd": "libs/build-tools",
                "env": {
                  "TS_NODE_COMPILER_OPTIONS": "{\"moduleResolution\":\"node10\",\"module\":\"commonjs\",\"customConditions\":null}"
                },
                "command": "jest"
              },
              "metadata": {
                "technologies": ["jest"],
                "description": "Run Jest Tests",
                "help": {
                  "command": "pnpm exec jest --help",
                  "example": {
                    "options": {
                      "coverage": true
                    }
                  }
                }
              },
              "cache": true,
              "inputs": ["default", "^default"],
              "outputs": ["{workspaceRoot}/dist/{projectRoot}"],
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true
            },
            "build": {
              "options": {
                "cwd": "libs/build-tools",
                "command": "vite build"
              },
              "cache": true,
              "dependsOn": ["^build"],
              "inputs": ["default", "^default"],
              "outputs": ["{workspaceRoot}/dist/{projectRoot}"],
              "metadata": {
                "technologies": ["vite"],
                "description": "Run Vite build",
                "help": {
                  "command": "pnpm exec vite build --help",
                  "example": {
                    "options": {
                      "sourcemap": true,
                      "manifest": "manifest.json"
                    }
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true
            },
            "serve": {
              "continuous": true,
              "options": {
                "cwd": "libs/build-tools",
                "command": "vite"
              },
              "metadata": {
                "technologies": ["vite"],
                "description": "Starts Vite dev server",
                "help": {
                  "command": "pnpm exec vite --help",
                  "example": {
                    "options": {
                      "port": 3000
                    }
                  }
                },
                "deprecated": "Use devTargetName instead. This option will be removed in Nx 22."
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true,
              "cache": true,
              "inputs": ["default", "^default"],
              "outputs": ["{workspaceRoot}/dist/{projectRoot}"]
            },
            "dev": {
              "continuous": true,
              "options": {
                "cwd": "libs/build-tools",
                "command": "vite"
              },
              "metadata": {
                "technologies": ["vite"],
                "description": "Starts Vite dev server",
                "help": {
                  "command": "pnpm exec vite --help",
                  "example": {
                    "options": {
                      "port": 3000
                    }
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true,
              "cache": true,
              "inputs": ["default", "^default"],
              "outputs": ["{workspaceRoot}/dist/{projectRoot}"]
            },
            "preview": {
              "continuous": true,
              "dependsOn": ["build"],
              "options": {
                "cwd": "libs/build-tools",
                "command": "vite preview"
              },
              "metadata": {
                "technologies": ["vite"],
                "description": "Locally preview Vite production build",
                "help": {
                  "command": "pnpm exec vite preview --help",
                  "example": {
                    "options": {
                      "port": 3000
                    }
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true,
              "cache": true,
              "inputs": ["default", "^default"],
              "outputs": ["{workspaceRoot}/dist/{projectRoot}"]
            },
            "serve-static": {
              "continuous": true,
              "executor": "@nx/web:file-server",
              "options": {
                "buildTarget": "build",
                "spa": true
              },
              "configurations": {},
              "parallelism": true
            },
            "typecheck": {
              "cache": true,
              "inputs": ["default", "^default"],
              "options": {
                "cwd": "libs/build-tools",
                "command": "tsc --noEmit -p tsconfig.lib.json"
              },
              "metadata": {
                "description": "Runs type-checking for the project.",
                "technologies": ["typescript"],
                "help": {
                  "command": "pnpm exec tsc -p tsconfig.lib.json --help",
                  "example": {
                    "options": {
                      "noEmit": true
                    }
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true,
              "outputs": ["{workspaceRoot}/dist/{projectRoot}"]
            },
            "build-deps": {
              "dependsOn": ["^build"],
              "configurations": {},
              "options": {},
              "parallelism": true,
              "executor": "nx:noop"
            },
            "watch-deps": {
              "continuous": true,
              "dependsOn": ["build-deps"],
              "executor": "nx:run-commands",
              "options": {
                "command": "pnpm exec nx watch --projects build-tools --includeDependentProjects -- pnpm exec nx build-deps build-tools"
              },
              "configurations": {},
              "parallelism": true,
              "cache": true,
              "inputs": ["default", "^default"],
              "outputs": ["{workspaceRoot}/dist/{projectRoot}"]
            },
            "nx-release-publish": {
              "executor": "@nx/js:release-publish",
              "dependsOn": ["^nx-release-publish"],
              "options": {
                "packageRoot": "dist/libs/build-tools"
              },
              "configurations": {},
              "parallelism": true
            },
            "test": {
              "executor": "@nx/jest:jest",
              "outputs": ["{workspaceRoot}/coverage/{projectRoot}"],
              "options": {
                "jestConfig": "libs/build-tools/jest.config.ts"
              },
              "configurations": {},
              "parallelism": true,
              "cache": true,
              "inputs": ["default", "^default", "{workspaceRoot}/jest.preset.js"]
            }
          },
          "projectType": "library",
          "metadata": {
            "targetGroups": {},
            "js": {
              "packageName": "@signals/build-tools",
              "packageMain": "./index.js",
              "isInPackageManagerWorkspaces": true
            }
          },
          "name": "build-tools",
          "tags": ["npm:public"],
          "$schema": "../../node_modules/nx/schemas/project-schema.json",
          "sourceRoot": "libs/build-tools/src",
          "release": {
            "version": {
              "manifestRootsToUpdate": ["dist/{projectRoot}"],
              "currentVersionResolver": "git-tag",
              "fallbackCurrentVersionResolver": "disk"
            }
          },
          "implicitDependencies": []
        }
      },
      "agents-sdk": {
        "name": "agents-sdk",
        "type": "lib",
        "data": {
          "root": "libs/agents-sdk",
          "targets": {
            "eslint:lint": {
              "cache": true,
              "options": {
                "cwd": "libs/agents-sdk",
                "command": "eslint ."
              },
              "inputs": ["default", "^default"],
              "outputs": ["{workspaceRoot}/dist/{projectRoot}"],
              "metadata": {
                "technologies": ["eslint"],
                "description": "Runs ESLint on project",
                "help": {
                  "command": "pnpm exec eslint --help",
                  "example": {
                    "options": {
                      "max-warnings": 0
                    }
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true
            },
            "jest:test": {
              "options": {
                "cwd": "libs/agents-sdk",
                "env": {
                  "TS_NODE_COMPILER_OPTIONS": "{\"moduleResolution\":\"node10\",\"module\":\"commonjs\",\"customConditions\":null}"
                },
                "command": "jest"
              },
              "metadata": {
                "technologies": ["jest"],
                "description": "Run Jest Tests",
                "help": {
                  "command": "pnpm exec jest --help",
                  "example": {
                    "options": {
                      "coverage": true
                    }
                  }
                }
              },
              "cache": true,
              "inputs": ["default", "^default"],
              "outputs": ["{workspaceRoot}/dist/{projectRoot}"],
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true
            },
            "test": {
              "executor": "@nx/jest:jest",
              "outputs": ["{workspaceRoot}/coverage/{projectRoot}"],
              "options": {
                "jestConfig": "libs/agents-sdk/jest.config.ts"
              },
              "configurations": {},
              "parallelism": true,
              "cache": true,
              "inputs": ["default", "^default", "{workspaceRoot}/jest.preset.js"]
            },
            "lint": {
              "executor": "@nx/eslint:lint",
              "options": {
                "lintFilePatterns": ["libs/agents-sdk/**/*.{ts,tsx,js,jsx}"]
              },
              "configurations": {},
              "parallelism": true,
              "cache": true,
              "inputs": [
                "default",
                "{workspaceRoot}/.eslintrc.json",
                "{workspaceRoot}/tools/eslint-rules/**/*"
              ],
              "outputs": ["{options.outputFile}"]
            }
          },
          "name": "agents-sdk",
          "$schema": "../../node_modules/nx/schemas/project-schema.json",
          "sourceRoot": "libs/agents-sdk/src",
          "projectType": "library",
          "tags": [],
          "implicitDependencies": []
        }
      },
      "agent-frontend": {
        "name": "agent-frontend",
        "type": "app",
        "data": {
          "root": "agent-frontend",
          "targets": {
            "eslint:lint": {
              "cache": true,
              "options": {
                "cwd": "agent-frontend",
                "command": "eslint ."
              },
              "inputs": ["default", "^default"],
              "outputs": ["{workspaceRoot}/dist/{projectRoot}"],
              "metadata": {
                "technologies": ["eslint"],
                "description": "Runs ESLint on project",
                "help": {
                  "command": "pnpm exec eslint --help",
                  "example": {
                    "options": {
                      "max-warnings": 0
                    }
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true
            },
            "jest:test": {
              "options": {
                "cwd": "agent-frontend",
                "env": {
                  "TS_NODE_COMPILER_OPTIONS": "{\"moduleResolution\":\"node10\",\"module\":\"commonjs\",\"customConditions\":null}"
                },
                "command": "jest"
              },
              "metadata": {
                "technologies": ["jest"],
                "description": "Run Jest Tests",
                "help": {
                  "command": "pnpm exec jest --help",
                  "example": {
                    "options": {
                      "coverage": true
                    }
                  }
                }
              },
              "cache": true,
              "inputs": ["default", "^default"],
              "outputs": ["{workspaceRoot}/dist/{projectRoot}"],
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true
            },
            "test": {
              "executor": "@nx/jest:jest",
              "outputs": ["{workspaceRoot}/coverage/{projectRoot}"],
              "options": {
                "jestConfig": "agent-frontend/jest.config.ts",
                "passWithNoTests": true
              },
              "configurations": {
                "ci": {
                  "ci": true,
                  "codeCoverage": true
                }
              },
              "parallelism": true,
              "cache": true,
              "inputs": ["default", "^default", "{workspaceRoot}/jest.preset.js"]
            },
            "build": {
              "executor": "@nx/vite:build",
              "outputs": ["{options.outputPath}"],
              "defaultConfiguration": "production",
              "options": {
                "outputPath": "dist/agent-frontend"
              },
              "configurations": {
                "development": {
                  "mode": "development"
                },
                "production": {
                  "mode": "production"
                },
                "analyze": {
                  "mode": "analyze",
                  "sourcemap": true
                }
              },
              "parallelism": true,
              "cache": true,
              "dependsOn": ["^build"],
              "inputs": ["default", "^default"]
            },
            "serve": {
              "executor": "@nx/vite:dev-server",
              "defaultConfiguration": "development",
              "options": {
                "buildTarget": "agent-frontend:build",
                "proxyConfig": "agent-frontend/proxy.conf.json"
              },
              "configurations": {
                "development": {
                  "buildTarget": "agent-frontend:build:development",
                  "hmr": true
                },
                "production": {
                  "buildTarget": "agent-frontend:build:production",
                  "hmr": false
                }
              },
              "parallelism": true,
              "continuous": true,
              "cache": false
            },
            "dev": {
              "continuous": true,
              "options": {
                "cwd": "agent-frontend",
                "command": "vite"
              },
              "metadata": {
                "technologies": ["vite"],
                "description": "Starts Vite dev server",
                "help": {
                  "command": "pnpm exec vite --help",
                  "example": {
                    "options": {
                      "port": 3000
                    }
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true,
              "cache": true,
              "inputs": ["default", "^default"],
              "outputs": ["{workspaceRoot}/dist/{projectRoot}"]
            },
            "preview": {
              "executor": "@nx/vite:preview-server",
              "defaultConfiguration": "development",
              "options": {
                "buildTarget": "agent-frontend:build"
              },
              "configurations": {
                "development": {
                  "buildTarget": "agent-frontend:build:development"
                },
                "production": {
                  "buildTarget": "agent-frontend:build:production"
                }
              },
              "parallelism": true,
              "continuous": true
            },
            "serve-static": {
              "continuous": true,
              "executor": "@nx/web:file-server",
              "options": {
                "buildTarget": "agent-frontend:build",
                "spa": true,
                "staticFilePath": "dist/agent-frontend"
              },
              "configurations": {},
              "parallelism": true
            },
            "typecheck": {
              "cache": true,
              "inputs": ["default", "^default"],
              "options": {
                "cwd": "agent-frontend",
                "command": "tsc --noEmit -p tsconfig.app.json"
              },
              "metadata": {
                "description": "Runs type-checking for the project.",
                "technologies": ["typescript"],
                "help": {
                  "command": "pnpm exec tsc -p tsconfig.app.json --help",
                  "example": {
                    "options": {
                      "noEmit": true
                    }
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true,
              "outputs": ["{workspaceRoot}/dist/{projectRoot}"]
            },
            "build-deps": {
              "dependsOn": ["^build"],
              "configurations": {},
              "options": {},
              "parallelism": true,
              "executor": "nx:noop"
            },
            "watch-deps": {
              "continuous": true,
              "dependsOn": ["build-deps"],
              "executor": "nx:run-commands",
              "options": {
                "command": "pnpm exec nx watch --projects agent-frontend --includeDependentProjects -- pnpm exec nx build-deps agent-frontend"
              },
              "configurations": {},
              "parallelism": true,
              "cache": true,
              "inputs": ["default", "^default"],
              "outputs": ["{workspaceRoot}/dist/{projectRoot}"]
            },
            "build-storybook": {
              "executor": "@nx/storybook:build",
              "outputs": ["{options.outputDir}"],
              "options": {
                "outputDir": "dist/storybook/agent-frontend",
                "configDir": "agent-frontend/.storybook"
              },
              "configurations": {
                "ci": {
                  "quiet": true
                }
              },
              "parallelism": true
            },
            "storybook": {
              "executor": "@nx/storybook:storybook",
              "options": {
                "port": 4400,
                "configDir": "agent-frontend/.storybook"
              },
              "configurations": {
                "ci": {
                  "quiet": true
                }
              },
              "parallelism": true,
              "continuous": true
            },
            "static-storybook": {
              "dependsOn": ["build-storybook"],
              "continuous": true,
              "executor": "@nx/web:file-server",
              "options": {
                "buildTarget": "build-storybook",
                "staticFilePath": "agent-frontend/storybook-static"
              },
              "configurations": {},
              "parallelism": true
            },
            "test:jest": {
              "executor": "nx:run-script",
              "options": {
                "script": "test:jest"
              },
              "metadata": {
                "scriptContent": "nx test agent-frontend",
                "runCommand": "pnpm run test:jest"
              },
              "configurations": {},
              "parallelism": true
            },
            "test:vitest": {
              "executor": "nx:run-script",
              "options": {
                "script": "test:vitest"
              },
              "metadata": {
                "scriptContent": "vitest run",
                "runCommand": "pnpm run test:vitest"
              },
              "configurations": {},
              "parallelism": true
            },
            "test:vitest:watch": {
              "executor": "nx:run-script",
              "options": {
                "script": "test:vitest:watch"
              },
              "metadata": {
                "scriptContent": "vitest",
                "runCommand": "pnpm run test:vitest:watch"
              },
              "configurations": {},
              "parallelism": true
            },
            "test:vitest:coverage": {
              "executor": "nx:run-script",
              "options": {
                "script": "test:vitest:coverage"
              },
              "metadata": {
                "scriptContent": "vitest run --coverage",
                "runCommand": "pnpm run test:vitest:coverage"
              },
              "configurations": {},
              "parallelism": true
            },
            "test:all": {
              "executor": "nx:run-script",
              "options": {
                "script": "test:all"
              },
              "metadata": {
                "scriptContent": "npm run test:jest && npm run test:vitest",
                "runCommand": "pnpm run test:all"
              },
              "configurations": {},
              "parallelism": true
            },
            "lint": {
              "executor": "@nx/eslint:lint",
              "options": {
                "lintFilePatterns": ["agent-frontend/**/*.{ts,tsx,js,jsx}"],
                "fix": false
              },
              "configurations": {
                "fix": {
                  "fix": true
                }
              },
              "parallelism": true,
              "cache": true,
              "inputs": [
                "default",
                "{workspaceRoot}/.eslintrc.json",
                "{workspaceRoot}/tools/eslint-rules/**/*"
              ],
              "outputs": ["{options.outputFile}"]
            },
            "docker-build": {
              "executor": "@nx-tools/nx-docker:build",
              "options": {
                "push": false,
                "tags": ["dulcedesaigon/agent-frontend:latest"],
                "file": "agent-frontend/Dockerfile",
                "context": "."
              },
              "configurations": {},
              "parallelism": true
            },
            "lighthouse": {
              "executor": "@nx/web:lighthouse",
              "options": {
                "url": ["http://localhost:4200"]
              },
              "configurations": {},
              "parallelism": true
            },
            "e2e": {
              "executor": "@nx/cypress:cypress",
              "options": {
                "cypressConfig": "agent-frontend/cypress.config.ts",
                "testingType": "e2e",
                "devServerTarget": "agent-frontend:serve"
              },
              "configurations": {
                "production": {
                  "devServerTarget": "agent-frontend:serve:production"
                }
              },
              "parallelism": true
            },
            "component-test": {
              "executor": "@nx/cypress:cypress",
              "options": {
                "cypressConfig": "agent-frontend/cypress.config.ts",
                "testingType": "component",
                "devServerTarget": "agent-frontend:serve"
              },
              "configurations": {},
              "parallelism": true
            }
          },
          "projectType": "application",
          "metadata": {
            "targetGroups": {
              "NPM Scripts": [
                "test:jest",
                "test:vitest",
                "test:vitest:watch",
                "test:vitest:coverage",
                "test:all"
              ]
            },
            "js": {
              "packageName": "agent-frontend",
              "isInPackageManagerWorkspaces": false
            }
          },
          "name": "agent-frontend",
          "tags": ["npm:private", "type:app", "scope:frontend", "platform:web"],
          "$schema": "../node_modules/nx/schemas/project-schema.json",
          "sourceRoot": "agent-frontend/src",
          "implicitDependencies": []
        }
      },
      "agents": {
        "name": "agents",
        "type": "app",
        "data": {
          "root": "apps/agents",
          "targets": {
            "eslint:lint": {
              "cache": true,
              "options": {
                "cwd": "apps/agents",
                "env": {
                  "ESLINT_USE_FLAT_CONFIG": "false"
                },
                "command": "eslint ."
              },
              "inputs": ["default", "^default"],
              "outputs": ["{workspaceRoot}/dist/{projectRoot}"],
              "metadata": {
                "technologies": ["eslint"],
                "description": "Runs ESLint on project",
                "help": {
                  "command": "pnpm exec eslint --help",
                  "example": {
                    "options": {
                      "max-warnings": 0
                    }
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true
            },
            "dev": {
              "executor": "nx:run-commands",
              "options": {
                "command": "node --loader ts-node/esm apps/agents/src/main.ts"
              },
              "configurations": {},
              "parallelism": true,
              "cache": true,
              "inputs": ["default", "^default"],
              "outputs": ["{workspaceRoot}/dist/{projectRoot}"]
            },
            "build": {
              "executor": "nx:run-commands",
              "options": {
                "command": "tsc -p apps/agents/tsconfig.json"
              },
              "configurations": {},
              "parallelism": true,
              "cache": true,
              "inputs": ["default", "^default"],
              "outputs": ["{workspaceRoot}/dist/{projectRoot}"]
            },
            "lint": {
              "executor": "@nx/eslint:lint",
              "options": {
                "lintFilePatterns": ["apps/agents/**/*.{ts,tsx,js,jsx}"]
              },
              "configurations": {},
              "parallelism": true,
              "cache": true,
              "inputs": [
                "default",
                "{workspaceRoot}/.eslintrc.json",
                "{workspaceRoot}/tools/eslint-rules/**/*"
              ],
              "outputs": ["{options.outputFile}"]
            }
          },
          "name": "agents",
          "sourceRoot": "apps/agents/src",
          "projectType": "application",
          "implicitDependencies": [],
          "tags": []
        }
      },
      "agents-lib": {
        "name": "agents-lib",
        "type": "lib",
        "data": {
          "root": "libs/agents",
          "targets": {
            "eslint:lint": {
              "cache": true,
              "options": {
                "cwd": "libs/agents",
                "env": {
                  "ESLINT_USE_FLAT_CONFIG": "false"
                },
                "command": "eslint ."
              },
              "inputs": ["default", "^default"],
              "outputs": ["{workspaceRoot}/dist/{projectRoot}"],
              "metadata": {
                "technologies": ["eslint"],
                "description": "Runs ESLint on project",
                "help": {
                  "command": "pnpm exec eslint --help",
                  "example": {
                    "options": {
                      "max-warnings": 0
                    }
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true
            },
            "build": {
              "executor": "@nx/js:tsc",
              "outputs": ["{options.outputPath}"],
              "options": {
                "outputPath": "dist/libs/agents",
                "main": "libs/agents/src/index.ts",
                "tsConfig": "libs/agents/tsconfig.lib.json",
                "assets": ["libs/agents/*.md"]
              },
              "configurations": {},
              "parallelism": true,
              "cache": true,
              "dependsOn": ["^build"],
              "inputs": ["default", "^default"]
            },
            "lint": {
              "executor": "@nx/eslint:lint",
              "options": {
                "lintFilePatterns": ["libs/agents/**/*.{ts,tsx,js,jsx}"]
              },
              "configurations": {},
              "parallelism": true,
              "cache": true,
              "inputs": [
                "default",
                "{workspaceRoot}/.eslintrc.json",
                "{workspaceRoot}/tools/eslint-rules/**/*"
              ],
              "outputs": ["{options.outputFile}"]
            }
          },
          "name": "agents-lib",
          "$schema": "../../node_modules/nx/schemas/project-schema.json",
          "sourceRoot": "libs/agents/src",
          "projectType": "library",
          "tags": ["scope:backend-lib", "type:agent-lib"],
          "implicitDependencies": []
        }
      },
      "adk": {
        "name": "adk",
        "type": "lib",
        "data": {
          "root": "libs/adk",
          "targets": {
            "eslint:lint": {
              "cache": true,
              "options": {
                "cwd": "libs/adk",
                "env": {
                  "ESLINT_USE_FLAT_CONFIG": "false"
                },
                "command": "eslint ."
              },
              "inputs": ["default", "^default"],
              "outputs": ["{workspaceRoot}/dist/{projectRoot}"],
              "metadata": {
                "technologies": ["eslint"],
                "description": "Runs ESLint on project",
                "help": {
                  "command": "pnpm exec eslint --help",
                  "example": {
                    "options": {
                      "max-warnings": 0
                    }
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true
            },
            "build": {
              "executor": "@nx/js:tsc",
              "outputs": ["{options.outputPath}"],
              "options": {
                "outputPath": "dist/libs/adk",
                "main": "libs/adk/src/index.ts",
                "tsConfig": "libs/adk/tsconfig.lib.json",
                "assets": ["libs/adk/*.md"]
              },
              "configurations": {},
              "parallelism": true,
              "cache": true,
              "dependsOn": ["^build"],
              "inputs": ["default", "^default"]
            },
            "lint": {
              "executor": "@nx/eslint:lint",
              "options": {
                "lintFilePatterns": ["libs/adk/**/*.{ts,tsx,js,jsx}"]
              },
              "configurations": {},
              "parallelism": true,
              "cache": true,
              "inputs": [
                "default",
                "{workspaceRoot}/.eslintrc.json",
                "{workspaceRoot}/tools/eslint-rules/**/*"
              ],
              "outputs": ["{options.outputFile}"]
            }
          },
          "name": "adk",
          "$schema": "../../node_modules/nx/schemas/project-schema.json",
          "sourceRoot": "libs/adk/src",
          "projectType": "library",
          "tags": ["scope:backend-lib", "type:adk"],
          "implicitDependencies": []
        }
      },
      "api": {
        "name": "api",
        "type": "app",
        "data": {
          "root": "apps/api",
          "targets": {
            "eslint:lint": {
              "cache": true,
              "options": {
                "cwd": "apps/api",
                "env": {
                  "ESLINT_USE_FLAT_CONFIG": "false"
                },
                "command": "eslint ."
              },
              "inputs": ["default", "^default"],
              "outputs": ["{workspaceRoot}/dist/{projectRoot}"],
              "metadata": {
                "technologies": ["eslint"],
                "description": "Runs ESLint on project",
                "help": {
                  "command": "pnpm exec eslint --help",
                  "example": {
                    "options": {
                      "max-warnings": 0
                    }
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true
            },
            "serve": {
              "executor": "nx:run-commands",
              "options": {
                "command": "node dist/apps/api/main.js",
                "dependsOn": ["build"]
              },
              "configurations": {},
              "parallelism": true,
              "cache": true,
              "inputs": ["default", "^default"],
              "outputs": ["{workspaceRoot}/dist/{projectRoot}"]
            },
            "build": {
              "executor": "nx:run-commands",
              "options": {
                "command": "tsc -p apps/api/tsconfig.json && node -e 'require(\"fs\").cpSync(\"apps/api/src/routes\", \"dist/apps/api/routes\", { recursive: true })'"
              },
              "configurations": {},
              "parallelism": true,
              "cache": true,
              "inputs": ["default", "^default"],
              "outputs": ["{workspaceRoot}/dist/{projectRoot}"]
            },
            "lint": {
              "executor": "@nx/eslint:lint",
              "options": {
                "args": ["**/*.{ts,tsx,js,jsx}"]
              },
              "configurations": {},
              "parallelism": true,
              "cache": true,
              "inputs": [
                "default",
                "{workspaceRoot}/.eslintrc.json",
                "{workspaceRoot}/tools/eslint-rules/**/*"
              ],
              "outputs": ["{options.outputFile}"]
            },
            "test": {
              "executor": "nx:run-commands",
              "options": {
                "command": "echo 'test placeholder'"
              },
              "configurations": {},
              "parallelism": true,
              "cache": true,
              "inputs": ["default", "^default"],
              "outputs": ["{workspaceRoot}/dist/{projectRoot}"]
            },
            "build-all": {
              "executor": "nx:run-commands",
              "outputs": [],
              "options": {
                "command": "echo 'Building all dependencies' && nx build mcp && nx build gcp"
              },
              "configurations": {},
              "parallelism": true,
              "cache": true,
              "inputs": ["default", "^default"]
            }
          },
          "name": "api",
          "$schema": "../../node_modules/nx/schemas/project-schema.json",
          "sourceRoot": "apps/api/src",
          "projectType": "application",
          "implicitDependencies": [],
          "tags": []
        }
      },
      "gcp": {
        "name": "gcp",
        "type": "lib",
        "data": {
          "root": "libs/gcp",
          "targets": {
            "eslint:lint": {
              "cache": true,
              "options": {
                "cwd": "libs/gcp",
                "env": {
                  "ESLINT_USE_FLAT_CONFIG": "false"
                },
                "command": "eslint ."
              },
              "inputs": ["default", "^default"],
              "outputs": ["{workspaceRoot}/dist/{projectRoot}"],
              "metadata": {
                "technologies": ["eslint"],
                "description": "Runs ESLint on project",
                "help": {
                  "command": "pnpm exec eslint --help",
                  "example": {
                    "options": {
                      "max-warnings": 0
                    }
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true
            },
            "build": {
              "executor": "@nx/js:tsc",
              "outputs": ["{options.outputPath}"],
              "options": {
                "outputPath": "dist/libs/gcp",
                "main": "libs/gcp/src/index.ts",
                "tsConfig": "libs/gcp/tsconfig.lib.json",
                "assets": ["libs/gcp/*.md"]
              },
              "configurations": {},
              "parallelism": true,
              "cache": true,
              "dependsOn": ["^build"],
              "inputs": ["default", "^default"]
            },
            "lint": {
              "executor": "@nx/eslint:lint",
              "options": {
                "lintFilePatterns": ["libs/gcp/**/*.{ts,tsx,js,jsx}"]
              },
              "configurations": {},
              "parallelism": true,
              "cache": true,
              "inputs": [
                "default",
                "{workspaceRoot}/.eslintrc.json",
                "{workspaceRoot}/tools/eslint-rules/**/*"
              ],
              "outputs": ["{options.outputFile}"]
            }
          },
          "name": "gcp",
          "projectType": "library",
          "tags": ["npm:private", "scope:backend-lib", "type:gcp"],
          "metadata": {
            "targetGroups": {},
            "js": {
              "packageName": "gcp",
              "packageMain": "./src/index.js",
              "isInPackageManagerWorkspaces": true
            }
          },
          "$schema": "../../node_modules/nx/schemas/project-schema.json",
          "sourceRoot": "libs/gcp/src",
          "implicitDependencies": []
        }
      },
      "mcp": {
        "name": "mcp",
        "type": "lib",
        "data": {
          "root": "libs/mcp",
          "targets": {
            "eslint:lint": {
              "cache": true,
              "options": {
                "cwd": "libs/mcp",
                "env": {
                  "ESLINT_USE_FLAT_CONFIG": "false"
                },
                "command": "eslint ."
              },
              "inputs": ["default", "^default"],
              "outputs": ["{workspaceRoot}/dist/{projectRoot}"],
              "metadata": {
                "technologies": ["eslint"],
                "description": "Runs ESLint on project",
                "help": {
                  "command": "pnpm exec eslint --help",
                  "example": {
                    "options": {
                      "max-warnings": 0
                    }
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true
            },
            "jest:test": {
              "options": {
                "cwd": "libs/mcp",
                "env": {
                  "TS_NODE_COMPILER_OPTIONS": "{\"moduleResolution\":\"node10\",\"module\":\"commonjs\",\"customConditions\":null}"
                },
                "command": "jest"
              },
              "metadata": {
                "technologies": ["jest"],
                "description": "Run Jest Tests",
                "help": {
                  "command": "pnpm exec jest --help",
                  "example": {
                    "options": {
                      "coverage": true
                    }
                  }
                }
              },
              "cache": true,
              "inputs": ["default", "^default"],
              "outputs": ["{workspaceRoot}/dist/{projectRoot}"],
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true
            },
            "build": {
              "executor": "@nx/js:tsc",
              "outputs": ["{options.outputPath}"],
              "options": {
                "outputPath": "dist/libs/mcp",
                "main": "libs/mcp/src/index.ts",
                "tsConfig": "libs/mcp/tsconfig.lib.json",
                "assets": ["libs/mcp/*.md"]
              },
              "configurations": {
                "production": {
                  "optimization": true,
                  "extractLicenses": true,
                  "generatePackageJson": true,
                  "sourceMap": false
                },
                "development": {
                  "optimization": false,
                  "sourceMap": true
                }
              },
              "defaultConfiguration": "production",
              "cache": true,
              "dependsOn": ["^build"],
              "inputs": ["production", "^production"],
              "parallelism": true
            },
            "lint": {
              "executor": "@nx/eslint:lint",
              "outputs": ["{options.outputFile}"],
              "options": {
                "lintFilePatterns": ["libs/mcp/**/*.ts"]
              },
              "inputs": ["default", "{workspaceRoot}/.eslintrc.json"],
              "cache": true,
              "configurations": {},
              "parallelism": true
            },
            "test": {
              "executor": "@nx/jest:jest",
              "outputs": ["{workspaceRoot}/coverage/{projectRoot}"],
              "options": {
                "jestConfig": "libs/mcp/jest.config.ts",
                "passWithNoTests": true
              },
              "configurations": {
                "ci": {
                  "ci": true,
                  "codeCoverage": true
                }
              },
              "inputs": ["default", "^default", "{workspaceRoot}/jest.preset.js"],
              "cache": true,
              "parallelism": true
            }
          },
          "name": "mcp",
          "$schema": "../../node_modules/nx/schemas/project-schema.json",
          "sourceRoot": "libs/mcp/src",
          "projectType": "library",
          "tags": ["domain:mcp", "type:lib"],
          "implicitDependencies": ["gemini-orchestrator", "monitoring"],
          "namedInputs": {
            "default": ["{projectRoot}/**/*", "sharedGlobals"],
            "production": [
              "default",
              "!{projectRoot}/**/?(*.)+(spec|test).[jt]s?(x)?(.snap)",
              "!{projectRoot}/tsconfig.spec.json",
              "!{projectRoot}/jest.config.[jt]s",
              "!{projectRoot}/.eslintrc.json"
            ],
            "sharedGlobals": []
          }
        }
      },
      "nx-monorepo": {
        "name": "nx-monorepo",
        "type": "app",
        "data": {
          "root": ".",
          "name": "nx-monorepo",
          "includedScripts": [],
          "tags": ["npm:private"],
          "metadata": {
            "targetGroups": {},
            "js": {
              "packageName": "nx-monorepo",
              "isInPackageManagerWorkspaces": true
            }
          },
          "targets": {
            "local-registry": {
              "executor": "@nx/js:verdaccio",
              "options": {
                "port": 4873,
                "config": ".verdaccio/config.yml",
                "storage": "tmp/local-registry/storage"
              },
              "configurations": {},
              "parallelism": true,
              "continuous": true
            }
          },
          "$schema": "node_modules/nx/schemas/project-schema.json",
          "implicitDependencies": []
        }
      }
    },
    "dependencies": {
      "pubsub-workflows": [],
      "reviews-api": [],
      "cloud-workflows": [],
      "gemini-orchestrator": [
        {
          "source": "gemini-orchestrator",
          "target": "gcp",
          "type": "implicit"
        },
        {
          "source": "gemini-orchestrator",
          "target": "agents-lib",
          "type": "static"
        }
      ],
      "social-api": [],
      "cms-api": [],
      "crm-api": [],
      "dbt-models": [],
      "content-agent": [],
      "reviews-agent": [],
      "looker-agent": [],
      "schemas": [],
      "api-clients": [],
      "looker-dashboards": [],
      "crm-agent": [],
      "monitoring": [
        {
          "source": "monitoring",
          "target": "gemini-orchestrator",
          "type": "static"
        }
      ],
      "bq-agent": [],
      "frontend-agents": [
        {
          "source": "frontend-agents",
          "target": "bq-agent",
          "type": "static"
        },
        {
          "source": "frontend-agents",
          "target": "content-agent",
          "type": "static"
        },
        {
          "source": "frontend-agents",
          "target": "crm-agent",
          "type": "static"
        },
        {
          "source": "frontend-agents",
          "target": "gemini-orchestrator",
          "type": "static"
        },
        {
          "source": "frontend-agents",
          "target": "looker-agent",
          "type": "static"
        },
        {
          "source": "frontend-agents",
          "target": "reviews-agent",
          "type": "static"
        },
        {
          "source": "frontend-agents",
          "target": "gcp",
          "type": "static"
        }
      ],
      "gcp-auth": [],
      "signals": [],
      "event-parser": [],
      "build-tools": [],
      "agents-sdk": [],
      "agent-frontend": [
        {
          "source": "agent-frontend",
          "target": "agents-sdk",
          "type": "static"
        },
        {
          "source": "agent-frontend",
          "target": "signals",
          "type": "static"
        }
      ],
      "agents": [
        {
          "source": "agents",
          "target": "mcp",
          "type": "static"
        }
      ],
      "agents-lib": [
        {
          "source": "agents-lib",
          "target": "bq-agent",
          "type": "static"
        },
        {
          "source": "agents-lib",
          "target": "content-agent",
          "type": "static"
        },
        {
          "source": "agents-lib",
          "target": "crm-agent",
          "type": "static"
        },
        {
          "source": "agents-lib",
          "target": "looker-agent",
          "type": "static"
        },
        {
          "source": "agents-lib",
          "target": "reviews-agent",
          "type": "static"
        }
      ],
      "adk": [],
      "api": [
        {
          "source": "api",
          "target": "mcp",
          "type": "dynamic"
        }
      ],
      "gcp": [],
      "mcp": [
        {
          "source": "mcp",
          "target": "gemini-orchestrator",
          "type": "implicit"
        },
        {
          "source": "mcp",
          "target": "monitoring",
          "type": "implicit"
        }
      ],
      "nx-monorepo": [
        {
          "source": "nx-monorepo",
          "target": "mcp",
          "type": "static"
        }
      ]
    }
  }
}
