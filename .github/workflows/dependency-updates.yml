name: Dependency Updates

on:
  schedule:
    - cron: '0 7 * * 1' # Every Monday at 7 AM UTC
  workflow_dispatch:
    inputs:
      update-level:
        description: 'Level of dependencies to update'
        required: true
        default: 'minor'
        type: choice
        options:
          - patch
          - minor
          - major

env:
  NODE_VERSION: '20'
  PNPM_VERSION: '10.0.0'
  UPDATE_LEVEL: ${{ github.event.inputs.update-level || 'minor' }}

jobs:
  update-dependencies:
    name: Update Dependencies
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1
        with:
          fetch-depth: 0
      
      - name: Setup pnpm
        uses: pnpm/action-setup@v4.1.0
        with:
          version: ${{ env.PNPM_VERSION }}
      
      - name: Setup Node.js
        uses: actions/setup-node@c4c9e84c7b9465a335b762113626741ec8e95c00 # v4.0.1
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'pnpm'
      
      - name: Install dependencies
        run: pnpm install --frozen-lockfile
      
      - name: Create branch for dependency updates
        run: |
          BRANCH_NAME="chore/dependency-updates-$(date +%Y-%m-%d)"
          git config user.name "GitHub Actions Bot"
          git config user.email "actions@github.com"
          git checkout -b $BRANCH_NAME
          echo "BRANCH_NAME=$BRANCH_NAME" >> $GITHUB_ENV
      
      - name: Update dependencies
        run: |
          echo "Updating dependencies with level: $UPDATE_LEVEL"
          case "$UPDATE_LEVEL" in
            "patch")
              pnpm update --interactive=false
              ;;
            "minor")
              pnpm update --interactive=false -L
              ;;
            "major")
              pnpm update --interactive=false -L --latest
              ;;
          esac
      
      - name: Run tests to verify updates
        run: |
          set +e
          pnpm nx test --skip-nx-cache
          TEST_EXIT_CODE=$?
          set -e
          
          if [ $TEST_EXIT_CODE -ne 0 ]; then
            echo "::warning::Some tests failed after dependency updates. Proceeding anyway for manual review."
          fi
      
      - name: Check for changes
        id: check-changes
        run: |
          if [[ -n $(git status --porcelain) ]]; then
            echo "has-changes=true" >> $GITHUB_OUTPUT
          else
            echo "has-changes=false" >> $GITHUB_OUTPUT
          fi
      
      - name: Commit changes
        if: steps.check-changes.outputs.has-changes == 'true'
        run: |
          git add .
          git commit -m "chore: update dependencies (auto)"
          git push origin $BRANCH_NAME
      
      - name: Create Pull Request
        if: steps.check-changes.outputs.has-changes == 'true'
        uses: peter-evans/create-pull-request@a4f52f8033a6168103c2538976c07b467e8163bc # v6.0.1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          title: "chore: update dependencies (auto) - ${{ env.UPDATE_LEVEL }} level"
          body: |
            ## Automated Dependency Updates
            
            This PR updates dependencies to their ${{ env.UPDATE_LEVEL }} level.
            
            ### ü§ñ Automated Process
            - Updated dependencies to ${{ env.UPDATE_LEVEL }} level
            - Ran tests to verify compatibility
            
            ### ‚úÖ Actions Required
            - [ ] Review changes
            - [ ] Check CI/CD pipeline runs
            - [ ] Verify application functionality
            
            ### üìù Notes
            - Generated on: $(date +"%Y-%m-%d")
            - Update level: ${{ env.UPDATE_LEVEL }}
          branch: ${{ env.BRANCH_NAME }}
          base: develop
          labels: dependencies,automerge-candidate
      
      - name: Output result
        if: steps.check-changes.outputs.has-changes == 'true'
        run: echo "Created PR for dependency updates"
        
      - name: No changes detected
        if: steps.check-changes.outputs.has-changes == 'false'
        run: echo "No dependency updates were needed at this time"
