{
  "graph": {
    "nodes": {
      "looker-agent": {
        "name": "looker-agent",
        "type": "lib",
        "data": {
          "root": "libs/agents/looker-agent",
          "targets": {
            "eslint:lint": {
              "cache": true,
              "options": {
                "cwd": "libs/agents/looker-agent",
                "command": "eslint ."
              },
              "inputs": ["default", "^default"],
              "outputs": ["{workspaceRoot}/dist/{projectRoot}"],
              "metadata": {
                "technologies": ["eslint"],
                "description": "Runs ESLint on project",
                "help": {
                  "command": "pnpm exec eslint --help",
                  "example": {
                    "options": {
                      "max-warnings": 0
                    }
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true
            },
            "jest:test": {
              "options": {
                "cwd": "libs/agents/looker-agent",
                "env": {
                  "TS_NODE_COMPILER_OPTIONS": "{\"moduleResolution\":\"node10\",\"module\":\"commonjs\",\"customConditions\":null}"
                },
                "command": "jest"
              },
              "metadata": {
                "technologies": ["jest"],
                "description": "Run Jest Tests",
                "help": {
                  "command": "pnpm exec jest --help",
                  "example": {
                    "options": {
                      "coverage": true
                    }
                  }
                }
              },
              "cache": true,
              "inputs": ["default", "^default"],
              "outputs": ["{workspaceRoot}/dist/{projectRoot}"],
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true
            },
            "build": {
              "executor": "@nx/js:tsc",
              "outputs": ["{options.outputPath}"],
              "options": {
                "outputPath": "dist/libs/agents/looker-agent",
                "main": "libs/agents/looker-agent/src/index.ts",
                "tsConfig": "libs/agents/looker-agent/tsconfig.lib.json",
                "assets": ["libs/agents/looker-agent/*.md"]
              },
              "configurations": {
                "production": {
                  "optimization": true,
                  "extractLicenses": true,
                  "generatePackageJson": true,
                  "sourceMap": false
                },
                "development": {
                  "optimization": false,
                  "sourceMap": true
                }
              },
              "defaultConfiguration": "production",
              "cache": true,
              "dependsOn": ["^build"],
              "inputs": ["production", "^production"],
              "parallelism": true
            },
            "test": {
              "executor": "@nx/jest:jest",
              "outputs": ["{workspaceRoot}/coverage/{projectRoot}"],
              "options": {
                "jestConfig": "libs/agents/looker-agent/jest.config.ts"
              },
              "configurations": {
                "ci": {
                  "ci": true,
                  "codeCoverage": true
                }
              },
              "inputs": ["default", "^default", "{workspaceRoot}/jest.preset.js"],
              "cache": true,
              "parallelism": true
            }
          },
          "name": "looker-agent",
          "projectType": "library",
          "tags": ["npm:private", "domain:looker-agent", "type:library"],
          "metadata": {
            "targetGroups": {},
            "js": {
              "packageName": "looker-agent",
              "packageMain": "./src/index.js",
              "isInPackageManagerWorkspaces": true
            }
          },
          "$schema": "../../../node_modules/nx/schemas/project-schema.json",
          "sourceRoot": "libs/agents/looker-agent/src",
          "namedInputs": {
            "default": ["{projectRoot}/**/*", "sharedGlobals"],
            "production": [
              "default",
              "!{projectRoot}/**/?(*.)+(spec|test).[jt]s?(x)?(.snap)",
              "!{projectRoot}/tsconfig.spec.json",
              "!{projectRoot}/jest.config.[jt]s",
              "!{projectRoot}/.eslintrc.json"
            ],
            "sharedGlobals": []
          },
          "implicitDependencies": []
        }
      },
      "frontend-agents": {
        "name": "frontend-agents",
        "type": "app",
        "data": {
          "root": "apps/frontend-agents",
          "targets": {
            "eslint:lint": {
              "cache": true,
              "options": {
                "cwd": "apps/frontend-agents",
                "env": {
                  "ESLINT_USE_FLAT_CONFIG": "false"
                },
                "command": "eslint ."
              },
              "inputs": ["default", "^default"],
              "outputs": ["{workspaceRoot}/dist/{projectRoot}"],
              "metadata": {
                "technologies": ["eslint"],
                "description": "Runs ESLint on project",
                "help": {
                  "command": "pnpm exec eslint --help",
                  "example": {
                    "options": {
                      "max-warnings": 0
                    }
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true
            },
            "dev": {
              "executor": "nx:run-script",
              "options": {
                "script": "dev"
              },
              "metadata": {
                "scriptContent": "next dev",
                "runCommand": "pnpm run dev"
              },
              "configurations": {},
              "parallelism": true,
              "cache": false
            },
            "start": {
              "executor": "nx:run-script",
              "options": {
                "script": "start"
              },
              "metadata": {
                "scriptContent": "next start",
                "runCommand": "pnpm run start"
              },
              "configurations": {},
              "parallelism": true
            },
            "type-check": {
              "executor": "nx:run-script",
              "options": {
                "script": "type-check"
              },
              "metadata": {
                "scriptContent": "tsc --noEmit",
                "runCommand": "pnpm run type-check"
              },
              "configurations": {},
              "parallelism": true
            },
            "build": {
              "executor": "@nx/next:build",
              "outputs": ["{projectRoot}/dist"],
              "defaultConfiguration": "production",
              "options": {},
              "configurations": {
                "production": {
                  "optimization": true,
                  "extractLicenses": true,
                  "generatePackageJson": true,
                  "sourceMap": false
                },
                "development": {
                  "optimization": false,
                  "sourceMap": true
                }
              },
              "cache": true,
              "dependsOn": ["^build"],
              "inputs": ["production", "^production"],
              "parallelism": true
            },
            "serve": {
              "executor": "@nx/next:server",
              "defaultConfiguration": "development",
              "options": {},
              "configurations": {
                "development": {
                  "buildTarget": "frontend-agents:build:development",
                  "dev": true
                },
                "production": {
                  "buildTarget": "frontend-agents:build:production",
                  "dev": false
                }
              },
              "parallelism": true,
              "continuous": true,
              "cache": false
            },
            "export": {
              "executor": "@nx/next:export",
              "options": {
                "buildTarget": "frontend-agents:build:production"
              },
              "configurations": {},
              "parallelism": true
            },
            "lint": {
              "executor": "@nx/eslint:lint",
              "options": {
                "lintFilePatterns": ["apps/frontend-agents/**/*.{ts,tsx,js,jsx}"]
              },
              "inputs": ["default", "{workspaceRoot}/.eslintrc.json"],
              "cache": true,
              "configurations": {},
              "parallelism": true,
              "outputs": ["{options.outputFile}"]
            }
          },
          "name": "frontend-agents",
          "projectType": "application",
          "tags": ["npm:private", "domain:frontend-agents", "type:application", "scope:client"],
          "metadata": {
            "targetGroups": {
              "NPM Scripts": ["dev", "start", "type-check"]
            },
            "js": {
              "packageName": "frontend-agents",
              "isInPackageManagerWorkspaces": true
            }
          },
          "$schema": "../../node_modules/nx/schemas/project-schema.json",
          "sourceRoot": "apps/frontend-agents/src",
          "namedInputs": {
            "default": ["{projectRoot}/**/*", "sharedGlobals"],
            "production": [
              "default",
              "!{projectRoot}/**/?(*.)+(spec|test).[jt]s?(x)?(.snap)",
              "!{projectRoot}/tsconfig.spec.json",
              "!{projectRoot}/jest.config.[jt]s",
              "!{projectRoot}/.eslintrc.json"
            ],
            "sharedGlobals": []
          },
          "implicitDependencies": []
        }
      }
    },
    "dependencies": {
      "looker-agent": [],
      "frontend-agents": [
        {
          "source": "frontend-agents",
          "target": "bq-agent",
          "type": "static"
        },
        {
          "source": "frontend-agents",
          "target": "content-agent",
          "type": "static"
        },
        {
          "source": "frontend-agents",
          "target": "crm-agent",
          "type": "static"
        },
        {
          "source": "frontend-agents",
          "target": "gemini-orchestrator",
          "type": "static"
        },
        {
          "source": "frontend-agents",
          "target": "looker-agent",
          "type": "static"
        },
        {
          "source": "frontend-agents",
          "target": "reviews-agent",
          "type": "static"
        },
        {
          "source": "frontend-agents",
          "target": "gcp",
          "type": "static"
        }
      ]
    }
  }
}
