name: Dependabot Auto-merge

on:
  pull_request:
    types: [opened, synchronize, reopened, ready_for_review]

permissions:
  contents: write
  pull-requests: write
  checks: read

jobs:
  auto-merge:
    runs-on: ubuntu-latest
    if: github.actor == 'dependabot[bot]'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Get Dependabot metadata
        id: metadata
        uses: dependabot/fetch-metadata@a4e8458f2ab22bb64eaf76c405ac512a8290428a # v2
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}

      - name: Wait for CI checks
        uses: fountainhead/action-wait-for-check@2b3d73762755cd85a72a8c8de76ca84df5bf7a6d # v1.2.0.2.0
        id: wait-for-ci
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          checkName: 'build-test-lint'
          ref: ${{ github.event.pull_request.head.sha }}
          timeoutSeconds: 1800 # 30 minutes
          intervalSeconds: 30

      - name: Wait for CodeQL
        uses: fountainhead/action-wait-for-check@2b3d73762755cd85a72a8c8de76ca84df5bf7a6d # v1.2.0.2.0
        id: wait-for-codeql
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          checkName: 'CodeQL'
          ref: ${{ github.event.pull_request.head.sha }}
          timeoutSeconds: 1800
          intervalSeconds: 30

      - name: Auto-merge patch updates
        if: |
          steps.metadata.outputs.update-type == 'version-update:semver-patch' &&
          steps.wait-for-ci.outputs.conclusion == 'success' &&
          steps.wait-for-codeql.outputs.conclusion == 'success'
        run: |
          echo "Auto-merging patch update for ${{ steps.metadata.outputs.dependency-names }}"
          gh pr merge --auto --squash "${{ github.event.pull_request.number }}"
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Auto-merge minor updates for dev dependencies
        if: |
          steps.metadata.outputs.update-type == 'version-update:semver-minor' &&
          steps.metadata.outputs.dependency-type == 'direct:development' &&
          steps.wait-for-ci.outputs.conclusion == 'success' &&
          steps.wait-for-codeql.outputs.conclusion == 'success'
        run: |
          echo "Auto-merging minor dev dependency update for ${{ steps.metadata.outputs.dependency-names }}"
          gh pr merge --auto --squash "${{ github.event.pull_request.number }}"
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Auto-approve safe updates
        if: |
          (steps.metadata.outputs.update-type == 'version-update:semver-patch' ||
           (steps.metadata.outputs.update-type == 'version-update:semver-minor' && 
            steps.metadata.outputs.dependency-type == 'direct:development')) &&
          steps.wait-for-ci.outputs.conclusion == 'success' &&
          steps.wait-for-codeql.outputs.conclusion == 'success'
        run: |
          gh pr review --approve "${{ github.event.pull_request.number }}"
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Comment on major updates
        if: steps.metadata.outputs.update-type == 'version-update:semver-major'
        run: |
          gh pr comment "${{ github.event.pull_request.number }}" --body "
          ðŸš¨ **Major Version Update Detected**
          
          This PR contains a major version update for: **${{ steps.metadata.outputs.dependency-names }}**
          
          **Please review carefully:**
          - Check for breaking changes in the changelog
          - Verify all tests pass
          - Consider testing in a staging environment
          - Manual approval required for merge
          
          **Update Type:** ${{ steps.metadata.outputs.update-type }}
          **Dependency Type:** ${{ steps.metadata.outputs.dependency-type }}
          "
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}