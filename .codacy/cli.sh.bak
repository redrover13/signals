#!/bin/bash
# Fix for JSON parsing error
export CODACY_CLI_V2_VERSION="1.0.0-main.354.sha.642d8bf"

# Set the Codacy CLI version explicitly
export CODACY_CLI_V2_VERSION="1.0.0-main.354.sha.642d8bf"

# Get the directory of this script
SCRIPT_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"
PROJECT_ROOT="$(cd "$SCRIPT_DIR/.." && pwd)"

# Function to check if a tool is installed
check_installed() {
  if ! command -v $1 &> /dev/null; then
    echo "Error: $1 is not installed. Please install it first."
    exit 1
  fi
}

# Check for required tools
check_installed curl
check_installed tar

# Parse arguments
FILE_PATH=""
TOOL=""
FORMAT="sarif"

while [[ $# -gt 0 ]]; do
  case "$1" in
    analyze)
      COMMAND="analyze"
      shift
      if [[ $# -gt 0 && ! $1 =~ ^-- ]]; then
        FILE_PATH="$1"
        shift
      fi
      ;;
    install)
      COMMAND="install"
      shift
      ;;
    --tool)
      shift
      TOOL="$1"
      shift
      ;;
    --format)
      shift
      FORMAT="$1"
      shift
      ;;
    *)
      shift
      ;;
  esac
done

# Create the logs directory if it doesn't exist
mkdir -p "$SCRIPT_DIR/logs"

# Execute the Codacy CLI command
echo "Running Codacy CLI..."
echo "Command: $COMMAND"
echo "File Path: $FILE_PATH"
echo "Tool: $TOOL"
echo "Format: $FORMAT"

# Run the appropriate command
if [[ "$COMMAND" == "analyze" ]]; then
  CMD="bash <(curl -Ls https://raw.githubusercontent.com/codacy/codacy-cli-v2/main/codacy-cli.sh) analyze"
  
  if [[ -n "$FILE_PATH" ]]; then
    CMD="$CMD $FILE_PATH"
  fi
  
  if [[ -n "$TOOL" ]]; then
    CMD="$CMD --tool $TOOL"
  fi
  
  CMD="$CMD --format $FORMAT"
  
  echo "Executing: $CMD"
  eval $CMD | tee "$SCRIPT_DIR/logs/codacy-cli.log"
elif [[ "$COMMAND" == "install" ]]; then
  bash <(curl -Ls https://raw.githubusercontent.com/codacy/codacy-cli-v2/main/codacy-cli.sh) install | tee "$SCRIPT_DIR/logs/codacy-cli.log"
else
  echo "Unknown command: $COMMAND"
  exit 1
fi
