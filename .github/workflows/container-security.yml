name: Container Security Scanning

on:
  push:
    branches: [main, develop]
    paths:
      - 'apps/**'
      - 'Dockerfile*'
      - 'docker-compose*'
  pull_request:
    branches: [main, develop]
    paths:
      - 'apps/**'
      - 'Dockerfile*'
      - 'docker-compose*'
  schedule:
    - cron: '0 6 * * 1' # Weekly on Monday at 6 AM UTC

permissions:
  contents: read
  security-events: write
  actions: read

env:
  REGISTRY: gcr.io
  GCP_PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}

jobs:
  scan-containers:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        app:
          - social-api
          - crm-api
          - cms-api
          - reviews-api
          - frontend-agents
    steps:
      - name: Checkout code
        uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1

      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@2b51285786e4a1181b7a0b3a6f50d8390f18b788 # v3.2.0

      - name: Authenticate to GCP
        uses: google-github-actions/auth@55bd3a7c6e2ae7e6884bfe4c7bf685fe519a5a36 # v2.1.2
        with:
          workload_identity_provider: ${{ secrets.GCP_WIF_PROVIDER }}
          service_account: ${{ secrets.GCP_SERVICE_ACCOUNT }}

      - name: Configure Docker for GCR
        run: gcloud auth configure-docker

      - name: Cache Docker layers
        uses: actions/cache@13aacd865c20de90d75de3b17b4d668cea53b85f # v4.0.0
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ matrix.app }}-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-${{ matrix.app }}-
            ${{ runner.os }}-buildx-

      - name: Build container image
        uses: docker/build-push-action@4a13e500e55cf31b7a5d59a38ab2040ab0f42f56 # v5.1.0
        with:
          context: .
          file: ${{ contains(fromJson('["Dockerfile", ""]'), env.DOCKERFILE_PATH) && env.DOCKERFILE_PATH || format('apps/{0}/Dockerfile', matrix.app) }}
          push: false
          tags: ${{ env.REGISTRY }}/${{ env.GCP_PROJECT_ID }}/${{ matrix.app }}:${{ github.sha }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache-new
          outputs: type=docker
          build-args: |
            NODE_ENV=production
        env:
          DOCKERFILE_PATH: ${{ (fileExists(format('apps/cloud-functions/{0}/Dockerfile', matrix.app)) && format('apps/cloud-functions/{0}/Dockerfile', matrix.app)) || (fileExists(format('apps/{0}/Dockerfile', matrix.app)) && format('apps/{0}/Dockerfile', matrix.app)) || '' }}

      # Temp fix for cache
      - name: Move cache
        run: |
          rm -rf /tmp/.buildx-cache
          mv /tmp/.buildx-cache-new /tmp/.buildx-cache

      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@7bd962026ce9d96ae8baf32d04e4d90eafa17d38 # v0.17.0
        with:
          image-ref: ${{ env.REGISTRY }}/${{ env.GCP_PROJECT_ID }}/${{ matrix.app }}:${{ github.sha }}
          format: 'sarif'
          output: 'trivy-results-${{ matrix.app }}.sarif'
          severity: 'CRITICAL,HIGH,MEDIUM'
          timeout: '10m0s'
          ignore-unfixed: true

      - name: Upload Trivy scan results to GitHub Security tab
        uses: github/codeql-action/upload-sarif@3c3833e0f8c1c83d449a7478aa59c036a9165498 # v3.29.11
        if: always()
        with:
          sarif_file: 'trivy-results-${{ matrix.app }}.sarif'
          category: 'container-${{ matrix.app }}'

      - name: Run Trivy for JSON output
        uses: aquasecurity/trivy-action@7bd962026ce9d96ae8baf32d04e4d90eafa17d38 # v0.17.0
        with:
          image-ref: ${{ env.REGISTRY }}/${{ env.GCP_PROJECT_ID }}/${{ matrix.app }}:${{ github.sha }}
          format: 'json'
          output: 'trivy-results-${{ matrix.app }}.json'
          timeout: '5m0s'
          
      - name: Generate vulnerability report
        if: always()
        run: |
          echo "## Container Security Scan Results for ${{ matrix.app }}" > report-${{ matrix.app }}.md
          echo "### Scan performed on $(date)" >> report-${{ matrix.app }}.md
          echo "" >> report-${{ matrix.app }}.md
          
          if [ -f "trivy-results-${{ matrix.app }}.json" ]; then
            CRITICAL=$(jq '.Results[].Vulnerabilities[] | select(.Severity=="CRITICAL") | .VulnerabilityID' trivy-results-${{ matrix.app }}.json | wc -l)
            HIGH=$(jq '.Results[].Vulnerabilities[] | select(.Severity=="HIGH") | .VulnerabilityID' trivy-results-${{ matrix.app }}.json | wc -l)
            MEDIUM=$(jq '.Results[].Vulnerabilities[] | select(.Severity=="MEDIUM") | .VulnerabilityID' trivy-results-${{ matrix.app }}.json | wc -l)
            
            echo "| Severity | Count |" >> report-${{ matrix.app }}.md
            echo "|----------|-------|" >> report-${{ matrix.app }}.md
            echo "| CRITICAL | $CRITICAL |" >> report-${{ matrix.app }}.md
            echo "| HIGH     | $HIGH |" >> report-${{ matrix.app }}.md
            echo "| MEDIUM   | $MEDIUM |" >> report-${{ matrix.app }}.md
            echo "" >> report-${{ matrix.app }}.md
            
            if [ $CRITICAL -gt 0 ]; then
              echo "### Critical Vulnerabilities" >> report-${{ matrix.app }}.md
              echo "" >> report-${{ matrix.app }}.md
              echo "| ID | Package | Version | Fixed Version | Title |" >> report-${{ matrix.app }}.md
              echo "|----|---------|---------|--------------:|-------|" >> report-${{ matrix.app }}.md
              
              jq -r '.Results[].Vulnerabilities[] | select(.Severity=="CRITICAL") | "| \(.VulnerabilityID) | \(.PkgName) | \(.InstalledVersion) | \(.FixedVersion // "Not Fixed") | \(.Title) |"' trivy-results-${{ matrix.app }}.json >> report-${{ matrix.app }}.md
            fi
          else
            echo "No scan results found" >> report-${{ matrix.app }}.md
          fi
          
      - name: Upload vulnerability report
        if: always()
        uses: actions/upload-artifact@0ad4c6ed3e171a3811d54af8513112f386372766 # v4.3.0
        with:
          name: security-report-${{ matrix.app }}
          path: report-${{ matrix.app }}.md
          retention-days: 30

      - name: Check for critical vulnerabilities
        run: |
          CRITICAL_COUNT=$(jq '.Results[]?.Vulnerabilities[]? | select(.Severity == "CRITICAL") | length' trivy-results-${{ matrix.app }}.json | wc -l)
          HIGH_COUNT=$(jq '.Results[]?.Vulnerabilities[]? | select(.Severity == "HIGH") | length' trivy-results-${{ matrix.app }}.json | wc -l)
          
          echo "Critical vulnerabilities: $CRITICAL_COUNT"
          echo "High vulnerabilities: $HIGH_COUNT"
          
          if [ "$CRITICAL_COUNT" -gt 0 ]; then
            echo "��� Critical vulnerabilities found in ${{ matrix.app }}"
            jq '.Results[]?.Vulnerabilities[]? | select(.Severity == "CRITICAL")' trivy-results-${{ matrix.app }}.json
            exit 1
          fi
          
          if [ "$HIGH_COUNT" -gt 5 ]; then
            echo "⚠️ Too many high-severity vulnerabilities found in ${{ matrix.app }} ($HIGH_COUNT > 5)"
            exit 1
          fi
          
          echo "✅ Container security scan passed for ${{ matrix.app }}"

      - name: Upload scan results
        uses: actions/upload-artifact@0ad4c6ed3e171a3811d54af8513112f386372766 # v4.3.0
        if: always()
        with:
          name: trivy-results-${{ matrix.app }}
          path: |
            trivy-results-${{ matrix.app }}.sarif
            trivy-results-${{ matrix.app }}.json
          retention-days: 30

  security-summary:
    runs-on: ubuntu-latest
    needs: scan-containers
    if: always()
    steps:
      - name: Download all scan results
        uses: actions/download-artifact@694a571876d6598ad8b4a2365a1d88cd1a5c6473 # v4.0.0
        with:
          path: scan-results

      - name: Generate security summary
        run: |
          echo "# Container Security Scan Summary" > security-summary.md
          echo "" >> security-summary.md
          echo "**Scan Date:** $(date -u)" >> security-summary.md
          echo "**Commit:** ${{ github.sha }}" >> security-summary.md
          echo "" >> security-summary.md
          
          for app in social-api crm-api cms-api reviews-api frontend-agents; do
            if [ -f "scan-results/trivy-results-$app/trivy-results-$app.json" ]; then
              echo "## $app" >> security-summary.md
              
              CRITICAL=$(jq '.Results[]?.Vulnerabilities[]? | select(.Severity == "CRITICAL") | length' "scan-results/trivy-results-$app/trivy-results-$app.json" | wc -l)
              HIGH=$(jq '.Results[]?.Vulnerabilities[]? | select(.Severity == "HIGH") | length' "scan-results/trivy-results-$app/trivy-results-$app.json" | wc -l)
              MEDIUM=$(jq '.Results[]?.Vulnerabilities[]? | select(.Severity == "MEDIUM") | length' "scan-results/trivy-results-$app/trivy-results-$app.json" | wc -l)
              
              echo "- **Critical:** $CRITICAL" >> security-summary.md
              echo "- **High:** $HIGH" >> security-summary.md
              echo "- **Medium:** $MEDIUM" >> security-summary.md
              echo "" >> security-summary.md
            fi
          done

      - name: Upload security summary
        uses: actions/upload-artifact@0ad4c6ed3e171a3811d54af8513112f386372766 # v4.3.0
        with:
          name: security-summary
          path: security-summary.md
          retention-days: 90