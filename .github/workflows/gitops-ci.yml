name: GitOps CI/CD

on:
  push:
    branches:
      - main
      - staging

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Install pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 8.15.4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'pnpm'

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Derive SHAs
        uses: nrwl/nx-set-shas@v4

      - name: Lint Code
        run: pnpm nx affected:lint --base=$NX_BASE --head=$NX_HEAD

      - name: Build Projects
        run: pnpm nx affected:build --base=$NX_BASE --head=$NX_HEAD

      - name: Run Tests
        run: pnpm nx affected:test --base=$NX_BASE --head=$NX_HEAD

      - name: Upload Coverage Artifact
        uses: actions/upload-artifact@v4
        with:
          name: coverage-report
          path: coverage/

  deploy-staging:
    needs: build-and-test
    if: github.ref == 'refs/heads/staging'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: 'Authenticate to Google Cloud'
        uses: 'google-github-actions/auth@v2'
        with:
          credentials_json: '${{ secrets.GCP_SA_KEY }}'

      - name: 'Set up Cloud SDK'
        uses: 'google-github-actions/setup-gcloud@v2'

      - name: 'Use gcloud CLI'
        run: 'gcloud info'

      - name: Deploy to Staging
        run: |
          cd infra/terraform
          terraform init
          terraform workspace select staging || terraform workspace new staging
          terraform apply -auto-approve -var-file="staging.auto.tfvars"

  approve-for-production:
    needs: deploy-staging
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    environment:
      name: production
      url: https://console.cloud.google.com/
    steps:
      - name: Manual Approval
        uses: trstringer/manual-approval@v1
        with:
          secret: ${{ secrets.APPROVERS_SECRET }}
          approvers: ${{ secrets.APPROVERS }}
          minimum-approvals: 1
          issue-title: "Deploy to Production"
          issue-body: "Please approve the deployment to production."


  deploy-production:
    needs: approve-for-production
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: 'Authenticate to Google Cloud'
        uses: 'google-github-actions/auth@v2'
        with:
          credentials_json: '${{ secrets.GCP_SA_KEY }}'

      - name: 'Set up Cloud SDK'
        uses: 'google-github-actions/setup-gcloud@v2'

      - name: 'Use gcloud CLI'
        run: 'gcloud info'

      - name: Deploy to Production
        run: |
          cd infra/terraform
          terraform init
          terraform workspace select production || terraform workspace new production
          terraform apply -auto-approve -var-file="prod.auto.tfvars"

