name: TypeScript Validation
permissions:
  contents: read

on:
  push:
    branches:
      - main
      - develop
    paths:
      - '**/*.ts'
      - '**/*.tsx'
      - 'tsconfig*.json'
      - '.github/workflows/typescript-validation.yml'
  pull_request:
    branches:
      - main
      - develop
    paths:
      - '**/*.ts'
      - '**/*.tsx'
      - 'tsconfig*.json'
      - '.github/workflows/typescript-validation.yml'
  workflow_dispatch:

env:
  NODE_VERSION: '20'
  PNPM_VERSION: '8.6.0'

jobs:
  # ============================================================================
  # TypeScript Compilation Check
  # ============================================================================
  typescript-check:
    name: TypeScript Compilation Check
    runs-on: ubuntu-latest
    timeout-minutes: 10
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@b4ffde65f42bc1c9890d4047f6d0ff69e889a4ca # v4
        with:
          fetch-depth: 1

      - name: Setup Node.js
        uses: actions/setup-node@b4ffde65f42bc1c9890d4047f6d0ff69e889a4ca # v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'pnpm'
      - name: Install pnpm
        uses: pnpm/action-setup@v2.2.2
        with:
          version: ${{ env.PNPM_VERSION }}
      - name: Get pnpm store directory
        id: pnpm-cache
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path)" >> $GITHUB_OUTPUT

      - name: Setup pnpm cache
        uses: actions/cache@704facf57e6136b1bc63b828d79edcd491f0ee84 # v4
        with:
          path: ${{ steps.pnpm-cache.outputs.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: TypeScript Compilation Check
        run: |
          echo "🔍 Checking TypeScript compilation..."
          pnpm tsc --noEmit
          echo "✅ TypeScript compilation check completed"

      - name: Project Reference Check
        run: |
          echo "🔍 Checking TypeScript project references..."
          pnpm exec nx run-many --target=tsc --all --parallel=3 || echo "::warning::Some TypeScript project references may have issues"
          echo "✅ Project reference check completed"

  # ============================================================================
  # API Type Consistency
  # ============================================================================
  api-type-consistency:
    name: API Type Consistency
    runs-on: ubuntu-latest
    timeout-minutes: 5
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@b4ffde65f42bc1c9890d4047f6d0ff69e889a4ca # v4
        with:
          fetch-depth: 1

      - name: Setup Node.js
        uses: actions/setup-node@b4ffde65f42bc1c9890d4047f6d0ff69e889a4ca # v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Install pnpm
        uses: pnpm/action-setup@4fe8674f344d65cf7384fc21ba97c2b05fd8df75 # v4.1.0
        with:
          version: ${{ env.PNPM_VERSION }}

      - name: Get pnpm store directory
        id: pnpm-cache
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path)" >> $GITHUB_OUTPUT

      - name: Setup pnpm cache
        uses: actions/cache@704facf57e6136b1bc63b828d79edcd491f0ee84 # v4
        with:
          path: ${{ steps.pnpm-cache.outputs.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

        run: pnpm install --frozen-lockfile

      - name: Check API Type Consistency
        run: |
          echo "🔍 Checking API type consistency..."
          find libs -type f -name "*.ts" \
            -not -path "*/node_modules/*" \
            -not -path "*/dist/*" \
            -print0 \
            | xargs -0 grep -l "interface" \
            | while IFS= read -r file; do
                echo "Checking $file..."
                pnpm tsc "$file" --noEmit --skipLibCheck || echo "Type error in $file"
              done
          echo "✅ API type consistency check completed"
  # ============================================================================
  # Type Coverage Check
  # ============================================================================
  type-coverage:
    name: TypeScript Type Coverage
    runs-on: ubuntu-latest
    timeout-minutes: 5

    steps:
      - name: Checkout repository
        uses: actions/checkout@b4ffde65f42bc1c9890d4047f6d0ff69e889a4ca # v4
        with:
          fetch-depth: 1

      - name: Setup Node.js
        uses: actions/setup-node@b4ffde65f42bc1c9890d4047f6d0ff69e889a4ca # v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Install pnpm
        uses: pnpm/action-setup@4fe8674f344d65cf7384fc21ba97c2b05fd8df75 # v4.1.0
        with:
          version: ${{ env.PNPM_VERSION }}

      - name: Install dependencies
      - name: Get pnpm store directory
        id: pnpm-cache
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path)" >> $GITHUB_OUTPUT

      - name: Setup pnpm cache
        uses: actions/cache@704facf57e6136b1bc63b828d79edcd491f0ee84 # v4
        with:
          path: ${{ steps.pnpm-cache.outputs.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

        run: pnpm install --frozen-lockfile

      - name: Check type coverage
        run: |
          echo "🔍 Checking TypeScript type coverage..."
          pnpm dlx type-coverage --detail --at-least 85 --ignore-files "**/*.spec.ts,**/*.test.ts,**/*.d.ts" --ignore-catch
          echo "✅ Type coverage check completed"
  # ============================================================================
  # Dead Code Detection
  # ============================================================================
  dead-code-detection:
    name: Dead Code Detection
    runs-on: ubuntu-latest
    timeout-minutes: 5

    steps:
      - name: Checkout repository
        uses: actions/checkout@b4ffde65f42bc1c9890d4047f6d0ff69e889a4ca # v4
        with:
          fetch-depth: 1

      - name: Setup Node.js
        uses: actions/setup-node@b4ffde65f42bc1c9890d4047f6d0ff69e889a4ca # v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Install pnpm
        uses: pnpm/action-setup@4fe8674f344d65cf7384fc21ba97c2b05fd8df75 # v4.1.0
        with:
          version: ${{ env.PNPM_VERSION }}

      - name: Install dependencies
      - name: Get pnpm store directory
        id: pnpm-cache
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path)" >> $GITHUB_OUTPUT

      - name: Setup pnpm cache
        uses: actions/cache@704facf57e6136b1bc63b828d79edcd491f0ee84 # v4
        with:
          path: ${{ steps.pnpm-cache.outputs.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

        run: pnpm install --frozen-lockfile

      - name: Detect unused exports
        run: |
          echo "🔍 Detecting unused exports..."
          pnpm dlx ts-prune --error || echo "📝 Some unused exports detected (review recommended)"
          echo "✅ Dead code detection completed"
